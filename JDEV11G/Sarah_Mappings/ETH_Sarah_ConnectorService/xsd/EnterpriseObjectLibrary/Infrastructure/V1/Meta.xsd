<?xml version="1.0" encoding="UTF-8"?>
<!--  
** Oracle Corporation  **  

** AIA Enterprise Object Library **  

** Version 2.3 **  

** Date: Sept 2009 **    

 Copyright (c) 2007, 2010, Oracle and/or its affiliates. All rights reserved. 

License information for this file is provided in the file   "Oracle AIA EBO License.txt" that is provided with this package.           

XML Schema                Name: \EnterpriseObjects\Infrastructure\V1\Meta.xsd  

-->
<!-- ====================================================================== -->
<!-- =====      Oracle EBO Meta Schema Module            ===== -->
<!-- ====================================================================== -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:corecomcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/Common/V2" xmlns="http://xmlns.oracle.com/EnterpriseObjects/Core/Common/V2" xmlns:wsa="http://schemas.xmlsoap.org/ws/2003/03/addressing" xmlns:xacml-context="urn:oasis:names:tc:xacml:2.0:context:schema:cd:04" xmlns:xacml="urn:oasis:names:tc:xacml:2.0:policy:schema:cd:04" targetNamespace="http://xmlns.oracle.com/EnterpriseObjects/Core/Common/V2" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.3">
	<!-- ====================================================================== -->
	<!-- =====      Imports                                                                                                      ===== -->
	<!-- ====================================================================== -->
	<xsd:include schemaLocation="CodeLists.xsd"/>
	<xsd:include schemaLocation="DataTypes.xsd"/>
	<xsd:import namespace="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/Common/V2" schemaLocation="../Custom/V1/CustomMeta.xsd"/>
	<xsd:import namespace="http://schemas.xmlsoap.org/ws/2003/03/addressing" schemaLocation="WS-Addressing.xsd"/>
	<xsd:import namespace="urn:oasis:names:tc:xacml:2.0:context:schema:cd:04" schemaLocation="access_control-xacml-2.0-context-schema-cd-04.xsd"/>
	<xsd:import namespace="urn:oasis:names:tc:xacml:2.0:policy:schema:cd:04" schemaLocation="access_control-xacml-2.0-policy-schema-cd-04.xsd"/>
	<!-- ====================================================================== -->
	<!-- =====      EBM Header                                                                                               ===== -->
	<!-- ====================================================================== -->
	<xsd:complexType name="EBMType">
		<xsd:sequence>
			<xsd:element ref="EBMHeader"/>
		</xsd:sequence>
		<xsd:attribute name="versionID" type="StringType" use="optional"/>
		<xsd:attribute name="languageCode" type="LanguageCodeType" use="optional" default="en-US"/>
	</xsd:complexType>
	<xsd:element name="EBM" type="EBMType"/>
	<!---->
	<xsd:complexType name="EBMHeaderType">
		<xsd:sequence>
			<xsd:element name="EBMID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="EBMName" type="NameType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="EBOName" type="NameType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="CreationDateTime" type="DateTimeType" minOccurs="0"/>
			<xsd:element name="RequestEBMID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="VerbCode" type="CodeType" minOccurs="0"/>
			<xsd:element ref="MessageProcessingInstruction" minOccurs="0"/>
			<xsd:element ref="Sender" minOccurs="0"/>
			<xsd:element ref="Target" minOccurs="0"/>
			<xsd:element ref="BusinessScope" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="EBMTracking" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="FaultNotification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="MessageBatch" minOccurs="0"/>
			<xsd:element ref="xacml-context:Request" minOccurs="0"/>
			<xsd:element ref="B2BProfile" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>If the EBM is being used in a B2B flow, i.e. is used to either trigger an outbound Provider B2BCS Impl or is generated by an inbound Requestor B2BCS Impl, this element captures the sending and receiving trading partner information</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Custom" type="corecomcust:CustomEBMHeaderType" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="languageCode" type="LanguageCodeType"/>
	</xsd:complexType>
	<xsd:element name="EBMHeader" type="EBMHeaderType"/>
	<!---->
	<xsd:complexType name="ApplicationType">
		<xsd:sequence>
			<xsd:element name="ID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="Version" type="StringType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="Application" type="ApplicationType"/>
	<!---->
	<xsd:complexType name="MessageProcessingInstructionType">
		<xsd:sequence>
			<xsd:element name="EnvironmentCode" type="CodeType" minOccurs="0"/>
			<xsd:element name="DefinitionID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="InstanceID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="Custom" type="corecomcust:CustomMessageProcessingInstructionType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="MessageProcessingInstruction" type="MessageProcessingInstructionType"/>
	<!---->
	<xsd:complexType name="ObjectCrossReferenceType">
		<xsd:sequence>
			<xsd:element ref="SenderObjectIdentification" minOccurs="0"/>
			<xsd:element name="EBOID" type="IdentifierType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="ObjectCrossReference" type="ObjectCrossReferenceType"/>
	<xsd:element name="SenderObjectIdentification" type="IdentificationType"/>
	<!---->
	<xsd:complexType name="SenderType">
		<xsd:sequence>
			<xsd:element name="ID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="Description" type="TextType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="IPAddress" type="URIType" minOccurs="0"/>
			<xsd:element name="SenderMessageID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="TransactionCode" type="CodeType" minOccurs="0"/>
			<xsd:element name="CallingServiceName" type="NameType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="Application" minOccurs="0"/>
			<xsd:element name="ContactName" type="NameType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="ContactEmail" type="URIType" minOccurs="0"/>
			<xsd:element name="ContactPhoneNumber" type="StringType" minOccurs="0"/>
			<xsd:element ref="ESBHeaderExtension" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ObjectCrossReference" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="WSAddress" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>     </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Custom" type="corecomcust:CustomSenderType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="Sender" type="SenderType"/>
	<!---->
	<xsd:complexType name="WSAddressType">
		<xsd:sequence>
			<xsd:element ref="wsa:From" minOccurs="0"/>
			<xsd:element ref="wsa:To" minOccurs="0"/>
			<xsd:element ref="wsa:ReplyTo" minOccurs="0"/>
			<xsd:element ref="wsa:FaultTo" minOccurs="0"/>
			<xsd:element ref="wsa:Recipient" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="WSAddress" type="WSAddressType">
		<xsd:annotation>
			<xsd:documentation>Placeholder to transport WS-Addressing information     </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!---->
	<xsd:complexType name="IntermediateMessageHopType">
		<xsd:annotation>
			<xsd:documentation>This component allows for capturing of messaging properties in a multi-hopping messaging. The information can be used to support, for example, guaranteed delivery and auto recovery/resubmit of faulted messages. Note that the component does not capture the information of the first hop, the originator, because other fields in the EBMHeader already captures those such as the Sender and EBMID element.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="SenderResourceTypeCode" type="CodeType" minOccurs="0"/>
			<xsd:element name="SenderResourceID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="SenderMessageID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="Custom" type="corecomcust:CustomIntermediateMessageHopType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="IntermediateMessageHop" type="IntermediateMessageHopType">
		<xsd:annotation>
			<xsd:documentation>This component allows for capturing of messaging properties in a multi-hopping messaging. The information can be used to support, for example, guaranteed delivery and auto recovery/resubmit of faulted messages. Note that the component does not capture the information of the first hop, the originator, because other fields in the EBMHeader already captures those such as the Sender and EBMID element.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!---->
	<xsd:complexType name="EBMTrackingType">
		<xsd:sequence>
			<xsd:element name="SequenceNumber" type="NumericType" minOccurs="0"/>
			<xsd:element name="ExecutionUnitID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="ExecutionUnitName" type="NameType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="ImplementationCode" type="ImplementationCodeType" minOccurs="0"/>
			<xsd:element name="ActivityDateTime" type="DateTimeType" minOccurs="0"/>
			<xsd:element ref="IntermediateMessageHop" minOccurs="0"/>
			<xsd:element name="Custom" type="corecomcust:CustomEBMTrackingType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="EBMTracking" type="EBMTrackingType"/>
	<!---->
	<xsd:complexType name="TargetType">
		<xsd:sequence>
			<xsd:element name="ID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="OverrideRoutingIndicator" type="IndicatorType" minOccurs="0"/>
			<xsd:element name="ServiceName" type="NameType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="ApplicationTypeCode" type="CodeType" minOccurs="0"/>
			<xsd:element name="EndPointURI" type="URIType" minOccurs="0"/>
			<xsd:element name="Custom" type="corecomcust:CustomTargetType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="Target" type="TargetType"/>
	<!---->
	<xsd:complexType name="BusinessScopeType">
		<xsd:sequence>
			<xsd:element name="ID" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Name of the process       </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="InstanceID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="BusinessScopeTypeCode" type="CodeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Indicates the type of the process       </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="EnterpriseServiceName" type="NameType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Name of the Enterprise business process service name       </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="EnterpriseServiceOperationName" type="CodeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Action of the Enterprise busines serivce       </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Custom" type="corecomcust:CustomBusinessScopeType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="BusinessScope" type="BusinessScopeType"/>
	<!---->
	<xsd:complexType name="ESBHeaderExtensionType">
		<xsd:sequence>
			<xsd:element name="Name" type="NameType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="DataTypeCode" type="CodeType" minOccurs="0"/>
			<xsd:element name="Value" type="StringType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="ESBHeaderExtension" type="ESBHeaderExtensionType"/>
	<!---->
	<!-- ====================================================================== -->
	<!-- =====          Verbs                                                                                                    =====-->
	<!-- ====================================================================== -->
	<xsd:complexType name="CreateType">
		<xsd:attribute name="responseCode" type="ResponseCodeType" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="CreateResponseType"/>
	<xsd:element name="Create" type="CreateType"/>
	<xsd:element name="CreateResponse" type="CreateResponseType"/>
	<!---->
	<xsd:complexType name="DeleteType">
		<xsd:attribute name="responseCode" type="ResponseCodeType" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="DeleteResponseType"/>
	<xsd:element name="Delete" type="DeleteType"/>
	<xsd:element name="DeleteResponse" type="DeleteResponseType"/>
	<!---->
	<xsd:complexType name="ProcessType">
		<xsd:attribute name="operation" type="StringType" use="optional"/>
		<xsd:attribute name="responseCode" type="ResponseCodeType" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="ProcessResponseType"/>
	<xsd:element name="Process" type="ProcessType"/>
	<xsd:element name="ProcessResponse" type="ProcessResponseType"/>
	<!---->
	<xsd:complexType name="ComplexQueryType">
		<xsd:sequence>
			<xsd:element name="QueryCode" type="CodeType" minOccurs="0"/>
			<xsd:element name="ResponseCode" type="CodeType" minOccurs="0"/>
			<xsd:element ref="QueryCriteria" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ResponseFilter" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="getAllTranslationsIndicator" type="IndicatorType" use="optional"/>
		<xsd:attribute name="recordSetStart" type="PositiveIntegerType" use="optional"/>
		<xsd:attribute name="recordSetCount" type="PositiveIntegerType" use="optional"/>
		<xsd:attribute name="maxItems" type="PositiveIntegerType" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="QueryCriteriaType">
		<xsd:sequence>
			<xsd:element name="QualifiedElementPath" type="StringType" minOccurs="0"/>
			<xsd:element ref="QueryExpression" minOccurs="0"/>
			<xsd:element ref="SortElement" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ValueExpressionType">
		<xsd:sequence>
			<xsd:element name="ElementPath" type="StringType"/>
			<xsd:element name="Value" type="StringType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="queryOperatorCode" type="QueryOperatorCodeType" use="optional" default="EQUALS"/>
	</xsd:complexType>
	<xsd:complexType name="ResponseFilterType">
		<xsd:sequence>
			<xsd:element name="QualifiedElementPath" type="StringType" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="exclusionIndicator" type="IndicatorType" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="SortCriteriaType">
		<xsd:sequence>
			<xsd:element ref="SortElement" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="SortElementType">
		<xsd:simpleContent>
			<xsd:extension base="StringType">
				<xsd:attribute name="sortDirectionCode" type="SortDirectionCodeType" use="optional" default="ASC"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="QueryExpressionType">
		<xsd:choice>
			<xsd:sequence>
				<xsd:element ref="ValueExpression" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:sequence>
				<xsd:element ref="QueryExpression" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:choice>
		<xsd:attribute name="logicalOperatorCode" type="LogicalOperatorCodeType" use="optional" default="AND"/>
		<xsd:attribute name="logicalNegationIndicator" type="IndicatorType" use="optional"/>
	</xsd:complexType>
	<xsd:element name="QueryCriteria" type="QueryCriteriaType"/>
	<xsd:element name="ValueExpression" type="ValueExpressionType"/>
	<xsd:element name="ResponseFilter" type="ResponseFilterType"/>
	<xsd:element name="SortCriteria" type="SortCriteriaType"/>
	<xsd:element name="SortElement" type="SortElementType"/>
	<xsd:element name="QueryExpression" type="QueryExpressionType"/>
	<xsd:complexType name="QueryResponseType">
		<xsd:annotation>
			<xsd:documentation>The relevanceScore attribute of QueryResponse can be used to indicate a ranking or scoring of each response instance against the original query request</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="relevanceScore" type="NumericType" use="optional"/>
	</xsd:complexType>
	<xsd:element name="QueryResponse" type="QueryResponseType"/>
	<!---->
	<xsd:complexType name="SimpleQueryType">
		<xsd:sequence>
			<xsd:element name="QueryCode" type="CodeType" minOccurs="0"/>
			<xsd:element name="ResponseCode" type="CodeType" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="getAllTranslationsIndicator" type="IndicatorType" use="optional"/>
	</xsd:complexType>
	<!---->
	<xsd:complexType name="UpdateType">
		<xsd:attribute name="responseCode" type="ResponseCodeType" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="UpdateResponseType"/>
	<xsd:element name="Update" type="UpdateType"/>
	<xsd:element name="UpdateResponse" type="UpdateResponseType"/>
	<!---->
	<xsd:complexType name="SyncType">
		<xsd:attribute name="syncActionCode" type="SyncActionCodeType" use="optional"/>
		<xsd:attribute name="responseCode" type="ResponseCodeType" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="SyncResponseType">
		<xsd:sequence>
			<xsd:element name="StatusCode" type="CodeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>To indicate the status of each response instance against the original sync request</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ResponseMessage" type="TextType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>A free form message used to capture information or comments in the sync response</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="Sync" type="SyncType"/>
	<xsd:element name="SyncResponse" type="SyncResponseType"/>
	<!---->
	<xsd:complexType name="ValidateType">
		<xsd:attribute name="responseCode" type="ResponseCodeType" use="optional"/>
	</xsd:complexType>
	<xsd:element name="Validate" type="ValidateType"/>
	<xsd:complexType name="ValidateResponseType"/>
	<xsd:element name="ValidateResponse" type="ValidateResponseType"/>
	<!-- ====================================================================== -->
	<!-- =====          Fault Element                                     ===== -->
	<!-- ====================================================================== -->
	<xsd:complexType name="FaultType">
		<xsd:sequence>
			<xsd:element ref="EBMReference" minOccurs="0"/>
			<xsd:element ref="B2BMReference" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>B2B related information for the failed transaction.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element ref="FaultNotification" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="languageCode" type="LanguageCodeType" use="optional" default="en-US"/>
	</xsd:complexType>
	<xsd:complexType name="FaultNotificationType">
		<xsd:sequence>
			<xsd:element name="BusinessComponentID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="ReportingDateTime" type="DateTimeType" minOccurs="0"/>
			<xsd:element name="CorrectiveAction" type="TextType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="FaultMessage" minOccurs="0"/>
			<xsd:element ref="FaultingService" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="FaultMessageType">
		<xsd:sequence>
			<xsd:element name="Code" type="CodeType" minOccurs="0"/>
			<xsd:element name="Text" type="TextType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="Severity" type="CodeType" minOccurs="0"/>
			<xsd:element name="Stack" type="TextType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="ApplicationFaultData" type="xsd:anyType" minOccurs="0"/>
			<xsd:element ref="IntermediateMessageHop" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="FaultingServiceType">
		<xsd:sequence>
			<xsd:element name="ID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="ImplementationCode" type="ImplementationCodeType" minOccurs="0"/>
			<xsd:element name="InstanceID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="ExecutionContextID" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Also known as ECID in SOA Suite. This is an ID generated for a group of service invocations/executions</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="Fault" type="FaultType">
		<xsd:annotation>
			<xsd:documentation>  </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="FaultNotification" type="FaultNotificationType"/>
	<xsd:element name="FaultMessage" type="FaultMessageType"/>
	<xsd:element name="FaultingService" type="FaultingServiceType"/>
	<!-- ====================================================================== -->
	<!-- =====          Reference Components                                                                         =====-->
	<!-- ====================================================================== -->
	<xsd:complexType name="SenderReferenceType">
		<xsd:sequence>
			<xsd:element name="ID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="SenderMessageID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="TransactionCode" type="CodeType" minOccurs="0"/>
			<xsd:element ref="ObjectCrossReference" minOccurs="0"/>
			<xsd:element ref="Application" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="SenderReference" type="SenderReferenceType"/>
	<xsd:complexType name="BusinessScopeReferenceType">
		<xsd:sequence>
			<xsd:element name="ID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="InstanceID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="EnterpriseServiceName" type="NameType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="EnterpriseServiceOperationName" type="NameType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="BusinessScopeReference" type="BusinessScopeReferenceType"/>
	<xsd:complexType name="EBMReferenceType">
		<xsd:sequence>
			<xsd:element name="EBMID" type="IdentifierType" minOccurs="0"/>
			<xsd:element name="EBMName" type="NameType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="EBOName" type="NameType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="VerbCode" type="CodeType" minOccurs="0"/>
			<xsd:element ref="BusinessScopeReference" minOccurs="0"/>
			<xsd:element ref="SenderReference" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="EBMReference" type="EBMReferenceType"/>
	<!-- ====================================================================== -->
	<!--  =====       Identification Definition                                                                             =====      -->
	<!-- ====================================================================== -->
	<xsd:complexType name="IdentificationType">
		<xsd:sequence>
			<xsd:element name="BusinessComponentID" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Unique Key for the application
agnostic representation of the objectinstance. Business Documents generated
by AIA applications will have the
BusinessComponentID necessarily populated.

The BusinessComponentID will be generated using the API provided by AIA Infrastructure</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ID" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Business Friendly Identifier found in the participating application for this object instance. Business documents generated by AIA applications will have these populated wherever they are applicable. PO Number, Order Number are some of the examples</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ContextID" type="IdentifierType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Optional element to identify additional qualifiers for the ID. Used in the case of multi-part keys - for example if an Item is unique within a set, then the Item Number would be the ID and the Set ID value would be a ContextID value</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element ref="ApplicationObjectKey" minOccurs="0"/>
			<xsd:element ref="AlternateObjectKey" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="Revision" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="CodeIdentificationType">
		<xsd:sequence>
			<xsd:element name="BusinessComponentID" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Unique Key for the application
agnostic representation of the objectinstance. Business Documents generated
by AIA applications will have the
BusinessComponentID necessarily populated.

The BusinessComponentID will be generated using the API provided by AIA Infrastructure</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Code" type="CodeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Business Friendly Identifier found in the participating application for this object instance. Business documents generated by AIA applications will have these populated wherever they are applicable. PO Number, Order Number are some of the examples</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ContextID" type="IdentifierType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Optional element to identify additional qualifiers for the ID. Used in the case of multi-part keys - for example if an Item is unique within a set, then the Item Number would be the ID and the Set ID value would be a ContextID value</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element ref="ApplicationObjectKey" minOccurs="0"/>
			<xsd:element ref="AlternateObjectKey" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="Revision" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ObjectKeyType">
		<xsd:sequence>
			<xsd:element name="ID" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Key Identifier</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ContextID" type="IdentifierType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Key Qualifiers</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="RevisionType">
		<xsd:sequence>
			<xsd:element name="Number" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Unique Number for the revision</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Description" type="TextType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Descriptive information about the revised object</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Code" type="CodeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Code for the revision</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="EffectiveDate" type="DateType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Date at which the revision is effective</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="EffectiveEndDate" type="DateType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Date at which the revision is ineffective</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Label" type="TextType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Label describing the revision</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Reason" type="TextType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Descriptive reason for the revision</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="Identification" type="IdentificationType">
		<xsd:annotation>
			<xsd:documentation>Means of identifying a component or object</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CodeIdentification" type="CodeIdentificationType">
		<xsd:annotation>
			<xsd:documentation>Means of identifying all objects that use a code value for identification</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ObjectKey" type="ObjectKeyType">
		<xsd:annotation>
			<xsd:documentation>Abstract representation of a multi-part key  </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Revision" type="RevisionType">
		<xsd:annotation>
			<xsd:documentation>Means of identifying the revision details of an object or component</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ApplicationObjectKey" type="ObjectKeyType">
		<xsd:annotation>
			<xsd:documentation>Participating Application specific internally generated unique identifier for this object instance. Business Documents generated by AIA applications will have to necessarily populate this information. This would represent the primary key of the object at the participating application</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="AlternateObjectKey" type="ObjectKeyType">
		<xsd:annotation>
			<xsd:documentation>One or more ways of additionally identifying the object's instance. This can be optionally used to capture additional identifying details if necessary.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!-- ====================================================================== -->
	<!---->
	<!-- =================================================================== -->
	<!-- =====                    Custom Content                                                   ===== -->
	<!-- =================================================================== -->
	<xsd:complexType name="BatchParameterType">
		<xsd:sequence>
			<xsd:element name="Name" type="NameType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This is the fixed name of the Custom Element such as Attribute1, Attribute2, etc. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="DataTypeCode" type="CodeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Data Type of the value being expressed</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Value" type="StringType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The value of the custom element</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="BatchParameter" type="BatchParameterType">
		<xsd:annotation>
			<xsd:documentation>This provides a generic structure for a strongly typed Name Value pair.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="MessageBatchType">
		<xsd:sequence>
			<xsd:element name="ID" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The identifier of the batch</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Name" type="NameType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Batch name</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="StatusCode" type="CodeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>To indicate the status of the batch</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ResponseMessage" type="TextType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>A free form message used to capture information or comments in the response</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element ref="BatchParameter" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="MessageBatch" type="MessageBatchType">
		<xsd:annotation>
			<xsd:documentation>This provides a mechanism to capture the batch concept. A batch is a collection of instances which is treated as one entity or processed as a group and has its own identifier and additional information. </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!-- =============================== B2B elements and types : Begins ======================================= -->
	<xsd:complexType name="B2BDocumentTypeType">
		<xsd:sequence>
			<xsd:element name="TypeCode" type="CodeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>B2B document type of the payload element.E.g. X12 850, OAG ProcessPurchaseOrder. The B2B document type is populated in the TypeCode element. The standard information e.g. X12, OAG is populated in the listAgencyID attribute</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Version" type="StringType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Version of the B2B document. E.g. 4010 for X12 850, 9.0 for OAG ProcessPurchaseOrder</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Custom" type="corecomcust:CustomB2BDocumentTypeType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="B2BDocumentType" type="B2BDocumentTypeType"/>
	<xsd:complexType name="B2BMHeaderType">
		<xsd:sequence>
			<xsd:element name="B2BMID" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Unique identifier of the B2B message used to uniquely identify the B2B transaction in the B2B gateway software. E.g. Oracle B2B message identifier</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="CollaborationID" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Unique identifier of the B2B collaboration. A B2B collaboration groups multiple B2B messages which together perform a common business function.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ReplyToMessageID" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>If this B2B message is a acknowledgement to another B2B message, this element contains the B2B message identifier of the original message</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="GatewayID" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Name of the B2B software. E.g. "Oracle B2B". Based on the value of this element, the B2B document can be routed to the correct B2B gateway</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element ref="B2BDocumentType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Information about the B2B document type, standard and version being exchanged between the trading partners using the B2B software</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element ref="SenderTradingPartner" minOccurs="0"/>
			<xsd:element ref="ReceiverTradingPartner" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>The trading partner information as defined in the B2B gateway for the receiver of the B2B document. The multiiple cardinality of the receiver is to support the case when a single document needs to be sent to multiple trading partners, e.g., a shipment document needs to be send to customer as well as a carrier.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Custom" type="corecomcust:CustomB2BMHeaderType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="B2BMHeader" type="B2BMHeaderType"/>
	<xsd:complexType name="B2BMReferenceType">
		<xsd:sequence>
			<xsd:element name="B2BMID" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Unique identifier of the B2B message used to uniquely identify the B2B transaction in the B2B gateway software. E.g. Oracle B2B message identifier</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="CollaborationID" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Unique identifier of the B2B collaboration. A B2B collaboration groups multiple B2B messages which together perform a common business function.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ReplyToMessageID" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>If this B2B message is a acknowledgement to another B2B message, this element contains the B2B message identifier of the original message</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element ref="B2BDocumentType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Information about the B2B document type, standard and version being exchanged between the trading partners using the B2B gateway</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="GatewayID" type="IdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Name of the B2B software. E.g. "Oracle B2B". Based on the value of this element, the B2B document can be routed to the correct B2B gateway</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element ref="SenderTradingPartner" minOccurs="0"/>
			<xsd:element ref="ReceiverTradingPartner" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>The trading partner information as defined in the B2B gateway for the receiver of the B2B document. The multiiple cardinality of the receiver is to support the case when a single document needs to be sent to multiple trading partners, e.g., a shipment document needs to be send to customer as well as a carrier.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Custom" type="corecomcust:CustomB2BMReferenceType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="B2BMReference" type="B2BMReferenceType">
		<xsd:annotation>
			<xsd:documentation>Reference element contains details of the B2B header being referred</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="B2BMType">
		<xsd:sequence>
			<xsd:element ref="B2BMHeader" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Header information describing the B2B document and trading partner identifiers</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Payload" type="xsd:anyType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This element contains the actual B2B document being exchanged between trading partners</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="B2BM" type="B2BMType">
		<xsd:annotation>
			<xsd:documentation>B2B message element. Contains the B2B payload being sent to or received from a remote trading partner and header information describing the B2B document and sending, receiving trading partners</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="B2BProfileType">
		<xsd:sequence>
			<xsd:element ref="SenderTradingPartner" minOccurs="0"/>
			<xsd:element ref="ReceiverTradingPartner" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>The trading partner information as defined in the B2B gateway for the receiver of the B2B document. The multiiple cardinality of the receiver is to support the case when a single document needs to be sent to multiple trading partners, e.g., a shipment document needs to be send to customer as well as a carrier.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Custom" type="corecomcust:CustomB2BProfileType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="B2BProfile" type="B2BProfileType">
		<xsd:annotation>
			<xsd:documentation>Element containing the sending and receiving trading partner information for the B2B document flow</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="SenderTradingPartnerType">
		<xsd:sequence>
			<xsd:element name="TradingPartnerID" type="IdentifierType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>The identification of a B2B trading partner understood across enterprises involved in B2B transactions. The unbounded cardinality of the ID is to support the possibility of different identifier standards used in different applications. For example, DUNS as well as Employer Identification Number (EIN, assigned by the IRS) can be used to identify a business. DUNS may be used in financial applications while EIN may be used in the tax application for a single B2B transaction.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Custom" type="corecomcust:CustomSenderTradingPartnerType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="SenderTradingPartner" type="SenderTradingPartnerType">
		<xsd:annotation>
			<xsd:documentation>The trading partner information as defined in the B2B gateway for the sender of the B2B document.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ReceiverTradingPartnerType">
		<xsd:sequence>
			<xsd:element name="TradingPartnerID" type="IdentifierType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>The identification of a B2B trading partner understood across enterprises involved in B2B transactions. The unbounded cardinality of the ID is to support the possibility of different identifier standards used in different applications. For example, DUNS as well as Employer Identification Number (EIN, assigned by the IRS) can be used to identify a business. DUNS may be used in financial applications while EIN may be used in the tax application for a single B2B transaction.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Custom" type="corecomcust:CustomReceiverTradingPartnerType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="ReceiverTradingPartner" type="ReceiverTradingPartnerType">
		<xsd:annotation>
			<xsd:documentation>The trading partner information as defined in the B2B gateway for the receiver of the B2B document.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!-- ===============================New B2B elements and types : Ends ======================================= -->
</xsd:schema>

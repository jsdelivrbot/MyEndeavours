<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/ApplicationObjectLibrary/ETH/FlatFile/V1/EMR501_ETH_PO.xsd"/>
      <rootElement name="PurchaseOrder" namespace="http://schema.emerson.com/ETH/FlatFile/V1"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/EnterpriseBusinessServiceLibrary/Industry/Manufacturing/EBO/PurchaseOrder/Emerson/PurchaseOrderEmersonEBS.wsdl"/>
      <rootElement name="CreatePurchaseOrderEBM" namespace="http://xmlns.oracle.com/EnterpriseObjects/Manufacturing/EBO/PurchaseOrder/Emerson"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.4.0(build 110106.1932.5682) AT [FRI JUN 17 16:41:58 GMT+05:30 2011]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:svcdoc="http://xmlns.oracle.com/Services/Documentation/V1"
                xmlns:aia="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:ethCustomSOA="http://www.oracle.com/XSL/Transform/java/com.emerson.eth3.customSOA.ETHCustomSOAExtension"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:ns3="http://www.openapplications.org/oagis/9/unqualifieddatatypes/1.1"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:ebs="http://xmlns.oracle.com/EnterpriseServices/Manufacturing/EBO/PurchaseOrder/Emerson"
                xmlns:ns6="http://www.openapplications.org/oagis/9/qualifieddatatypes/1.1"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:ebo="http://xmlns.oracle.com/EnterpriseObjects/Manufacturing/EBO/PurchaseOrder/Emerson"
                xmlns:ns7="http://www.openapplications.org/oagis/9/unitcode/66411:2001"
                xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                xmlns:ns8="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/EBO/PurchaseOrder/V1"
                xmlns:ns9="http://www.openapplications.org/oagis/9"
                xmlns:ns10="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/Common/V2"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:ns0="http://www.openapplications.org/oagis/9/IANAMIMEMediaTypes:2003"
                xmlns:ns1="http://schemas.xmlsoap.org/ws/2003/03/addressing"
                xmlns:ns2="http://www.openapplications.org/oagis/9/currencycode/54217:2001"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:ethCustomXSLT="http://www.oracle.com/XSL/Transform/java/com.emerson.eth3.customXSLT.ETHCustomXSLTExtension"
                xmlns:ns4="http://www.openapplications.org/oagis/9/codelists"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:ns5="urn:oasis:names:tc:xacml:2.0:policy:schema:cd:04"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:exsl="http://exslt.org/common"
                xmlns:corecom="http://xmlns.oracle.com/EnterpriseObjects/Core/Common/V2"
                xmlns:tns="http://schema.emerson.com/ETH/FlatFile/V1"
                xmlns:ethsoap="http://schema.emerson.com/ETH/Header"
                xmlns:bpmn="http://schemas.oracle.com/bpm/xpath"
                xmlns:ns11="urn:oasis:names:tc:xacml:2.0:context:schema:cd:04"
                xmlns:ns12="http://www.openapplications.org/oagis/9/languagecode/5639:1988"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                exclude-result-prefixes="xsi xsl nxsd xsd tns svcdoc ns3 ebs ns6 ebo ns7 soap ns8 ns9 ns10 ns0 ns1 ns2 ns4 ns5 corecom ethsoap ns11 ns12 aia bpws xp20 ethCustomSOA bpel bpm ora socket mhdr oraext ethCustomXSLT dvm hwf med ids xdk xref bpmn ldap">
  <xsl:template match="/">
    <ebo:CreatePurchaseOrderEBM>
      <xsl:attribute name="versionID">
        <xsl:value-of select='string(string("0"))'/>
      </xsl:attribute>
      <xsl:attribute name="languageCode">
        <xsl:value-of select='string(string("en-US"))'/>
      </xsl:attribute>
      <corecom:EBMHeader>
        <corecom:Custom>
          <ns9:ApplicationArea>
            <ns9:Sender>
              <ns9:ComponentID>
                <xsl:value-of select='string(string("PURCHASING"))'/>
              </ns9:ComponentID>
              <ns9:TaskID>
                <xsl:value-of select='string(string("POISSUE"))'/>
              </ns9:TaskID>
              <xsl:if test='normalize-space(/tns:PurchaseOrder/tns:Line/tns:HDISA13) != ""'>
                <ns9:ReferenceID>
                  <xsl:value-of select="normalize-space(/tns:PurchaseOrder/tns:Line/tns:HDISA13)"/>
                </ns9:ReferenceID>
              </xsl:if>
              <xsl:choose>
                <xsl:when test='/tns:PurchaseOrder/tns:Line/tns:HDISA14 = "0"'>
                  <ns9:ConfirmationCode>
                    <xsl:value-of select='string("Never")'/>
                  </ns9:ConfirmationCode>
                </xsl:when>
                <xsl:when test='/tns:PurchaseOrder/tns:Line/tns:HDISA14 = "1"'>
                  <ns9:ConfirmationCode>
                    <xsl:value-of select='string("OnError")'/>
                  </ns9:ConfirmationCode>
                </xsl:when>
                <xsl:when test='/tns:PurchaseOrder/tns:Line/tns:HDISA14 = "2"'>
                  <ns9:ConfirmationCode>
                    <xsl:value-of select='string("Always")'/>
                  </ns9:ConfirmationCode>
                </xsl:when>
                <xsl:otherwise>
                  <ns9:ConfirmationCode>
                    <xsl:value-of select="/tns:PurchaseOrder/tns:Line/tns:HDISA14"/>
                  </ns9:ConfirmationCode>
                </xsl:otherwise>
              </xsl:choose>
              <ns9:AuthorizationID>
                <xsl:value-of select="normalize-space(/tns:PurchaseOrder/tns:Line/tns:HD5REF03)"/>
              </ns9:AuthorizationID>
            </ns9:Sender>
            <xsl:choose>
              <xsl:when test='(/tns:PurchaseOrder/tns:Line[1]/tns:HDGS04 != "") and (/tns:PurchaseOrder/tns:Line[1]/tns:HDGS05 != "")'>
                <ns9:CreationDateTime>
                  <xsl:value-of select='concat(substring(concat(/tns:PurchaseOrder/tns:Line/tns:HDGS04,/tns:PurchaseOrder/tns:Line/tns:HDGS05),1.0,4.0),"-",substring(concat(/tns:PurchaseOrder/tns:Line/tns:HDGS04,/tns:PurchaseOrder/tns:Line/tns:HDGS05),5.0,2.0),"-",substring(concat(/tns:PurchaseOrder/tns:Line/tns:HDGS04,/tns:PurchaseOrder/tns:Line/tns:HDGS05),7.0,2.0),"T",substring(concat(/tns:PurchaseOrder/tns:Line/tns:HDGS04,/tns:PurchaseOrder/tns:Line/tns:HDGS05),9.0,2.0),":",substring(concat(/tns:PurchaseOrder/tns:Line/tns:HDGS04,/tns:PurchaseOrder/tns:Line/tns:HDGS05),11.0,2.0),":",substring(concat(/tns:PurchaseOrder/tns:Line/tns:HDGS04,/tns:PurchaseOrder/tns:Line/tns:HDGS05),13.0,2.0))'/>
                </ns9:CreationDateTime>
              </xsl:when>
              <xsl:otherwise>
                <ns9:CreationDateTime>
                  <xsl:value-of select='string("")'/>
                </ns9:CreationDateTime>
              </xsl:otherwise>
            </xsl:choose>
          </ns9:ApplicationArea>
        </corecom:Custom>
      </corecom:EBMHeader>
      <ebo:DataArea>
        <xsl:for-each select="/tns:PurchaseOrder/tns:Line">
          <xsl:variable name="type" select="tns:HDBEG01"/>
          <xsl:variable name="var" select="tns:HDBEG03"/>
          <xsl:variable name="nextNode" select="following-sibling::Line[1]"/>
          <ebo:CreatePurchaseOrder>
            <ns9:PurchaseOrderHeader>
              <ns9:DocumentID>
                <ns9:ID>
                  <xsl:value-of select="tns:HDBEG03"/>
                </ns9:ID>
                <ns9:RevisionID>
                  <xsl:value-of select='string(string("0"))'/>
                </ns9:RevisionID>
                <xsl:for-each select=".">
                  <xsl:if test='tns:HDBEG02 = "SA"'>
                    <ns9:VariationID>
                      <xsl:value-of select='string("STANDARD")'/>
                    </ns9:VariationID>
                  </xsl:if>
                </xsl:for-each>
                <xsl:for-each select=".">
                  <xsl:if test='tns:HDBEG02 = "BK"'>
                    <ns9:VariationID>
                      <xsl:value-of select='string("BLANKET")'/>
                    </ns9:VariationID>
                  </xsl:if>
                </xsl:for-each>
              </ns9:DocumentID>
              <xsl:choose>
                <xsl:when test='normalize-space(tns:HDBEG05) != ""'>
                  <ns9:DocumentDateTime>
                    <xsl:value-of select='concat(substring(tns:HDBEG05,1.0,4.0),"-",substring(tns:HDBEG05,5.0,2.0),"-",substring(tns:HDBEG05,7.0,2.0))'/>
                  </ns9:DocumentDateTime>
                </xsl:when>
                <xsl:otherwise>
                  <ns9:DocumentDateTime>
                    <xsl:value-of select='string("")'/>
                  </ns9:DocumentDateTime>
                </xsl:otherwise>
              </xsl:choose>
              <ns9:Description>
                <xsl:value-of select="normalize-space(tns:HD6REF03)"/>
              </ns9:Description>
              <xsl:for-each select=".">
                <ns9:Note>
                  <xsl:value-of select="normalize-space(tns:HD1MTX02)"/>
                </ns9:Note>
              </xsl:for-each>
              <xsl:for-each select=".">
                <ns9:Note>
                  <xsl:value-of select="normalize-space(tns:HD1MTX03)"/>
                </ns9:Note>
              </xsl:for-each>
              <ns9:Party>
                <ns9:PartyIDs>
                  <ns9:ID>
                    <xsl:value-of select="tns:HD1N104"/>
                  </ns9:ID>
                </ns9:PartyIDs>
                <ns9:Name>
                  <xsl:value-of select="tns:HD1N102"/>
                </ns9:Name>
                <ns9:Location>
                  <xsl:choose>
                    <xsl:when test='normalize-space(tns:HD1N406) != ""'>
                      <ns9:ID>
                        <xsl:value-of select="normalize-space(tns:HD1N406)"/>
                      </ns9:ID>
                    </xsl:when>
                    <xsl:otherwise>
                      <ns9:ID>
                        <xsl:value-of select="normalize-space(tns:HD1N104)"/>
                      </ns9:ID>
                    </xsl:otherwise>
                  </xsl:choose>
                  <ns9:Address>
                    <ns9:LineOne>
                      <xsl:value-of select="normalize-space(tns:HD1N301)"/>
                    </ns9:LineOne>
                    <ns9:LineTwo>
                      <xsl:value-of select="normalize-space(tns:HD1N302)"/>
                    </ns9:LineTwo>
                    <ns9:LineThree>
                      <xsl:value-of select="normalize-space(tns:HD1N303)"/>
                    </ns9:LineThree>
                    <ns9:LineFour>
                      <xsl:value-of select="normalize-space(tns:HD1N304)"/>
                    </ns9:LineFour>
                    <ns9:CityName>
                      <xsl:value-of select="normalize-space(tns:HD1N401)"/>
                    </ns9:CityName>
                    <xsl:for-each select=".">
                      <!--<xsl:if test='HD1N402 != ""'>-->
                      <xsl:if test='normalize-space(tns:HD1N402) != ""'>
                        <ns9:CountrySubDivisionCode>
                          <xsl:value-of select="normalize-space(tns:HD1N402)"/>
                        </ns9:CountrySubDivisionCode>
                      </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each select=".">
                      <!-- <xsl:if test='HD1N402 = ""'>-->
                      <xsl:if test='normalize-space(tns:HD1N402) = ""'>
                        <ns9:CountrySubDivisionCode>
                          <xsl:value-of select="normalize-space(tns:HD1N407)"/>
                        </ns9:CountrySubDivisionCode>
                      </xsl:if>
                    </xsl:for-each>
                    <ns9:CountryCode>
                      <xsl:value-of select="normalize-space(tns:HD1N404)"/>
                    </ns9:CountryCode>
                    <ns9:PostalCode>
                      <xsl:value-of select="normalize-space(tns:HD1N403)"/>
                    </ns9:PostalCode>
                  </ns9:Address>
                </ns9:Location>
              </ns9:Party>
              <ns9:SupplierParty>
                <ns9:CustomerServiceContact>
                  <ns9:Name>
                    <xsl:value-of select="normalize-space(tns:HD4PER02)"/>
                  </ns9:Name>
                  <!-- Check with Inder
                    <ns9:Communication>
                      <ns9:ChannelCode>
                        <xsl:value-of select='string("EMAIL")'/>
                      </ns9:ChannelCode>
                      <ns9:URI>
                        <xsl:value-of select="normalize-space(HD4PER08)"/>
                      </ns9:URI>
                    </ns9:Communication>
                    
                    <ns9:Communication>
                      <ns9:ChannelCode>
                        <xsl:value-of select='string("FAX")'/>
                      </ns9:ChannelCode>
                      <xsl:for-each select=".">
                        <ns9:DialNumber>
                          <xsl:value-of select="normalize-space(HD4PER06)"/>
                        </ns9:DialNumber>
                      </xsl:for-each>
                      </ns9:Communication>
                    
                    <ns9:Communication>
                      <ns9:ChannelCode>
                        <xsl:value-of select='string("TELEPHONE")'/>
                      </ns9:ChannelCode>
                      <xsl:for-each select=".">
                        <ns9:DialNumber>
                          <xsl:value-of select="normalize-space(HD4PER04)"/>
                        </ns9:DialNumber>
                      </xsl:for-each>
                      </ns9:Communication>
                      -->
                </ns9:CustomerServiceContact>
              </ns9:SupplierParty>
              <ns9:ContractReference>
                <ns9:DocumentID>
                  <ns9:ID>
                    <xsl:value-of select="normalize-space(tns:HDBEG06)"/>
                  </ns9:ID>
                </ns9:DocumentID>
              </ns9:ContractReference>
              <ns9:ExtendedAmount>
                <xsl:attribute name="currencyID">
                  <xsl:value-of select="tns:HDCUR02"/>
                </xsl:attribute>
              </ns9:ExtendedAmount>
              <ns9:BillToParty>
                <!-- Updated as per new mapping (Robin's email dated 21st Oct 2009) to set multiple "Name" fields from input -->
                <ns9:Name>
                  <xsl:value-of select="normalize-space(tns:HD4N102)"/>
                </ns9:Name>
                <ns9:Location>
                  <ns9:ID>
                    <xsl:value-of select="normalize-space(tns:HD4N406)"/>
                  </ns9:ID>
                  <ns9:Address>
                    <ns9:LineOne>
                      <xsl:value-of select="normalize-space(tns:HD4N301)"/>
                    </ns9:LineOne>
                    <ns9:LineTwo>
                      <xsl:value-of select="normalize-space(tns:HD4N302)"/>
                    </ns9:LineTwo>
                    <ns9:LineThree>
                      <xsl:value-of select="normalize-space(tns:HD4N303)"/>
                    </ns9:LineThree>
                    <ns9:LineFour>
                      <xsl:value-of select="normalize-space(tns:HD4N304)"/>
                    </ns9:LineFour>
                    <ns9:CityName>
                      <xsl:value-of select="normalize-space(tns:HD4N401)"/>
                    </ns9:CityName>
                    <xsl:for-each select=".">
                      <xsl:if test='tns:HD4N402 != ""'>
                        <ns9:CountrySubDivisionCode>
                          <xsl:value-of select="normalize-space(tns:HD4N402)"/>
                        </ns9:CountrySubDivisionCode>
                      </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each select=".">
                      <xsl:if test='tns:HD4N402 = ""'>
                        <ns9:CountrySubDivisionCode>
                          <xsl:value-of select="normalize-space(tns:HD4N407)"/>
                        </ns9:CountrySubDivisionCode>
                      </xsl:if>
                    </xsl:for-each>
                    <ns9:CountryCode>
                      <xsl:value-of select="normalize-space(tns:HD4N404)"/>
                    </ns9:CountryCode>
                    <ns9:PostalCode>
                      <xsl:value-of select="normalize-space(tns:HD4N403)"/>
                    </ns9:PostalCode>
                  </ns9:Address>
                </ns9:Location>
                <ns9:BuyerContact>
                  <ns9:Name>
                    <xsl:value-of select="normalize-space(tns:HD1PER02)"/>
                  </ns9:Name>
                  <!--Commented By Anna..Check With Inder-->
                  <!--ns2:Communication>
                     <ns2:ChannelCode>
                        <xsl:value-of select='string("EMAIL")'/>
                      </ns2:ChannelCode>
                      <ns2:URI>
                        <xsl:value-of select="normalize-space(HD1PER08)"/>
                      </ns2:URI>
                    </ns2:Communication>
                    
                   <ns2:Communication>
                      <ns2:ChannelCode>
                        <xsl:value-of select='string("FAX")'/>
                      </ns2:ChannelCode>
                      <xsl:for-each select=".">
                        <ns2:DialNumber>
                          <xsl:value-of select="normalize-space(HD1PER06)"/>
                        </ns2:DialNumber>
                      </xsl:for-each>
                      </ns2:Communication>
                    
                    <ns2:Communication>
                      <ns2:ChannelCode>
                        <xsl:value-of select='string("TELEPHONE")'/>
                      </ns2:ChannelCode>
                      <xsl:for-each select=".">
                        <ns2:DialNumber>
                          <xsl:value-of select="normalize-space(HD1PER04)"/>
                        </ns2:DialNumber>
                      </xsl:for-each>
                    </ns2:Communication-->
                  <!--End Commented By Anna..Check With Inder-->
                </ns9:BuyerContact>
              </ns9:BillToParty>
              <ns9:CarrierParty>
                <ns9:Name>
                  <xsl:value-of select="normalize-space(tns:HD6N102)"/>
                </ns9:Name>
                <!--xsl:if test="normalize-space(HD6N201) != ''">
                      <ns9:Name>
                        <xsl:value-of select="normalize-space(HD6N201)"/>
                      </ns9:Name>
                  </xsl:if-->
              </ns9:CarrierParty>
              <ns9:TransportationTerm>
                <!-- sc_phase3 17-sep-09 created this node-->
                <ns9:IncotermsCode>
                  <xsl:value-of select="normalize-space(tns:HD1FOB03)"/>
                </ns9:IncotermsCode>
                <ns9:PlaceOfOwnershipTransferLocation>
                  <ns9:Name>
                    <xsl:value-of select="normalize-space(tns:HD1FOB07)"/>
                  </ns9:Name>
                </ns9:PlaceOfOwnershipTransferLocation>
                <xsl:choose>
                  <xsl:when test='normalize-space(tns:HD1FOB01) = "CC"'>
                    <ns9:FreightTermCode>
                      <xsl:value-of select='string("Collect")'/>
                    </ns9:FreightTermCode>
                  </xsl:when>
                  <xsl:when test='normalize-space(tns:HD1FOB01) = "PP"'>
                    <ns9:FreightTermCode>
                      <xsl:value-of select='string("Prepaid")'/>
                    </ns9:FreightTermCode>
                  </xsl:when>
                  <xsl:when test='normalize-space(tns:HD1FOB01) = "PB"'>
                    <ns9:FreightTermCode>
                      <xsl:value-of select='string("Customer Pickup")'/>
                    </ns9:FreightTermCode>
                  </xsl:when>
                  <xsl:when test='normalize-space(tns:HD1FOB01) = "DF"'>
                    <ns9:FreightTermCode>
                      <xsl:value-of select='string("Defined by Buyer and Seller")'/>
                    </ns9:FreightTermCode>
                  </xsl:when>
                  <xsl:otherwise>
                    <ns9:FreightTermCode>
                      <xsl:value-of select="normalize-space(tns:HD1FOB01)"/>
                    </ns9:FreightTermCode>
                  </xsl:otherwise>
                </xsl:choose>
              </ns9:TransportationTerm>
              <ns9:PaymentTerm>
                <ns9:Term>
                  <ns9:ID>
                    <xsl:value-of select="normalize-space(tns:HD1ITD12)"/>
                  </ns9:ID>
                </ns9:Term>
              </ns9:PaymentTerm>
              <ns9:BuyerParty>
                <!-- Updated as per new mapping (Robin's email dated 21st Oct 2009) to set multiple "Name" fields from input -->
                <ns9:Name>
                  <xsl:value-of select="normalize-space(tns:HD5N102)"/>
                </ns9:Name>
                <ns9:Location>
                  <ns9:ID>
                    <xsl:value-of select="normalize-space(tns:HD5N406)"/>
                  </ns9:ID>
                  <ns9:Address>
                    <ns9:LineOne>
                      <xsl:value-of select="normalize-space(tns:HD5N301)"/>
                    </ns9:LineOne>
                    <ns9:LineTwo>
                      <xsl:value-of select="normalize-space(tns:HD5N302)"/>
                    </ns9:LineTwo>
                    <ns9:LineThree>
                      <xsl:value-of select="normalize-space(tns:HD5N303)"/>
                    </ns9:LineThree>
                    <ns9:LineFour>
                      <xsl:value-of select="normalize-space(tns:HD5N304)"/>
                    </ns9:LineFour>
                    <ns9:CityName>
                      <xsl:value-of select="normalize-space(tns:HD5N401)"/>
                    </ns9:CityName>
                    <xsl:for-each select=".">
                      <xsl:if test='/tns:HD5N402 != ""'>
                        <ns9:CountrySubDivisionCode>
                          <xsl:value-of select="normalize-space(tns:HD5N402)"/>
                        </ns9:CountrySubDivisionCode>
                      </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each select=".">
                      <xsl:if test='/tns:HD5N402 = ""'>
                        <ns9:CountrySubDivisionCode>
                          <xsl:value-of select="normalize-space(tns:HD5N407)"/>
                        </ns9:CountrySubDivisionCode>
                      </xsl:if>
                    </xsl:for-each>
                    <ns9:CountryCode>
                      <xsl:value-of select="normalize-space(tns:HD5N404)"/>
                    </ns9:CountryCode>
                    <ns9:PostalCode>
                      <xsl:value-of select="normalize-space(tns:HD5N403)"/>
                    </ns9:PostalCode>
                  </ns9:Address>
                </ns9:Location>
                <!--xsl:if test="normalize-space(HD5N201) != ''">
                      <ns9:Name>
                        <xsl:value-of select="normalize-space(HD5N201)"/>
                      </ns9:Name>
                  </xsl:if-->
              </ns9:BuyerParty>
              <xsl:choose>
                <xsl:when test='normalize-space(tns:HDBEG04) = "NULL"'>
                  <ns9:ReleaseNumber>
                    <xsl:value-of select='string("")'/>
                  </ns9:ReleaseNumber>
                </xsl:when>
                <xsl:otherwise>
                  <ns9:ReleaseNumber>
                    <xsl:value-of select="normalize-space(tns:HDBEG04)"/>
                  </ns9:ReleaseNumber>
                </xsl:otherwise>
              </xsl:choose>
              <ns9:UserArea>
                <!--  Commmented by ANna ..User Area attributes not able to find-->
                <!--ns9:CustomPurchaseOrderLineUserArea>
                <ns9:CustomPurchaseOrderLineScheduleUserArea>
                  <ns9:UnitAmount>
                    <xsl:attribute name="currencyID">
                      <xsl:value-of select="/tns:PurchaseOrder/tns:Line/tns:HDISA05"/>
                    </xsl:attribute>
                  </ns9:UnitAmount>
                </ns9:CustomPurchaseOrderLineScheduleUserArea>
              </ns9:CustomPurchaseOrderLineUserArea-->
                <!--xsl:if test='normalize-space(HDCUR03) != ""'>
                  <ns9:CurrencyExchangeRate>
                    <ns9:RateNumeric>
                      <xsl:value-of select="normalize-space(HDCUR03)"/>
                    </ns9:RateNumeric>                                      
                        <xsl:if test='normalize-space(HDCUR08) != "" and normalize-space(HDCUR09) != ""'>
                        <ns9:SetDateTime>
                          <xsl:value-of select='concat(substring(concat(HDCUR08,HDCUR09),1.0,4.0),"-",substring(concat(HDCUR08,HDCUR09),5.0,2.0),"-",substring(concat(HDCUR08,HDCUR09),7.0,2.0),"T",substring(concat(HDCUR08,HDCUR09),9.0,2.0),":",substring(concat(HDCUR08,HDCUR09),11.0,2.0),":",substring(concat(HDCUR08,HDCUR09),13.0,2.0))'/>
                        </ns9:SetDateTime>
                      </xsl:if>                   
                      <xsl:if test='normalize-space(HDCUR08) = "" and normalize-space(HDCUR09) = ""'>
                        <ns9:SetDateTime>
                            <xsl:value-of select="string('')"/>
                            <!<xsl:value-of select="substring(xp20:current-dateTime(),1.0,19)"/>-->
                <!--/ns9:SetDateTime>
                      </xsl:if>
                  </ns9:CurrencyExchangeRate-->
                <!--ns9:ActionExpression>
                    <xsl:for-each select=".">
                      <xsl:if test='HDBEG07 = "Y"'>
                        <xsl:attribute name="actionCode">
                          <xsl:value-of select='string("AcknowledgementRequired")'/>
                        </xsl:attribute>
                      </xsl:if>
                    </xsl:for-each>
                    
                  </ns9:ActionExpression-->
              </ns9:UserArea>
            </ns9:PurchaseOrderHeader>
            <xsl:for-each select="/tns:PurchaseOrder/tns:Line">
              <xsl:sort select="normalize-space(tns:LN1PO101)"
                        data-type="number"/>
              <xsl:variable name="lineNum" select="tns:LN1PO101"/>
              <xsl:variable name="prevNode"
                            select="preceding-sibling::Line[1]"/>
              <xsl:if test="($var = tns:HDBEG03) and (($type = tns:HDBEG01) and (string-length($lineNum) != 0.0))">
                <xsl:if test="(string-length($prevNode/tns:HDBEG03) = 0.0) or ((tns:LN1PO101 != $prevNode/tns:LN1PO101) or (tns:HDBEG03 != $prevNode/tns:HDBEG03))">
                  <ns9:PurchaseOrderLine>
                    <ns9:LineNumber>
                      <xsl:value-of select="normalize-space(tns:LN1PO101)"/>
                    </ns9:LineNumber>
                    <xsl:for-each select=".">
                      <ns9:Note>
                        <xsl:value-of select="normalize-space(tns:LN1MTX02)"/>
                      </ns9:Note>
                    </xsl:for-each>
                    <xsl:for-each select=".">
                      <ns9:Note>
                        <xsl:value-of select="normalize-space(tns:LN1MTX03)"/>
                      </ns9:Note>
                    </xsl:for-each>
                    <ns9:Item>
                      <ns9:ItemID>
                        <ns9:ID>
                          <xsl:value-of select="normalize-space(tns:LN1PO107)"/>
                        </ns9:ID>
                        <ns9:RevisionID>
                          <xsl:value-of select="normalize-space(tns:LN1PO111)"/>
                        </ns9:RevisionID>
                      </ns9:ItemID>
                      <ns9:SupplierItemID>
                        <ns9:ID>
                          <xsl:value-of select="normalize-space(tns:LN1PO109)"/>
                        </ns9:ID>
                      </ns9:SupplierItemID>
                      <ns9:Description>
                        <xsl:value-of select="normalize-space(tns:LN1PID05)"/>
                      </ns9:Description>
                      <ns9:Classification>
                        <ns9:Codes>
                          <ns9:Code>
                            <xsl:attribute name="sequence">
                              <xsl:value-of select='string("1")'/>
                            </xsl:attribute>
                            <xsl:attribute name="name">
                              <xsl:value-of select='string("HTS Code")'/>
                            </xsl:attribute>
                            <xsl:value-of select="normalize-space(tns:LN1TC202)"/>
                          </ns9:Code>
                          <!-- Commented By Anna-->
                          <!--ns9:Code>
                          
                                <xsl:attribute name="name">
                                <xsl:value-of select='string("Emerson Commodity Code")'/>
                                </xsl:attribute>
                                <xsl:attribute name="sequence">
                                <xsl:value-of select='string("2")'/>
                                </xsl:attribute>
                                <xsl:value-of select="normalize-space(LN1TC206)"/>
                          </ns9:Code-->
                        </ns9:Codes>
                      </ns9:Classification>
                      <ns9:Specification>
                        <ns9:Property>
                          <ns9:NameValue>
                            <xsl:attribute name="name">
                              <xsl:value-of select='string("Weight")'/>
                            </xsl:attribute>
                            <xsl:attribute name="unitCode">
                              <xsl:value-of select="normalize-space(tns:LN1MEA04)"/>
                            </xsl:attribute>
                            <xsl:value-of select="normalize-space(tns:LN1MEA03)"/>
                          </ns9:NameValue>
                        </ns9:Property>
                      </ns9:Specification>
                      <ns9:HazardousMaterial>
                        <ns9:ID>
                          <xsl:value-of select="normalize-space(tns:LN1TD402)"/>
                        </ns9:ID>
                      </ns9:HazardousMaterial>
                    </ns9:Item>
                    <ns9:Quantity>
                      <xsl:attribute name="unitCode">
                        <xsl:value-of select="normalize-space(tns:LN1PO103)"/>
                      </xsl:attribute>
                      <xsl:value-of select="string(number(normalize-space(tns:LN1PO102)))"/>
                    </ns9:Quantity>
                    <ns9:UnitPrice>
                      <ns9:Amount>
                        <xsl:attribute name="currencyID">
                          <xsl:value-of select="normalize-space(tns:HDCUR02)"/>
                        </xsl:attribute>
                        <xsl:variable name="amount">
                          <xsl:value-of select="string(number(normalize-space(tns:LN1PO104)))"/>
                        </xsl:variable>
                        <!-- Commented bY Anna-->
                        <!--xsl:choose>
                                <xsl:when test='(LN1PO104 = "") or (ceiling($amount)=0)'>
                                    <xsl:value-of select="string('0')"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$amount"/>                                    
                                </xsl:otherwise>
                            </xsl:choose-->
                      </ns9:Amount>
                      <ns9:PerQuantity>
                        <xsl:attribute name="unitCode">
                          <!-- Updated 17Aug 2009 - issue # 142 -->
                          <xsl:value-of select="normalize-space(tns:LN1PO105)"/>
                          <!-- Updated 17Aug 2009 - issue # 142 -->
                        </xsl:attribute>
                        <xsl:value-of select='string("1")'/>
                      </ns9:PerQuantity>
                    </ns9:UnitPrice>
                    <xsl:for-each select="/tns:PurchaseOrder/tns:Line">
                      <xsl:sort select="normalize-space(tns:LN1SCH12)"
                                data-type="number"/>
                      <xsl:if test="($var = tns:HDBEG03) and (($type = tns:HDBEG01) and (($lineNum = tns:LN1PO101) and (string-length(tns:LN1SCH12) != 0.0)))">
                        <ns9:PurchaseOrderSchedule>
                          <ns9:LineNumber>
                            <xsl:value-of select="normalize-space(tns:LN1SCH12)"/>
                          </ns9:LineNumber>
                          <xsl:for-each select="tns:LN3REF02">
                            <ns9:Note>
                              <xsl:attribute name="author">
                                <xsl:value-of select='string("Emerson Location Identifier")'/>
                              </xsl:attribute>
                              <xsl:value-of select="normalize-space(.)"/>
                            </ns9:Note>
                          </xsl:for-each>
                          <xsl:for-each select="tns:LN3REF04">
                            <ns9:Note>
                              <xsl:attribute name="author">
                                <xsl:value-of select='string("Kanban Card Number")'/>
                              </xsl:attribute>
                              <xsl:value-of select="normalize-space(.)"/>
                            </ns9:Note>
                          </xsl:for-each>
                          <ns9:Quantity>
                            <xsl:attribute name="unitCode">
                              <xsl:value-of select="normalize-space(tns:LN1SCH02)"/>
                            </xsl:attribute>
                            <xsl:value-of select="string(number(normalize-space(tns:LN1SCH01)))"/>
                          </ns9:Quantity>
                          <xsl:if test='normalize-space(tns:LN1SCH06) != ""'>
                            <ns9:RequiredDeliveryDateTime>
                              <xsl:value-of select='normalize-space(concat(substring(tns:LN1SCH06,1.0,4.0),"-",substring(tns:LN1SCH06,5.0,2.0),"-",substring(tns:LN1SCH06,7.0,2.0)))'/>
                            </ns9:RequiredDeliveryDateTime>
                          </xsl:if>
                          <!--xsl:if test='normalize-space(LN1SCH06) = ""'>
                        <ns9:RequiredDeliveryDateTime>
                          <xsl:value-of select="string('')"/>
                    
                        </ns9:RequiredDeliveryDateTime>
                      </xsl:if-->
                        </ns9:PurchaseOrderSchedule>
                      </xsl:if>
                    </xsl:for-each>
                    <ns9:UserArea>
                      <ns9:CustomPurchaseOrderLineUserArea>
                        <ns9:CustomPurchaseOrderLineScheduleUserArea>
                          <ns9:ShipToParty>
                            <ns9:PartyIDs>
                              <ns9:ID>
                                <xsl:value-of select="normalize-space(tns:LN3N104)"/>
                              </ns9:ID>
                            </ns9:PartyIDs>
                            <ns9:Name>
                              <xsl:value-of select="normalize-space(tns:LN3N102)"/>
                            </ns9:Name>
                            <ns9:Location>
                              <ns9:ID>
                                <xsl:value-of select="normalize-space(tns:LN3N406)"/>
                              </ns9:ID>
                              <ns9:Address>
                                <ns9:LineOne>
                                  <xsl:value-of select="normalize-space(tns:LN3N301)"/>
                                </ns9:LineOne>
                                <ns9:LineTwo>
                                  <xsl:value-of select="normalize-space(tns:LN3N302)"/>
                                </ns9:LineTwo>
                                <ns9:LineThree>
                                  <xsl:value-of select="normalize-space(tns:LN3N303)"/>
                                </ns9:LineThree>
                                <ns9:LineFour>
                                  <xsl:value-of select="normalize-space(tns:LN3N304)"/>
                                </ns9:LineFour>
                                <ns9:CityName>
                                  <xsl:value-of select="normalize-space(tns:LN3N401)"/>
                                </ns9:CityName>
                                <xsl:for-each select=".">
                                  <xsl:choose>
                                    <xsl:when test='tns:LN3N402 != ""'>
                                      <ns9:CountrySubDivisionCode>
                                        <xsl:value-of select="normalize-space(tns:LN3N402)"/>
                                      </ns9:CountrySubDivisionCode>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <ns9:CountrySubDivisionCode>
                                        <xsl:value-of select="normalize-space(tns:LN3N407)"/>
                                      </ns9:CountrySubDivisionCode>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:for-each>
                                <ns9:CountryCode>
                                  <xsl:value-of select="normalize-space(tns:LN3N404)"/>
                                </ns9:CountryCode>
                                <ns9:PostalCode>
                                  <xsl:value-of select="normalize-space(tns:LN3N403)"/>
                                </ns9:PostalCode>
                              </ns9:Address>
                            </ns9:Location>
                            <ns9:Contact>
                              <xsl:attribute name="type">
                                <xsl:value-of select='string("Contact1")'/>
                              </xsl:attribute>
                              <ns9:Name>
                                <xsl:value-of select="normalize-space(tns:LN4PER02)"/>
                              </ns9:Name>
                              <ns9:Communication>
                                <ns9:ChannelCode>
                                  <xsl:value-of select='string("EMAIL")'/>
                                </ns9:ChannelCode>
                                <ns9:URI>
                                  <xsl:value-of select="normalize-space(tns:LN4PER08)"/>
                                </ns9:URI>
                              </ns9:Communication>
                            </ns9:Contact>
                          </ns9:ShipToParty>
                        </ns9:CustomPurchaseOrderLineScheduleUserArea>
                      </ns9:CustomPurchaseOrderLineUserArea>
                    </ns9:UserArea>
                  </ns9:PurchaseOrderLine>
                </xsl:if>
              </xsl:if>
            </xsl:for-each>
          </ebo:CreatePurchaseOrder>
        </xsl:for-each>
      </ebo:DataArea>
    </ebo:CreatePurchaseOrderEBM>
  </xsl:template>
</xsl:stylesheet>

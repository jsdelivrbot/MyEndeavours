<?xml version = '1.0' encoding = 'UTF-8'?>
<!--Generated by Oracle SOA Modeler version 1.0 at [12/23/08 2:04 PM].-->
<Mediator name="AIAReadB2BErrorDetails" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" wsdlTargetNamespace="http://xmlns.oracle.com/AIAB2BIntegrationApplication/AIAReadB2BErrorDetails/AIAReadB2BErrorDetails" xmlns="http://xmlns.oracle.com/sca/1.0/mediator"
          xmlns:aiafault="http://xmlns.oracle.com/EnterpriseObjects/Core/Common/V2">
   <operation name="readB2BErrorDetails" deliveryPolicy="AllOrNothing"
              priority="4" validateSchema="false">
      <switch>
         <case executionType="direct"
               name="ReadOracleB2BErrorDetails.readOracleB2BErrorDetails">
            <condition language="xpath">
               <expression>$in.request/aiafault:Fault/aiafault:B2BMReference/aiafault:GatewayID = 'OracleB2B' and $in.request/aiafault:Fault/aiafault:B2BMReference/aiafault:GatewayID/@schemeID != 'CAVS'</expression>
            </condition>
            <action>
               <transform>
                  <part name="$out.ReadOracleB2BErrorDetailsSelect_inputParameters"
                        function="xslt(xsl/AIAFault_To_ReadOracleB2BErrorDetailsSelect_B2B_MSGIDInputParameters.xsl, $in.request)"/>
               </transform>
               <invoke reference="ReadOracleB2BErrorDetails"
                       operation="readOracleB2BErrorDetails">
                  <onReply>
                     <transform>
                        <part name="$out.reply"
                              function="xslt(xsl/B2BBusinessMessageCollection_To_aiaFault.xsl, $in.B2BBusinessMessageCollection)"/>
                     </transform>
                     <reply/>
                  </onReply>
               </invoke>
            </action>
         </case>
         <case executionType="direct" name="EchoServletService.EchoAIAFault">
            <condition language="xpath">
               <expression>$in.request/aiafault:Fault/aiafault:B2BMReference/aiafault:GatewayID != 'OracleB2B' and $in.request/aiafault:Fault/aiafault:B2BMReference/aiafault:GatewayID/@schemeID != 'CAVS'</expression>
            </condition>
            <action>
               <transform>
                  <part name="$out.AIAFault"
                        function="xslt(xsl/AIAFault_To_AIAFault.xsl, $in.request)"/>
               </transform>
               <invoke reference="EchoServletService" operation="EchoAIAFault">
                  <onReply>
                     <assign>
                        <copy target="$out.reply" expression="$in.AIAFault"/>
                     </assign>
                     <reply/>
                  </onReply>
               </invoke>
            </action>
         </case>
      </switch>
   </operation>
</Mediator>

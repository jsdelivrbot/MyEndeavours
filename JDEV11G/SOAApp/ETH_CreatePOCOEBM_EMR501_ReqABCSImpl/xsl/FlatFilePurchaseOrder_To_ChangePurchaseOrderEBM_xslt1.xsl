<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/ApplicationObjectLibrary/ETH/FlatFile/PO/V1/EMRFlatFile_ETH_PO.xsd"/>
      <rootElement name="PurchaseOrder" namespace="http://schema.emerson.com/ETH/FlatFile/V1"/>
    </source>
    <source type="XSD">
      <schema location="oramds:/apps/ETH3/CommonServices/commonSchemas/ETH_Header.xsd"/>
      <rootElement name="ETHHEADER" namespace="http://schema.emerson.com/ETH/Header"/>
      <param name="lvarXSLTParameter.ETH_HeaderMsg" />
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/EnterpriseBusinessServiceLibrary/Industry/Manufacturing/EBO/PurchaseOrder/Emerson/PurchaseOrderEmersonEBS.wsdl"/>
      <rootElement name="ChangePurchaseOrderEBM" namespace="http://xmlns.oracle.com/EnterpriseObjects/Manufacturing/EBO/PurchaseOrder/Emerson"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.4.0(build 110106.1932.5682) AT [WED JUL 20 15:18:02 GMT+05:30 2011]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:svcdoc="http://xmlns.oracle.com/Services/Documentation/V1"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:ethCustomSOA="http://www.oracle.com/XSL/Transform/java/com.emerson.eth3.customSOA.ETHCustomSOAExtension"
                xmlns:ethCustomXSLT="http://www.oracle.com/XSL/Transform/java/com.emerson.eth3.customXSLT.ETHCustomXSLTExtension"
                xmlns:ns3="http://www.openapplications.org/oagis/9/unqualifieddatatypes/1.1"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:ebs="http://xmlns.oracle.com/EnterpriseServices/Manufacturing/EBO/PurchaseOrder/Emerson"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:ns6="http://www.openapplications.org/oagis/9/qualifieddatatypes/1.1"
                xmlns:ns7="http://www.openapplications.org/oagis/9/unitcode/66411:2001"
                xmlns:ebo="http://xmlns.oracle.com/EnterpriseObjects/Manufacturing/EBO/PurchaseOrder/Emerson"
                xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                xmlns:ns8="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/EBO/PurchaseOrder/V1"
                xmlns:ns9="http://www.openapplications.org/oagis/9"
                xmlns:ns10="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/Common/V2"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:customEBMHeader="http://schemas.emerson.com/eth/customEBMHeader"
                xmlns:ns1="http://schemas.xmlsoap.org/ws/2003/03/addressing"
                xmlns:ns2="http://www.openapplications.org/oagis/9/currencycode/54217:2001"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:ns4="http://www.openapplications.org/oagis/9/codelists"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:ns5="urn:oasis:names:tc:xacml:2.0:policy:schema:cd:04"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:ns0="http://schema.emerson.com/ETH/FlatFile/V1"
                xmlns:corecom="http://xmlns.oracle.com/EnterpriseObjects/Core/Common/V2"
                xmlns:eth="http://schema.emerson.com/ETH/Header"
                xmlns:ns11="urn:oasis:names:tc:xacml:2.0:context:schema:cd:04"
                xmlns:ns12="http://www.openapplications.org/oagis/9/languagecode/5639:1988"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                exclude-result-prefixes="xsi xsl nxsd xsd tns eth svcdoc customEBMHeader ns3 ebs ns6 ns7 ebo soap ns8 ns9 ns10 ns0 ns1 ns2 ns4 ns5 corecom ns11 ns12 bpws xp20 bpel ethCustomSOA ethCustomXSLT bpm ora socket mhdr oraext dvm hwf med ids xdk xref ldap">
  <xsl:param name="lvarXSLTParameter.ETH_HeaderMsg"/>
  <xsl:variable name="SenderID" select="$lvarXSLTParameter.ETH_HeaderMsg/eth:ETHHEADER/eth:SENDER_ID"/> 
  <xsl:variable name="JDBC_URL" select="$lvarXSLTParameter.ETH_HeaderMsg/eth:ETHHEADER/eth:HEADER_PROPERTY_SET/eth:HEADER_PROPERTY[@name='JDBC_URL']/@value"/>
  <xsl:variable name="JDBC_CONF_JNDI" select="$lvarXSLTParameter.ETH_HeaderMsg/eth:ETHHEADER/eth:HEADER_PROPERTY_SET/eth:HEADER_PROPERTY[@name='JDBC_CONF_JNDI']/@value"/>
  <xsl:variable name="PROCESS_NAME" select="$lvarXSLTParameter.ETH_HeaderMsg/eth:ETHHEADER/eth:HEADER_PROPERTY_SET/eth:HEADER_PROPERTY[@name='COMPOSITE_NAME']/@value"/>
  <xsl:variable name="PROCESS_INSTANCE" select="$lvarXSLTParameter.ETH_HeaderMsg/eth:ETHHEADER/eth:HEADER_PROPERTY_SET/eth:HEADER_PROPERTY[@name='COMPOSITE_INSTANCE_ID']/@value"/>
  <xsl:variable name="COMPONENT_NAME" select="$lvarXSLTParameter.ETH_HeaderMsg/eth:ETHHEADER/eth:HEADER_PROPERTY_SET/eth:HEADER_PROPERTY[@name='COMPONENT_NAME']/@value"/>
  <xsl:variable name="COMPONENT_INSTANCE_ID" select="$lvarXSLTParameter.ETH_HeaderMsg/eth:ETHHEADER/eth:HEADER_PROPERTY_SET/eth:HEADER_PROPERTY[@name='COMPONENT_INSTANCE_ID']/@value"/>
  <xsl:variable name="LOOKUP_UOM_TYPE" select="string('BASISOFUNITPRICE')"/>
  <xsl:variable name="LOOKUP_POHDR_STATUS_TYPE" select="string('POHEADERSTATUS')"/>
  <xsl:variable name="LOOKUP_POLINE_STATUS_TYPE" select="string('POLINESTATUS')"/>
  <xsl:variable name="DEFAULT_STATUS" select="string('OPEN')"/>
  <xsl:variable name="Default_N104" select="string('ZZ')"/>
  <xsl:variable name="Default_N403" select="string('999999')"/>
  <xsl:variable name="Default_SCH06_09" select="string('1900-01-01T00:00:00.0000+00:00')"/>
  <xsl:variable name="WRONG_DATE" select="string('00000000')"/>
  
  <xsl:key name="keyLine" match="/ns0:PurchaseOrder/ns0:Line" use="ns0:LN1PO101"/>
  
  <xsl:template match="/ns0:PurchaseOrder">
     <ebo:ChangePurchaseOrderEBM>
      <corecom:EBMHeader>
        <corecom:Sender>
          <corecom:ID>
             <xsl:value-of select="$SenderID"/>  
          </corecom:ID>
        </corecom:Sender>
        <corecom:Custom>
          <customEBMHeader:ApplicationArea>
          <customEBMHeader:Sender>
              <customEBMHeader:LogicalID>
                <xsl:value-of select='normalize-space(ns0:Line[1]/ns0:HD5REF03)'/>
                <!-- Commented as per discussion with Ryan -->
                <!-- <xsl:value-of select='normalize-space(/ns0:PurchaseOrder/ns0:Line[1]/ns0:HDISA02)'/> -->
              </customEBMHeader:LogicalID>
              <customEBMHeader:ComponentID>
                <xsl:value-of select='string("PURCHASING")'/>
              </customEBMHeader:ComponentID>
              <customEBMHeader:TaskID>
                <xsl:value-of select='string("POISSUE")'/>
              </customEBMHeader:TaskID>
              <customEBMHeader:ReferenceID>
              <!-- Its "Interchange Date - Responsible Agency Code" -->
                <xsl:value-of select='concat(normalize-space(ns0:Line[1]/ns0:HDISA09),"-",normalize-space(ns0:Line[1]/ns0:HDGS07))'/>
              </customEBMHeader:ReferenceID>
              <customEBMHeader:ConfirmationCode>
                <xsl:value-of select='string("N")'/>
              </customEBMHeader:ConfirmationCode>
              <customEBMHeader:AuthorizationID>
                <xsl:value-of select='string("APPS")'/>
              </customEBMHeader:AuthorizationID>
            </customEBMHeader:Sender>
            <customEBMHeader:CreationDateTime>
              <xsl:value-of select="ethCustomXSLT:getISODateFromEDI(normalize-space(ns0:Line[1]/ns0:HDGS04),normalize-space(ns0:Line[1]/ns0:HDGS05),'',normalize-space(ns0:Line[1]/ns0:HDGS04))"/>
            </customEBMHeader:CreationDateTime>
            <customEBMHeader:UserArea>
              <customEBMHeader:CustomApplicationAreaUserArea>
                <customEBMHeader:SenderID>
                  <xsl:value-of select="$SenderID"/>
                   <!--<xsl:value-of select="/ns0:PurchaseOrder/ns0:Line[1]/ns0:HDGS02"/>-->
                </customEBMHeader:SenderID>
              </customEBMHeader:CustomApplicationAreaUserArea>
            </customEBMHeader:UserArea>
          </customEBMHeader:ApplicationArea>
        </corecom:Custom>
      </corecom:EBMHeader>
     <ebo:DataArea>
      <corecom:Change>
          <xsl:attribute name="responseCode">
            <xsl:value-of select="string('Y')"/>
          </xsl:attribute>            
          <ns9:ActionCriteria>
            <ns9:ActionExpression>
              <xsl:attribute name="actionCode">
                <xsl:value-of select="string('Change')"/>
              </xsl:attribute>
            </ns9:ActionExpression>
          </ns9:ActionCriteria>
        </corecom:Change>
        <ebo:ChangePurchaseOrder>
          <xsl:variable name="POCO_HDR_STATUS" select="ethCustomXSLT:formatValue(ethCustomXSLT:ethParameterLookup($JDBC_CONF_JNDI,$JDBC_URL,'false', $PROCESS_NAME, $PROCESS_INSTANCE, $LOOKUP_POHDR_STATUS_TYPE,normalize-space(ns0:Line[1]/ns0:HDBEG01), $DEFAULT_STATUS),2,10,0,$DEFAULT_STATUS,$DEFAULT_STATUS)"/>
          <ns9:PurchaseOrderHeader>
            <ns9:DocumentID>
              <ns9:ID>
                <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HDBEG03)"/>
              </ns9:ID>
              <ns9:RevisionID>
                <!-- On EDI 860 Revision Number comes at BCH05, but since Flat File 860 doesnt have BCH05 we are using HD1REF03 for Revision Number -->
                <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD1REF03)"/>
              </ns9:RevisionID>
              <xsl:variable name="variationID" select="normalize-space(ns0:Line/ns0:HDBEG02)"/>
              <xsl:choose>
                <xsl:when test="$variationID = 'SA'">
                    <ns9:VariationID>
                      <xsl:value-of select="string('STANDARD')"/>
                    </ns9:VariationID>
                </xsl:when>
                <xsl:when test="$variationID = 'BK'">
                    <ns9:VariationID>
                      <xsl:value-of select="string('BLANKET')"/>
                    </ns9:VariationID>
                </xsl:when>
                <xsl:otherwise>
                    <ns9:VariationID>
                      <xsl:value-of select="string('STANDARD')"/>
                    </ns9:VariationID>
                </xsl:otherwise>
              </xsl:choose>
            </ns9:DocumentID>
            <xsl:if test="ns0:Line[1]/ns0:HDBEG05 and ns0:Line[1]/ns0:HDBEG05 != ''">
              <!--<ns9:DocumentDateTime>
                <xsl:variable name="Year" select="substring(normalize-space(/ns0:PurchaseOrder/ns0:Line/ns0:HDBEG05),1.0,4.0)"/>
                <xsl:variable name="Rest" select="substring(normalize-space(/ns0:PurchaseOrder/ns0:Line/ns0:HDBEG05),5)"/>
                <xsl:variable name="Month" select="substring($Rest,1.0,2.0)"/>
                <xsl:variable name="Day" select="substring($Rest,3.0)"/>
                <xsl:value-of select="concat($Year,'-',$Month,'-',$Day,'T00:00:00.0000+00:00')"/>
               </ns9:DocumentDateTime>-->
               <ns9:DocumentDateTime>
                <xsl:value-of select="ethCustomXSLT:getISODateFromEDI(normalize-space(ns0:Line[1]/ns0:HDBEG05),'','',normalize-space(ns0:Line[1]/ns0:HDBEG05))"/>
              </ns9:DocumentDateTime>
            </xsl:if>
            <ns9:Note>
                <xsl:value-of select="normalize-space(ns0:Line[1]/HD1MTX02)"/>
            </ns9:Note>
            <ns9:Status>
                <ns9:Code>
                  <xsl:value-of select="$POCO_HDR_STATUS"/>
                </ns9:Code>
              </ns9:Status>
            <xsl:if test='xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD1N101)) = "VN"'>
                <ns9:SupplierParty>
                  <ns9:PartyIDs>
                    <ns9:ID>
                      <!-- As discussed by Ryan on 4th Oct, 2011 -->
                      <xsl:value-of select='ethCustomXSLT:formatValue(normalize-space(ns0:Line[1]/ns0:HD1N104),2.0,80.0,0.0,$Default_N104,$Default_N104)'/>
                      <!--<xsl:value-of select="normalize-space(/ns0:PurchaseOrder/ns0:Line[1]/ns0:HD1N104)"/>-->
                    </ns9:ID>
                  </ns9:PartyIDs>
                  <ns9:Name>
                    <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD1N102))"/>
                  </ns9:Name>
                  <xsl:if test="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD1N201)) != ''">
                  <ns9:Name>
                    <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD1N201))"/>
                  </ns9:Name>
                  </xsl:if>
                   <!--<ns9:Name>
                     <xsl:value-of select="string('NotFound')" />
                  </ns9:Name>-->
                  <ns9:Location>                    
                    <!-- As per discussion with Ryan on 27th Sep, 2011 -->
                    <xsl:choose>
                      <xsl:when test='normalize-space(ns0:Line[1]/ns0:HD1N406) != ""'>
                        <ns9:ID>
                          <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD1N406)"/>
                        </ns9:ID>
                      </xsl:when>
                      <xsl:otherwise>
                        <ns9:ID>
                          <xsl:value-of select="string('999999')"/>
                        </ns9:ID>
                      </xsl:otherwise>
                    </xsl:choose>
                    <ns9:Address>
                      <ns9:AddressLine>
                        <xsl:attribute name="sequence">
                          <xsl:value-of select="string(1)"/>
                        </xsl:attribute>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD1N301)"/>
                      </ns9:AddressLine>
                      <ns9:AddressLine>
                        <xsl:attribute name="sequence">
                          <xsl:value-of select="string(2)"/>
                        </xsl:attribute>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD1N302)"/>
                      </ns9:AddressLine>
                      <ns9:CityName>
                        <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD1N401))"/>
                      </ns9:CityName>
                      <ns9:CountrySubDivisionCode>
                        <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD1N407))"/>
                      </ns9:CountrySubDivisionCode>
                      <ns9:CountryCode>
                        <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD1N404))"/>
                      </ns9:CountryCode>
                      
                      <!-- As per discussion with Ryan on 27th Sep, 2011 -->
                      <!-- NaN Change - As per discussion with Ryan on 9th Oct, 2011 -->
                      <xsl:choose>
                        <xsl:when test='(normalize-space(ns0:Line[1]/ns0:HD1N403) != "") and (number(normalize-space(ns0:Line[1]/ns0:HD1N403)))'>
                          <ns9:PostalCode>
                            <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD1N403)"/>
                          </ns9:PostalCode>
                        </xsl:when>
                        <xsl:otherwise>
                          <ns9:PostalCode>
                            <xsl:value-of select="$Default_N403"/>
                          </ns9:PostalCode>
                        </xsl:otherwise>
                      </xsl:choose>
                      
                    </ns9:Address>
                  </ns9:Location>
                  <ns9:Contact>
                    <ns9:Name>
                      <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD1PER02))"/>
                    </ns9:Name>
          
                    <xsl:if test="normalize-space(ns0:Line[1]/ns0:HD1PER04) != ''">
                    <ns9:Communication>
                      <ns9:ChannelCode>
                        <xsl:value-of select="string('TELEPHONE')"/>
                      </ns9:ChannelCode>
                      <ns9:Text>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD1PER04)"/>
                      </ns9:Text>
                    </ns9:Communication>
                    </xsl:if>
                    
                    <xsl:if test="normalize-space(ns0:Line[1]/ns0:HD1PER06) != ''">
                    <ns9:Communication>
                      <ns9:ChannelCode>
                        <xsl:value-of select="string('FAX')"/>
                      </ns9:ChannelCode>
                      <ns9:Text>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD1PER06)"/>
                      </ns9:Text>
                    </ns9:Communication>
                    </xsl:if>
                    <xsl:if test="normalize-space(ns0:Line[1]/ns0:HD1PER08) != ''">
                    <ns9:Communication>
                      <ns9:ChannelCode>
                        <xsl:value-of select="string('EMAIL')"/>
                      </ns9:ChannelCode>
                      <ns9:Text>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD1PER08)"/>
                      </ns9:Text>
                    </ns9:Communication>
                    </xsl:if>
                  </ns9:Contact>
                </ns9:SupplierParty>
              </xsl:if>
              <ns9:ContractReference>
              <ns9:DocumentID>
              <ns9:ID>
                <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HDBEG06)"/>
              </ns9:ID>
              </ns9:DocumentID>
            </ns9:ContractReference>
            <!-- As per discussion with Ryan
            <ns9:ExtendedAmount>
              <xsl:attribute name="currencyID">
                <xsl:value-of select="normalize-space(/ns0:PurchaseOrder/ns0:Line[1]/ns0:HDCUR02)"/>
              </xsl:attribute>
            </ns9:ExtendedAmount>
            -->
            <xsl:if test='xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD4N101)) = "BT"'>
                <ns9:BillToParty>
                  <ns9:PartyIDs>
                    <ns9:ID>
                      <!-- As discussed by Ryan on 4th Oct, 2011 -->
                      <xsl:value-of select='ethCustomXSLT:formatValue(normalize-space(ns0:Line[1]/ns0:HD4N104),2.0,80.0,0.0,$Default_N104,$Default_N104)'/>
                      <!--<xsl:value-of select="normalize-space(/ns0:PurchaseOrder/ns0:Line[1]/ns0:HD4N104)"/>-->
                    </ns9:ID>
                  </ns9:PartyIDs>
                  <ns9:Name>
                    <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD4N102))"/>
                  </ns9:Name>
                  <xsl:if test="normalize-space(ns0:Line[1]/ns0:HD4N201) != ''">
                  <ns9:Name>
                    <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD4N201))"/>
                  </ns9:Name>
                  </xsl:if>
                  <!--
                   <ns9:Name>
                        <xsl:value-of select="NotFound"/>
                  </ns9:Name>
                  -->
                  <ns9:Location>
                    <ns9:ID>
                      <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD4N406)"/>
                    </ns9:ID>
                    <ns9:Address>
                      <ns9:AddressLine>
                       <xsl:attribute name="sequence">
                          <xsl:value-of select="string(1)"/>
                        </xsl:attribute>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD4N301)"/>
                      </ns9:AddressLine>
                      <ns9:AddressLine>
                        <xsl:attribute name="sequence">
                          <xsl:value-of select="string(2)"/>
                        </xsl:attribute>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD4N302)"/>
                      </ns9:AddressLine>
                      <ns9:CityName>
                        <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD4N401))"/>
                      </ns9:CityName>
                      <ns9:CountrySubDivisionCode>
                        <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD4N407))"/>
                      </ns9:CountrySubDivisionCode>
                      <ns9:CountryCode>
                        <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD4N404))"/>
                      </ns9:CountryCode>
                      
                      <!-- As per discussion with Ryan on 27th Sep, 2011 -->
                      <!-- NaN Change - As per discussion with Ryan on 9th Oct, 2011 -->
                      <xsl:choose>
                        <xsl:when test='(normalize-space(ns0:Line[1]/ns0:HD4N403) != "") and (number(normalize-space(ns0:Line[1]/ns0:HD4N403)))'>
                          <ns9:PostalCode>
                            <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD4N403)"/>
                          </ns9:PostalCode>
                        </xsl:when>
                        <xsl:otherwise>
                          <ns9:PostalCode>
                            <xsl:value-of select="$Default_N403"/>
                          </ns9:PostalCode>
                        </xsl:otherwise>
                      </xsl:choose>
                      
                    </ns9:Address>
                  </ns9:Location>
                  <ns9:Contact>
                    <ns9:Name>
                      <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD4PER02))"/>
                    </ns9:Name>
          
                    <xsl:if test="normalize-space(ns0:Line[1]/ns0:HD4PER04) != ''">
                    <ns9:Communication>
                      <ns9:ChannelCode>
                        <xsl:value-of select="string('TELEPHONE')"/>
                      </ns9:ChannelCode>
                      <ns9:Text>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD4PER04)"/>
                      </ns9:Text>
                    </ns9:Communication>
                    </xsl:if>
                    
                    <xsl:if test="normalize-space(ns0:Line[1]/ns0:HD4PER06) != ''">
                    <ns9:Communication>
                      <ns9:ChannelCode>
                        <xsl:value-of select="string('FAX')"/>
                      </ns9:ChannelCode>
                      <ns9:Text>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD4PER06)"/>
                      </ns9:Text>
                    </ns9:Communication>
                    </xsl:if>
                    <xsl:if test="normalize-space(ns0:Line[1]/ns0:HD4PER08) != ''">
                    <ns9:Communication>
                      <ns9:ChannelCode>
                        <xsl:value-of select="string('EMAIL')"/>
                      </ns9:ChannelCode>
                      <ns9:Text>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD4PER08)"/>
                      </ns9:Text>
                    </ns9:Communication>
                    </xsl:if>
                  </ns9:Contact>
                </ns9:BillToParty>
              </xsl:if>
            <!-- NotFound except HD6N101 HD6N102 HD6N201 -->
              <xsl:if test='xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD6N101)) = "CA"'>
                <ns9:CarrierParty>
                  <ns9:PartyIDs>
                    <ns9:ID>
                      <!-- As discussed by Ryan on 4th Oct, 2011 -->
                      <xsl:value-of select='ethCustomXSLT:formatValue(normalize-space(ns0:Line[1]/ns0:HD6N104),2.0,80.0,0.0,$Default_N104,$Default_N104)'/>
                      <!--<xsl:value-of select="normalize-space(/ns0:PurchaseOrder/ns0:Line[1]/ns0:HD6N104)"/>-->
                    </ns9:ID>
                  </ns9:PartyIDs>
                  <ns9:Name>
                    <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD6N102))"/>
                  </ns9:Name>
                  <xsl:if test="normalize-space(ns0:Line[1]/ns0:HD6N201) != ''">
                  <ns9:Name>
                    <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD6N201))"/>
                  </ns9:Name>
                  </xsl:if>
                  <!--
                   <ns9:Name>
                        <xsl:value-of select="NotFound"/>
                  </ns9:Name>
                  -->
                  <ns9:Location>
                    <ns9:ID>
                      <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD6N406)"/>
                    </ns9:ID>
                    <ns9:Address>
                      <ns9:AddressLine>
                       <xsl:attribute name="sequence">
                          <xsl:value-of select="string(1)"/>
                        </xsl:attribute>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD6N301)"/>
                      </ns9:AddressLine>
                      <ns9:AddressLine>
                        <xsl:attribute name="sequence">
                          <xsl:value-of select="string(2)"/>
                        </xsl:attribute>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD6N302)"/>
                      </ns9:AddressLine>
                      <ns9:CityName>
                        <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD6N401))"/>
                      </ns9:CityName>
                      <ns9:CountrySubDivisionCode>
                        <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD6N407))"/>
                      </ns9:CountrySubDivisionCode>
                      <ns9:CountryCode>
                        <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD6N404))"/>
                      </ns9:CountryCode>
                      
                      <!-- As per discussion with Ryan on 27th Sep, 2011 -->
                      <!-- NaN Change - As per discussion with Ryan on 9th Oct, 2011 -->
                      <xsl:choose>
                        <xsl:when test='(normalize-space(ns0:Line[1]/ns0:HD6N403) != "") and (number(normalize-space(ns0:Line[1]/ns0:HD6N403)))'>
                          <ns9:PostalCode>
                            <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD6N403)"/>
                          </ns9:PostalCode>
                        </xsl:when>
                        <xsl:otherwise>
                          <ns9:PostalCode>
                            <xsl:value-of select="$Default_N403"/>
                          </ns9:PostalCode>
                        </xsl:otherwise>
                      </xsl:choose>

                    </ns9:Address>
                  </ns9:Location>
                  <ns9:Contact>
                    <ns9:Name>
                      <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD6PER02))"/>
                    </ns9:Name>
          
                    <xsl:if test="normalize-space(ns0:Line[1]/ns0:HD6PER04) != ''">
                    <ns9:Communication>
                      <ns9:ChannelCode>
                        <xsl:value-of select="string('TELEPHONE')"/>
                      </ns9:ChannelCode>
                      <ns9:Text>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD6PER04)"/>
                      </ns9:Text>
                    </ns9:Communication>
                    </xsl:if>
                    
                    <xsl:if test="normalize-space(ns0:Line[1]/ns0:HD6PER06) != ''">
                    <ns9:Communication>
                      <ns9:ChannelCode>
                        <xsl:value-of select="string('FAX')"/>
                      </ns9:ChannelCode>
                      <ns9:Text>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD6PER06)"/>
                      </ns9:Text>
                    </ns9:Communication>
                    </xsl:if>
                    <xsl:if test="normalize-space(ns0:Line[1]/ns0:HD6PER08) != ''">
                    <ns9:Communication>
                      <ns9:ChannelCode>
                        <xsl:value-of select="string('EMAIL')"/>
                      </ns9:ChannelCode>
                      <ns9:Text>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD6PER08)"/>
                      </ns9:Text>
                    </ns9:Communication>
                    </xsl:if>
                  </ns9:Contact>
                </ns9:CarrierParty>
              </xsl:if>
              <ns9:TransportationTerm>
              
              
              <xsl:choose>
                  <xsl:when test="xp20:lower-case(normalize-space(ns0:Line[1]/ns0:HD1FOB06)) = 'oa'">
                    <ns9:IncotermsCode>
                      <xsl:value-of select="string('FOB ORIGIN')"/>
                    </ns9:IncotermsCode>
                  </xsl:when>
                  <xsl:when test="xp20:lower-case(normalize-space(ns0:Line[1]/ns0:HD1FOB06)) = 'de'">
                    <ns9:IncotermsCode>
                      <xsl:value-of select="string('FOB DESTINATION')"/>
                    </ns9:IncotermsCode>
                  </xsl:when>
                  <xsl:otherwise>
                    <ns9:IncotermsCode>
                      <xsl:value-of select="string('FOB DESTINATION')"/>
                    </ns9:IncotermsCode>
                  </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                <!-- NotFound -->
                  <xsl:when test="normalize-space(ns0:Line[1]/ns0:HD1FOB05) != ''">
                    <ns9:PlaceOfOwnershipTransferLocation>
                      <ns9:Description>
                        <xsl:value-of select="concat('INCO2010:',normalize-space(ns0:Line[1]/ns0:HD1FOB05),':',normalize-space(ns0:Line[1]/ns0:HD1FOB07))"/>
                      </ns9:Description>
                    </ns9:PlaceOfOwnershipTransferLocation>
                  </xsl:when>
                  <xsl:otherwise>
                    <ns9:PlaceOfOwnershipTransferLocation>
                      <ns9:Description>
                        <xsl:value-of select="concat('EMR2006',':',normalize-space(ns0:Line[1]/ns0:HD1FOB07))"/>
                      </ns9:Description>
                    </ns9:PlaceOfOwnershipTransferLocation>
                  </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                  <xsl:when test="xp20:lower-case(normalize-space(ns0:Line[1]/ns0:HD1FOB01)) = 'pp'">
                    <ns9:FreightTermCode>
                      <xsl:value-of select="string('PREPAID')"/>
                    </ns9:FreightTermCode>
                  </xsl:when>
                  <xsl:when test="xp20:lower-case(normalize-space(ns0:Line[1]/ns0:HD1FOB01)) = 'cc'">
                    <ns9:FreightTermCode>
                      <xsl:value-of select="string('COLLECT')"/>
                    </ns9:FreightTermCode>
                  </xsl:when>
                  <xsl:when test="xp20:lower-case(normalize-space(ns0:Line[1]/ns0:HD1FOB01)) = 'pc'">
                    <ns9:FreightTermCode>
                      <xsl:value-of select="string('PREPAID&amp;ADD')"/>
                    </ns9:FreightTermCode>
                  </xsl:when>
                  <xsl:when test="xp20:lower-case(normalize-space(ns0:Line[1]/ns0:HD1FOB01)) = 'tp'">
                    <ns9:FreightTermCode>
                      <xsl:value-of select="string('THIRDPARTY')"/>
                    </ns9:FreightTermCode>
                  </xsl:when>
                  <xsl:when test="xp20:lower-case(normalize-space(ns0:Line[1]/ns0:HD1FOB01)) = 'pb'">
                    <ns9:FreightTermCode>
                      <xsl:value-of select="string('PICKUP')"/>
                    </ns9:FreightTermCode>
                  </xsl:when>
                  <xsl:otherwise>
                    <ns9:FreightTermCode>
                      <xsl:value-of select="string('DEFINEDBYBUYER&amp;SELLER')"/>
                    </ns9:FreightTermCode>
                </xsl:otherwise>
                </xsl:choose>
              
            </ns9:TransportationTerm>
            <ns9:PaymentTerm>
               <ns9:Term>
                <ns9:ID>
                  <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD1ITD12)"/>
                </ns9:ID>
                <ns9:Description>
                  <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD1ITD12)"/>
                </ns9:Description>
              </ns9:Term>
            </ns9:PaymentTerm>
            <xsl:if test='xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD5N101)) = "SO"'>
                <ns9:BuyerParty>
                  <ns9:Name>
                    <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD5N102))"/>
                  </ns9:Name>
                  <xsl:if test="normalize-space(ns0:Line[1]/ns0:HD5N201) != ''">
                  <ns9:Name>
                    <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD5N201))"/>
                  </ns9:Name>
                  </xsl:if>
                  <!--
                   <ns9:Name>
                   <xsl:value-of select="string('NotFound')" />
                  </ns9:Name>-->
                  <ns9:Location>
                    <ns9:ID>
                      <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD5N406)"/>
                    </ns9:ID>
                    <ns9:Address>
                      <ns9:AddressLine>
                       <xsl:attribute name="sequence">
                          <xsl:value-of select="string(1)"/>
                        </xsl:attribute>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD5N301)"/>
                      </ns9:AddressLine>
                      <ns9:AddressLine>
                        <xsl:attribute name="sequence">
                          <xsl:value-of select="string(2)"/>
                        </xsl:attribute>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD5N302)"/>
                      </ns9:AddressLine>
                      <ns9:CityName>
                        <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD5N401))"/>
                      </ns9:CityName>
                      <ns9:CountrySubDivisionCode>
                        <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD5N407))"/>
                      </ns9:CountrySubDivisionCode>
                      <ns9:CountryCode>
                        <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD5N404))"/>
                      </ns9:CountryCode>
                      
                      <!-- As per discussion with Ryan on 27th Sep, 2011 -->
                      <!-- NaN Change - As per discussion with Ryan on 9th Oct, 2011 -->
                      <xsl:choose>
                        <xsl:when test='(normalize-space(ns0:Line[1]/ns0:HD5N403) != "") and (number(normalize-space(ns0:Line[1]/ns0:HD5N403)))'>
                          <ns9:PostalCode>
                            <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD5N403)"/>
                          </ns9:PostalCode>
                        </xsl:when>
                        <xsl:otherwise>
                          <ns9:PostalCode>
                            <xsl:value-of select="$Default_N403"/>
                          </ns9:PostalCode>
                        </xsl:otherwise>
                      </xsl:choose>
                      
                    </ns9:Address>
                  </ns9:Location>
                  
                  <!-- NotFound -->
                  <ns9:Contact>
                    <ns9:Name>
                      <xsl:value-of select="xp20:upper-case(normalize-space(ns0:Line[1]/ns0:HD5PER02))"/>
                    </ns9:Name>
          
                    <xsl:if test="normalize-space(ns0:Line[1]/ns0:HD5PER04) != ''">
                    <ns9:Communication>
                      <ns9:ChannelCode>
                        <xsl:value-of select="string('TELEPHONE')"/>
                      </ns9:ChannelCode>
                      <ns9:Text>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD5PER04)"/>
                      </ns9:Text>
                    </ns9:Communication>
                    </xsl:if>
                    
                    <xsl:if test="normalize-space(ns0:Line[1]/ns0:HD5PER06) != ''">
                    <ns9:Communication>
                      <ns9:ChannelCode>
                        <xsl:value-of select="string('FAX')"/>
                      </ns9:ChannelCode>
                      <ns9:Text>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD5PER06)"/>
                      </ns9:Text>
                    </ns9:Communication>
                    </xsl:if>
                    <xsl:if test="normalize-space(ns0:Line[1]/ns0:HD5PER08) != ''">
                    <ns9:Communication>
                      <ns9:ChannelCode>
                        <xsl:value-of select="string('EMAIL')"/>
                      </ns9:ChannelCode>
                      <ns9:Text>
                        <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HD5PER08)"/>
                      </ns9:Text>
                    </ns9:Communication>
                    </xsl:if>
                  </ns9:Contact>
                </ns9:BuyerParty>
              </xsl:if>
            <ns9:ReleaseNumber>
              <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HDBEG04)"/>
            </ns9:ReleaseNumber>
            <ns9:UserArea>
              <ns9:CustomPurchaseOrderUserArea>
                <ns9:CustomPurchaseOrderHeaderUserArea>
                  <ns9:EXCHRATE>
                    <xsl:value-of select="normalize-space(ns0:Line[1]/ns0:HDCUR03)"/>
                  </ns9:EXCHRATE>
                  <xsl:if test="normalize-space(ns0:Line[1]/ns0:HDCUR08) != ''">
                  <!--<ns9:ExchangeRateDate>
                    <xsl:variable name="Year" select="substring(normalize-space(/ns0:PurchaseOrder/ns0:Line[1]/ns0:HDCUR08),1.0,4.0)"/>
                    <xsl:variable name="Rest" select="substring(normalize-space(/ns0:PurchaseOrder/ns0:Line[1]/ns0:HDCUR08),5)"/>
                    <xsl:variable name="Month" select="substring($Rest,1.0,2.0)"/>
                    <xsl:variable name="Day" select="substring($Rest,3.0)"/>
                    <xsl:value-of select="concat($Year,'-',$Month,'-',$Day,'T00:00:00.0000+00:00')"/>
                  </ns9:ExchangeRateDate>-->
                  
                  <ns9:ExchangeRateDate>
                    <xsl:value-of select="ethCustomXSLT:getISODateFromEDI(normalize-space(ns0:Line[1]/ns0:HDCUR08),'NO_TIME','',normalize-space(ns0:Line[1]/ns0:HDCUR08))"/>
                  </ns9:ExchangeRateDate>
                  </xsl:if>
                </ns9:CustomPurchaseOrderHeaderUserArea>
              </ns9:CustomPurchaseOrderUserArea>
            </ns9:UserArea>
            </ns9:PurchaseOrderHeader>
          <!-- Ryan - if there is HEADER Status is CANCEL, dont map any Line -->
          <xsl:if test="$POCO_HDR_STATUS != 'CANCEL'">
           <xsl:apply-templates select="ns0:Line[generate-id() = generate-id(key('keyLine', ns0:LN1PO101)[1])]"/>
           </xsl:if>
        </ebo:ChangePurchaseOrder>
      </ebo:DataArea>          
  </ebo:ChangePurchaseOrderEBM> 
  </xsl:template>
  
  <xsl:template match="ns0:Line">
    <ns9:PurchaseOrderLine>
        <ns9:LineNumber>
            <xsl:value-of select="normalize-space(ns0:LN1PO101)"/>
        </ns9:LineNumber>
        <ns9:Description>
            <xsl:value-of select="normalize-space(ns0:LN1PID05)"/>
        </ns9:Description>
        <ns9:Note>
            <xsl:value-of select="normalize-space(ns0:LN1MTX02)"/>
        </ns9:Note>
        <xsl:if test="normalize-space(ns0:LN1MTX03) != ''">
            <ns9:Note>
                <xsl:value-of select="normalize-space(ns0:LN1MTX03)"/>
            </ns9:Note>
        </xsl:if>
        <xsl:variable name="POCO_LINE_STATUS" select="ethCustomXSLT:formatValue(ethCustomXSLT:ethParameterLookup($JDBC_CONF_JNDI,$JDBC_URL,'false', $PROCESS_NAME, $PROCESS_INSTANCE, $LOOKUP_POLINE_STATUS_TYPE,normalize-space(ns0:LN1POC02), $DEFAULT_STATUS),2,10,0,$DEFAULT_STATUS,$DEFAULT_STATUS)"/>
        <xsl:variable name="PO_SCHEDULE_STATUS" select="$POCO_LINE_STATUS"/>
        <ns9:Status>
            <ns9:Code>
                <xsl:value-of select="$POCO_LINE_STATUS"/>
            </ns9:Code>
        </ns9:Status>
        <ns9:Item>
            <ns9:ItemID>
                <ns9:ID>
                    <xsl:value-of select="normalize-space(ns0:LN1PO107)"/>
                </ns9:ID>
                <ns9:RevisionID>
                    <xsl:value-of select="normalize-space(ns0:LN1PO111)"/>
                </ns9:RevisionID>
            </ns9:ItemID>
            <ns9:SupplierItemID>
                <ns9:ID>
                    <xsl:value-of select="normalize-space(ns0:LN1PO109)"/>
                </ns9:ID>
            </ns9:SupplierItemID>
            <xsl:if test="normalize-space(ns0:LN1TC202) != ''">
                <ns9:Classification>
                <!-- Changed for Comodity ID -->
                    <ns9:Codes>
                        <ns9:Code>
                            <xsl:attribute name="sequence">
                                <xsl:value-of select="string('1')"/>
                            </xsl:attribute>
                            <xsl:value-of select="normalize-space(ns0:LN1TC202)"/>
                        </ns9:Code>
                    </ns9:Codes>
                </ns9:Classification>
            </xsl:if>
            <ns9:HazardousMaterial>
                <ns9:ID>
                    <xsl:value-of select="normalize-space(ns0:LN1TD402)"/>
                </ns9:ID>
                </ns9:HazardousMaterial>
        </ns9:Item>
        <xsl:if test="normalize-space(ns0:LN1PO103) != ''">
            <ns9:Quantity>
                <xsl:attribute name="unitCode">
                    <xsl:value-of select="normalize-space(ns0:LN1PO103)"/>
                </xsl:attribute>
                <xsl:value-of select="normalize-space(ns0:LN1PO102)"/>
            </ns9:Quantity>
        </xsl:if>
        <ns9:UnitPrice>
            <ns9:Amount>
                <xsl:choose>
                    <xsl:when test='normalize-space(/ns0:PurchaseOrder/ns0:Line[1]/ns0:HDCUR02)!=""'>
                        <xsl:attribute name="currencyID">
                            <xsl:value-of select="normalize-space(/ns0:PurchaseOrder/ns0:Line[1]/ns0:HDCUR02)"/>
                        </xsl:attribute>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:attribute name="currencyID">
                            <xsl:value-of select="string('ZZZ')"/>
                        </xsl:attribute>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:value-of select="normalize-space(ns0:LN1PO104)"/>
            </ns9:Amount>
            <ns9:PerQuantity>
                <xsl:attribute name="unitCode">
                <!--<xsl:value-of select="ethCustomXSLT:ethParameterLookup($JDBC_CONF_JNDI,$JDBC_URL,'false', $PROCESS_NAME, $PROCESS_INSTANCE, $LOOKUP_UOM_TYPE, 'normalize-space(ns0:LN1PO105)', 'UN')"/>-->
                    <xsl:value-of select="ethCustomXSLT:formatValue(normalize-space(ns0:LN1PO105),2.0,2.0,0.0,'UN','UN')"/>
                </xsl:attribute>
                <xsl:value-of select="string('1')"/>
            </ns9:PerQuantity>
        </ns9:UnitPrice>
        <xsl:if test="normalize-space(ns0:LN1TX106) != ''">
            <xsl:choose>
                <xsl:when test="normalize-space(ns0:LN1TX106) = 1">
                    <ns9:DistributedTax>
                        <ns9:Exemption>
                            <ns9:ID>
                                <xsl:value-of select="string('YES')"/>
                            </ns9:ID>
                        </ns9:Exemption>
                    </ns9:DistributedTax>
                </xsl:when>
                <xsl:otherwise>
                    <ns9:DistributedTax>
                        <ns9:Exemption>
                            <ns9:ID>
                                <xsl:value-of select="string('NO')"/>
                            </ns9:ID>
                        </ns9:Exemption>
                    </ns9:DistributedTax>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
        <!-- Ryan - if the POCO LINE Status is CANCEL, dont map the Schedule -->
        <!-- 21st Sep, 2011 - A Line without a schedule fails in B2B, so commenting -->
        <!--<xsl:if test="$POCO_LINE_STATUS != 'CANCEL'">-->
        <xsl:for-each select="key('keyLine', ns0:LN1PO101)">
            <ns9:PurchaseOrderSchedule>
                <ns9:LineNumber>
                    <xsl:value-of select="normalize-space(ns0:LN1SCH12)"/>
                </ns9:LineNumber>
                <ns9:Quantity>
                    <xsl:attribute name="unitCode">
                        <xsl:value-of select="normalize-space(ns0:LN1SCH02)"/>
                    </xsl:attribute>
                    <xsl:value-of select="normalize-space(ns0:LN1SCH01)"/>
                </ns9:Quantity>
                <xsl:if test="normalize-space(ns0:LN1SCH06) != ''">
                    <xsl:choose>
                        <xsl:when test="normalize-space(ns0:LN1SCH06) = $WRONG_DATE">
                            <ns9:RequiredDeliveryDateTime>
                                <xsl:value-of select="$Default_SCH06_09"/>
                            </ns9:RequiredDeliveryDateTime>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns9:RequiredDeliveryDateTime>
                                <xsl:value-of select="ethCustomXSLT:getISODateFromEDI(normalize-space(ns0:LN1SCH06),'','',normalize-space(ns0:LN1SCH06))"/>
                            </ns9:RequiredDeliveryDateTime>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:if>
                <ns9:UserArea>
                    <ns9:CustomPurchaseOrderUserArea>
                        <ns9:CustomPurchaseOrderLineUserArea>
                            <ns9:CustomPurchaseOrderLineScheduleUserArea>
                                <xsl:if test="normalize-space(ns0:LN1SCH09) != ''">
                                <!--<ns9:PromisedShipDateTime>                        
                                <xsl:variable name="Year" select="substring(normalize-space(/ns0:PurchaseOrder/ns0:Line/LN1SCH09),1.0,4.0)"/>
                                <xsl:variable name="Rest" select="substring(normalize-space(/ns0:PurchaseOrder/ns0:Line/LN1SCH09),5)"/>
                                <xsl:variable name="Month" select="substring($Rest,1.0,2.0)"/>
                                <xsl:variable name="Day" select="substring($Rest,3.0)"/>
                                <xsl:value-of select="concat($Year,'-',$Month,'-',$Day,'T00:00:00.0000+00:00')"/>
                                </ns9:PromisedShipDateTime>-->
                                    <xsl:choose>
                                        <xsl:when test="normalize-space(ns0:LN1SCH09) = $WRONG_DATE">
                                            <ns9:PromisedShipDateTime>
                                                <xsl:value-of select="$Default_SCH06_09"/>
                                            </ns9:PromisedShipDateTime>
                                        </xsl:when>
                                    <xsl:otherwise>
                                        <ns9:PromisedShipDateTime>
                                            <xsl:value-of select="ethCustomXSLT:getISODateFromEDI(normalize-space(ns0:LN1SCH09),'','',normalize-space(ns0:LN1SCH09))"/>
                                        </ns9:PromisedShipDateTime>
                                    </xsl:otherwise>
                                    </xsl:choose>
                                </xsl:if>
                                <!--Not populated in XML mapping too
                                <xsl:if test="/ns0:PurchaseOrder/ns0:Line/LN1SCH06 and /ns0:PurchaseOrder/ns0:Line/LN1SCH06 != ''">
                                <ns9:PromisedDeliveryDateTime>                        
                                <xsl:variable name="Year" select="substring(normalize-space(/ns0:PurchaseOrder/ns0:Line/LN1SCH06),1.0,4.0)"/>
                                <xsl:variable name="Rest" select="substring(normalize-space(/ns0:PurchaseOrder/ns0:Line/LN1SCH06),5)"/>
                                <xsl:variable name="Month" select="substring($Rest,1.0,2.0)"/>
                                <xsl:variable name="Day" select="substring($Rest,3.0)"/>
                                <xsl:value-of select="concat($Year,'-',$Month,'-',$Day,'T00:00:00.0000+00:00')"/>
                                </ns9:PromisedDeliveryDateTime>
                                </xsl:if>-->
                                <ns9:ShipToParty>
                                    <ns9:PartyIDs>
                                        <ns9:ID>
                                            <!-- As discussed by Ryan on 4th Oct, 2011 -->
                                            <xsl:value-of select='ethCustomXSLT:formatValue(normalize-space(ns0:LN3N104),2.0,80.0,0.0,$Default_N104,$Default_N104)'/>
                                            <!--<xsl:value-of select="normalize-space(ns0:LN3N104)"/>-->
                                        </ns9:ID>
                                    </ns9:PartyIDs>
                                    <ns9:Name>
                                        <xsl:value-of select="xp20:upper-case(normalize-space(ns0:LN3N102))"/>
                                    </ns9:Name>
                                    <xsl:if test="normalize-space(ns0:LN3N201) != ''">
                                        <ns9:Name>
                                            <xsl:value-of select="xp20:upper-case(normalize-space(ns0:LN3N201))"/>
                                        </ns9:Name>
                                    </xsl:if>
                                    <!--<ns9:Name>   
                                                <xsl:value-of select="string('NotFound')"/>
                                    </ns9:Name>-->
                                    <ns9:Location>
                                        <ns9:ID>
                                            <xsl:value-of select="normalize-space(ns0:LN3N406)"/>
                                        </ns9:ID>
                                        <ns9:Address>
                                            <ns9:AddressLine>
                                                <xsl:attribute name="sequence">
                                                    <xsl:value-of select="string(1)"/>
                                                </xsl:attribute>
                                                <xsl:value-of select="normalize-space(ns0:LN3N301)"/>
                                            </ns9:AddressLine>
                                            <ns9:AddressLine>
                                                <xsl:attribute name="sequence">
                                                    <xsl:value-of select="string(2)"/>
                                                </xsl:attribute>
                                                <xsl:value-of select="normalize-space(ns0:LN3N302)"/>
                                            </ns9:AddressLine>
                                            <ns9:CityName>
                                                <xsl:value-of select="xp20:upper-case(normalize-space(ns0:LN3N401))"/>
                                            </ns9:CityName>
                                            <ns9:CountrySubDivisionCode>
                                                <xsl:value-of select="xp20:upper-case(normalize-space(ns0:LN3N407))"/>
                                            </ns9:CountrySubDivisionCode>
                                            <ns9:CountryCode>
                                                <xsl:value-of select="xp20:upper-case(normalize-space(ns0:LN3N404))"/>
                                            </ns9:CountryCode>
                                            <!-- As per discussion with Ryan on 27th Sep, 2011 -->
                                            <!-- NaN Change - As per discussion with Ryan on 9th Oct, 2011 -->
                                            <xsl:choose>
                                                <xsl:when test='(normalize-space(ns0:LN3N403) != "") and (number(normalize-space(ns0:LN3N403)))'>
                                                    <ns9:PostalCode>
                                                        <xsl:value-of select="normalize-space(ns0:LN3N403)"/>
                                                    </ns9:PostalCode>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <ns9:PostalCode>
                                                        <xsl:value-of select="$Default_N403"/>
                                                    </ns9:PostalCode>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </ns9:Address>
                                    </ns9:Location>    
    <!-- NotFound -->
                                    <ns9:Contact>
                                        <ns9:Name>
                                            <xsl:value-of select="xp20:upper-case(normalize-space(ns0:LN3PER02))"/>
                                        </ns9:Name>
                                        <xsl:if test="normalize-space(ns0:LN3PER04) != ''">
                                            <ns9:Communication>
                                                <ns9:ChannelCode>
                                                    <xsl:value-of select="string('TELEPHONE')"/>
                                                </ns9:ChannelCode>
                                                <ns9:Text>
                                                    <xsl:value-of select="normalize-space(ns0:LN3PER04)"/>
                                                </ns9:Text>
                                            </ns9:Communication>
                                        </xsl:if>
                                        <xsl:if test="normalize-space(ns0:LN3PER06) != ''">
                                            <ns9:Communication>
                                                <ns9:ChannelCode>
                                                    <xsl:value-of select="string('FAX')"/>
                                                </ns9:ChannelCode>
                                                    <ns9:Text>
                                                        <xsl:value-of select="normalize-space(ns0:LN3PER06)"/>
                                                    </ns9:Text>
                                            </ns9:Communication>
                                        </xsl:if>
                                        <xsl:if test="normalize-space(ns0:LN3PER08) != ''">
                                            <ns9:Communication>
                                                <ns9:ChannelCode>
                                                    <xsl:value-of select="string('EMAIL')"/>
                                                </ns9:ChannelCode>
                                                <ns9:Text>
                                                    <xsl:value-of select="normalize-space(ns0:LN3PER08)"/>
                                                </ns9:Text>
                                            </ns9:Communication>
                                        </xsl:if>
                                    </ns9:Contact>
                                </ns9:ShipToParty>
                                <ns9:PSCLNSTATUS>
                                    <xsl:value-of select="$PO_SCHEDULE_STATUS"/>
                                </ns9:PSCLNSTATUS>
                            </ns9:CustomPurchaseOrderLineScheduleUserArea>
                        </ns9:CustomPurchaseOrderLineUserArea>
                    </ns9:CustomPurchaseOrderUserArea>
                </ns9:UserArea>  
            </ns9:PurchaseOrderSchedule>
        </xsl:for-each>
    </ns9:PurchaseOrderLine>
  </xsl:template>
  
</xsl:stylesheet>

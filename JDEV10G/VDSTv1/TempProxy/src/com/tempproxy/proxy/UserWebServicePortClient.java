// This source file is generated by Oracle tools and is subject to change
// It is a utility client for invoking the operations of the Web service port.
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package com.tempproxy.proxy;

import oracle.webservices.transport.ClientTransport;
import oracle.webservices.OracleStub;
import javax.xml.rpc.ServiceFactory;
import javax.xml.rpc.Stub;

public class UserWebServicePortClient {
    private com.tempproxy.proxy.UserWebServicePortType _port;
    
    public UserWebServicePortClient() throws Exception {
        ServiceFactory factory = ServiceFactory.newInstance();
        _port = ((com.tempproxy.proxy.UserWebService)factory.loadService(com.tempproxy.proxy.UserWebService.class)).getUserWebServicePort();
    }
    
    /**
     * @param args
     */
    public static void main(String[] args) {
        try {
            com.tempproxy.proxy.UserWebServicePortClient myPort = new com.tempproxy.proxy.UserWebServicePortClient();
            System.out.println("calling " + myPort.getEndpoint());
            // Add your own code here
            String password = "tTGFS8CHPmjthH1UfQX7F8M5UgndrfxmLJtSeMELZcA=";
            password = "1234";
        
            //String result = myPort.login("admintester",password.getBytes());
            UserType userType = myPort.findUser("5B1548783F58ACDA06FC1DDE6A72448C","adminterster");
            System.out.println("Result - "+userType.getAccountID());
        
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    /**
     * delegate all operations to the underlying implementation class.
     */
    
    public String login(String loginName, byte[] password) throws java.rmi.RemoteException, com.tempproxy.proxy.types.com.emerson.service.vdst.tool.common.FaultDetailType, com.tempproxy.proxy.types.com.emerson.service.vdst.tool.common.SOAPException {
        return _port.login(loginName, password);
    }
    
    public void logout(String sessionID) throws java.rmi.RemoteException, com.tempproxy.proxy.types.com.emerson.service.vdst.tool.common.SOAPException, com.tempproxy.proxy.types.com.emerson.service.vdst.tool.common.FaultDetailType {
        _port.logout(sessionID);
    }
    
    public UserType findUser(String sessionID, String loginName) throws java.rmi.RemoteException, com.tempproxy.proxy.types.com.emerson.service.vdst.tool.common.FaultDetailType, com.tempproxy.proxy.types.com.emerson.service.vdst.tool.common.SOAPException {
        return _port.findUser(sessionID, loginName);
    }
    
    
    /**
     * used to access the JAX-RPC level APIs
     * returns the interface of the port instance
     */
    public com.tempproxy.proxy.UserWebServicePortType getPort() {
        return _port;
    }
    
    public String getEndpoint() {
        return (String) ((Stub) _port)._getProperty(Stub.ENDPOINT_ADDRESS_PROPERTY);
    }
    
    public void setEndpoint(String endpoint) {
        ((Stub) _port)._setProperty(Stub.ENDPOINT_ADDRESS_PROPERTY, endpoint);
    }
    
    public String getPassword() {
        return (String) ((Stub) _port)._getProperty(Stub.PASSWORD_PROPERTY);
    }
    
    public void setPassword(String password) {
        ((Stub) _port)._setProperty(Stub.PASSWORD_PROPERTY, password);
    }
    
    public String getUsername() {
        return (String) ((Stub) _port)._getProperty(Stub.USERNAME_PROPERTY);
    }
    
    public void setUsername(String username) {
        ((Stub) _port)._setProperty(Stub.USERNAME_PROPERTY, username);
    }
    
    public void setMaintainSession(boolean maintainSession) {
        ((Stub) _port)._setProperty(Stub.SESSION_MAINTAIN_PROPERTY, Boolean.valueOf(maintainSession));
    }
    
    public boolean getMaintainSession() {
        return ((Boolean) ((Stub) _port)._getProperty(Stub.SESSION_MAINTAIN_PROPERTY)).booleanValue();
    }
    
    /**
     * returns the transport context
     */
    public ClientTransport getClientTransport() {
        return ((OracleStub) _port).getClientTransport();
    }
    
}

<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="ETHSys_IntegrationServices_ETHSysGrp_ProcessPurchaseOrder_ETH_Transform_CustomOAGIS_7_2_RS.wsdl"/>
      <rootElement name="CustomProcess_PO_007" namespace="http://xmlns.emrsn.com/CustomProcess_PO_007"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="ETHSys_IntegrationServices_ETHSysGrp_ProcessPurchaseOrder_ETH_Transform_CustomOAGIS_9_0_RS.wsdl"/>
      <rootElement name="CustomProcessPO" namespace="http://xmlns.emrsn.com/CustomProcessPurchaseOrder"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.4.0(build 080718.0645) AT [THU MAR 12 21:27:33 IST 2009]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:ns2="http://xmlns.emrsn.com/CustomProcessPurchaseOrder"
                xmlns:ns7="http://www.openapplications.org/oagis/9/unqualifieddatatypes/1.1"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ns9="http://www.openapplications.org/oagis/9/currencycode/54217:2001"
                xmlns:ns6="http://www.openapplications.org/oagis/9/qualifieddatatypes/1.1"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                xmlns:ns1="http://xmlns.emrsn.com/CustomProcess_PO_007"
                xmlns:ns3="http://www.openapplications.org/oagis/9/IANAMIMEMediaTypes:2003"
                xmlns:ns0="http://www.w3.org/2001/XMLSchema"
                xmlns:ns4="http://www.openapplications.org/oagis/9/codelists"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:inp1="http://xmlns.emrsn.com/CommonProcessPO_007"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:tns="http://oracle.com/esb/namespaces/ETHSys_IntegrationServices_ETHSysGrp_ProcessPurchaseOrder"
                xmlns:imp1="http://www.openapplications.org/oagis/9"
                xmlns:ns8="http://www.openapplications.org/oagis/9/unitcode/66411:2001"
                xmlns:ns10="http://www.openapplications.org/oagis/9/languagecode/5639:1988"
                exclude-result-prefixes="xsl inp1 ns0 ns1 tns ns2 ns7 ns9 ns6 ns3 ns4 ns5 ns8 ns10 bpws ehdr hwf xp20 xref ora ids orcl">
  <xsl:template match="/">
    <ns2:CustomProcessPO>
      <ProcessPO>
        <!--START FOR THE HEADER OF USERAREA -->
           <xsl:variable name="temp">  
                 <xsl:value-of select="orcl:getContentAsString(/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:USERAREA)"/>
            </xsl:variable> 
<!--START FOR THE HEADER DATETIME OF USERAREA -->
          <xsl:variable name="temp1">
              <xsl:value-of select='substring-after($temp,"&lt;DATETIME")'/>
            </xsl:variable>
            <xsl:variable name="temp2">
              <xsl:value-of select='substring-before($temp1,"&lt;/DATETIME")'/>
            </xsl:variable>
            <xsl:variable name="yearsub">
              <xsl:value-of select='substring-after($temp2,"YEAR>")'/>
            </xsl:variable>
            <xsl:variable name="year">
              <xsl:value-of select='substring-before($yearsub,"&lt;/YEAR")'/>
            </xsl:variable>
            <xsl:variable name="monthsub">
              <xsl:value-of select='substring-after($temp2,"&lt;MONTH>")'/>
            </xsl:variable>
            <xsl:variable name="month">
              <xsl:value-of select='substring-before($monthsub,"&lt;/MONTH>")'/>
            </xsl:variable>
            <xsl:variable name="daysub">
              <xsl:value-of select='substring-after($temp2,"&lt;DAY>")'/>
            </xsl:variable>
            <xsl:variable name="day">
              <xsl:value-of select='substring-before($daysub,"&lt;/DAY>")'/>
            </xsl:variable>
            <xsl:variable name="hoursub">
              <xsl:value-of select='substring-after($temp2,"&lt;HOUR>")'/>
            </xsl:variable>
            <xsl:variable name="hour">
              <xsl:value-of select='substring-before($hoursub,"&lt;/HOUR>")'/>
            </xsl:variable>
            <xsl:variable name="minsub">
              <xsl:value-of select='substring-after($temp2,"&lt;MINUTE>")'/>
            </xsl:variable>
            <xsl:variable name="min">
              <xsl:value-of select='substring-before($minsub,"&lt;/MINUTE>")'/>
            </xsl:variable>
            <xsl:variable name="secsub">
              <xsl:value-of select='substring-after($temp2,"&lt;SECOND>")'/>
            </xsl:variable>
            <xsl:variable name="sec">
              <xsl:value-of select='substring-before($secsub,"&lt;/SECOND>")'/>
            </xsl:variable>
            <xsl:variable name="subsecsub">
              <xsl:value-of select='substring-after($temp2,"&lt;SUBSECOND>")'/>
            </xsl:variable>
            <xsl:variable name="subsec">
              <xsl:value-of select='substring-before($subsecsub,"&lt;/SUBSECOND>")'/>
            </xsl:variable>
            <xsl:variable name="timezonesub">
              <xsl:value-of select='substring-after($temp2,"&lt;TIMEZONE>")'/>
            </xsl:variable>
            <xsl:variable name="timezone">
              <xsl:value-of select='substring-before($timezonesub,"&lt;/TIMEZONE>")'/>
            </xsl:variable>
<!--START FOR THE HEADER TERMID & FTTERM OF USERAREA -->
           <xsl:variable name="fobtermidsub">
              <xsl:value-of select='substring-after($temp,"TERMID>")'/>
            </xsl:variable>
            <xsl:variable name="fobtermid">
              <xsl:value-of select='substring-before($fobtermidsub,"&lt;/TERMID")'/>
            </xsl:variable>
            <!-- ADDED AS ON 29 OCT "FOB DESCRIPTION"-->
            <xsl:variable name="fobdescsub">
              <xsl:value-of select='substring-after($temp,"DESCRIPTN>")'/>
            </xsl:variable>
            <xsl:variable name="fobdesc">
              <xsl:value-of select='substring-before($fobdescsub,"&lt;/DESCRIPTN")'/>
            </xsl:variable> 
            <xsl:variable name="ftterm_temp1">
              <xsl:value-of select='substring-after($temp,"FTTERM&gt;")'/>
            </xsl:variable>
            <xsl:variable name="ftterm_temp2">
              <xsl:value-of select='substring-before($ftterm_temp1,"&lt;/FTTERM")'/>
            </xsl:variable>
              <xsl:variable name="fttermidsub">
            <xsl:value-of select='substring-after($ftterm_temp2,"TERMID>")'/>
            </xsl:variable>
            <xsl:variable name="fttermid">
              <xsl:value-of select='substring-before($fttermidsub,"&lt;/TERMID")'/>
            </xsl:variable>
            
            <!-- ADDED AS ON 29 OCT "FTTERM DESCRIPTION"-->
             <xsl:variable name="ftterm_descsub">
            <xsl:value-of select='substring-after($ftterm_temp2,"DESCRIPTN>")'/>
            </xsl:variable>
            <xsl:variable name="ftterm_desc">
              <xsl:value-of select='substring-before($ftterm_descsub,"&lt;/DESCRIPTN")'/>
            </xsl:variable>
            
              <xsl:variable name="exchratesub">
            <xsl:value-of select='substring-after($temp,"EXCHRATE>")'/>
              </xsl:variable>
            <xsl:variable name="exchrate">
              <xsl:value-of select='substring-before($exchratesub,"&lt;/EXCHRATE")'/>
            </xsl:variable>
<!--START FOR THE DFFPOHEADER  OF USERAREA -->
            <xsl:variable name="dffpoheader_temp1">
              <xsl:value-of select='substring-after($temp,"DFFPOHEADER&gt;")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader_temp2">
              <xsl:value-of select='substring-before($dffpoheader_temp1,"&lt;/DFFPOHEADER")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub1">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE1>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader1">
              <xsl:value-of select='substring-before($dffpoheadersub1,"&lt;/ATTRIBUTE1")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub2">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE2>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader2">
              <xsl:value-of select='substring-before($dffpoheadersub2,"&lt;/ATTRIBUTE2")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub3">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE3>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader3">
              <xsl:value-of select='substring-before($dffpoheadersub3,"&lt;/ATTRIBUTE3")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub4">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE4>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader4">
              <xsl:value-of select='substring-before($dffpoheadersub4,"&lt;/ATTRIBUTE4")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub5">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE5>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader5">
              <xsl:value-of select='substring-before($dffpoheadersub5,"&lt;/ATTRIBUTE5")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub6">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE6>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader6">
              <xsl:value-of select='substring-before($dffpoheadersub6,"&lt;/ATTRIBUTE6")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub7">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE7>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader7">
              <xsl:value-of select='substring-before($dffpoheadersub7,"&lt;/ATTRIBUTE7")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub8">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE8>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader8">
              <xsl:value-of select='substring-before($dffpoheadersub8,"&lt;/ATTRIBUTE8")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub9">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE9>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader9">
              <xsl:value-of select='substring-before($dffpoheadersub9,"&lt;/ATTRIBUTE9")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub10">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE10>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader10">
              <xsl:value-of select='substring-before($dffpoheadersub10,"&lt;/ATTRIBUTE10")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub11">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE11>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader11">
              <xsl:value-of select='substring-before($dffpoheadersub11,"&lt;/ATTRIBUTE11")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub12">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE12>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader12">
              <xsl:value-of select='substring-before($dffpoheadersub12,"&lt;/ATTRIBUTE12")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub13">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE13>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader13">
              <xsl:value-of select='substring-before($dffpoheadersub13,"&lt;/ATTRIBUTE13")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub14">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE14>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader14">
              <xsl:value-of select='substring-before($dffpoheadersub14,"&lt;/ATTRIBUTE14")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub15">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE15>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader15">
              <xsl:value-of select='substring-before($dffpoheadersub15,"&lt;/ATTRIBUTE15")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheadersub16">
              <xsl:value-of select='substring-after($dffpoheader_temp2,"ATTRIBUTE16>")'/>
            </xsl:variable>
            <xsl:variable name="dffpoheader16">
              <xsl:value-of select='substring-before($dffpoheadersub16,"&lt;/ATTRIBUTE16")'/>
            </xsl:variable>
       
        
      <xsl:attribute name="releaseID">
        <xsl:value-of select="string('9.0')"/>
      </xsl:attribute>
     <xsl:attribute name="versionID">
        <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:BSR/inp1:REVISION"/>
      </xsl:attribute>
      <xsl:if test='/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:SENDER/inp1:LANGUAGE = "US"'>
        <xsl:attribute name="languageCode">
          <xsl:value-of select='string("en-US")'/>
        </xsl:attribute>
      </xsl:if>
      <imp1:ApplicationArea>
        <imp1:Sender>
          <imp1:LogicalID>
            <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:SENDER/inp1:LOGICALID"/>
          </imp1:LogicalID>
          <imp1:ComponentID>
            <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:SENDER/inp1:COMPONENT"/>
          </imp1:ComponentID>
          <imp1:TaskID>
            <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:SENDER/inp1:TASK"/>
          </imp1:TaskID>
          <imp1:ReferenceID>
            <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:SENDER/inp1:REFERENCEID"/>
          </imp1:ReferenceID>
         <!-- <imp1:ConfirmationCode>
            <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:SENDER/inp1:CONFIRMATION"/>
          </imp1:ConfirmationCode>-->
          
          <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:SENDER/inp1:CONFIRMATION ='0'">
          <imp1:ConfirmationCode>
            <xsl:value-of select="string('Never')"/>
          </imp1:ConfirmationCode>
          </xsl:if>
          <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:SENDER/inp1:CONFIRMATION ='1'">
          <imp1:ConfirmationCode>
            <xsl:value-of select="string('OnError')"/>
          </imp1:ConfirmationCode>
          </xsl:if>
          <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:SENDER/inp1:CONFIRMATION ='2'">
          <imp1:ConfirmationCode>
            <xsl:value-of select="string('Always')"/>
          </imp1:ConfirmationCode>
          </xsl:if>
          <imp1:AuthorizationID>
            <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:SENDER/inp1:AUTHID"/>
          </imp1:AuthorizationID>
        </imp1:Sender>
        <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:YEAR != ''">
        <imp1:CreationDateTime>
        <xsl:value-of select='concat(/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:YEAR,"-",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:MONTH,"-",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:DAY,"T",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:HOUR,":",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:MINUTE,":",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:SECOND,substring(/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:TIMEZONE,1.0,3.0),":",substring(/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:TIMEZONE,4.0,2.0))'/> 
 <!--   <xsl:value-of select='concat(/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:YEAR,"-",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:MONTH,"-",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:DAY,"T",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:HOUR,":",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:MINUTE,":",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:SECOND,":",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:SUBSECOND,substring(/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:TIMEZONE,1.0,3.0),":",substring(/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:TIMEZONE,4.0,2.0))'/> -->
        </imp1:CreationDateTime>
        </xsl:if>
        <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:CNTROLAREA/inp1:DATETIME/inp1:YEAR = ''">
        <imp1:CreationDateTime>
          <xsl:value-of select='""'/>
        </imp1:CreationDateTime>
        </xsl:if>    <!-- changed as on 15'Sep -->
<!--<imp1:UserArea>
    <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE1')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader1"/> 
        
          </imp1:Note>
           <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE2')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader2"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE3')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader3"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE4')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader4"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE5')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader5"/>
          </imp1:Note>
            <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE6')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader6"/>
          </imp1:Note>
           <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE7')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader7"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE8')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader8"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE9')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader9"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE10')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader10"/>
          </imp1:Note>
           <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE11')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader11"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE12')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader12"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE13')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader13"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE14')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader14"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE15')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader15"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE16')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader16"/>
          </imp1:Note>
          </imp1:UserArea> -->
          </imp1:ApplicationArea>
	<!--<imp1:UserArea>
            <xsl:value-of  select="concat($dffpoheader1,$dffpoheader2,$dffpoheader3,$dffpoheader4,$dffpoheader5,$dffpoheader6,$dffpoheader7,$dffpoheader8,$dffpoheader9,$dffpoheader10,$dffpoheader11,$dffpoheader12,$dffpoheader13,$dffpoheader14,$dffpoheader15,$dffpoheader16)"/>
        </imp1:UserArea> --> <!-- changed as on 15'Sep --> <!-- removed as per new mappings of userarea -->
      <DataArea>
        <imp1:Process>
         <!-- <xsl:choose>
            <xsl:when test='/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:ACKREQUEST != ""'>
              <xsl:attribute name="acknowledgeCode">
                <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:ACKREQUEST"/>
              </xsl:attribute>
            </xsl:when>
            <xsl:otherwise>
              <xsl:attribute name="acknowledgeCode">
                <xsl:value-of select="string('N')"/>
              </xsl:attribute>
            </xsl:otherwise>
          </xsl:choose>--><!--Removed as on 21 NOV -->
        </imp1:Process>
        <imp1:PurchaseOrder>
          <imp1:PurchaseOrderHeader>
            <imp1:DocumentID>
              <imp1:ID>
                <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:POID"/>
              </imp1:ID>
              <imp1:VariationID>
                <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:POTYPE"/>
              </imp1:VariationID>
            </imp1:DocumentID>
	   <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:YEAR != ''">
            <imp1:DocumentDateTime>
             <xsl:value-of select='concat(/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:YEAR,"-",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:MONTH,"-",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:DAY,"T",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:HOUR,":",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:MINUTE,":",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:SECOND,substring(/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:TIMEZONE,1.0,3.0),":",substring(/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:TIMEZONE,4.0,2.0))'/> 
             <!-- <xsl:value-of select='concat(/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:YEAR,"-",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:MONTH,"-",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:DAY,"T",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:HOUR,":",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:MINUTE,":",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:SECOND,":",/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:SUBSECOND,substring(/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:TIMEZONE,1.0,3.0),":",substring(/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:TIMEZONE,4.0,2.0))'/> -->
            </imp1:DocumentDateTime>
            </xsl:if>
           <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DATETIME/inp1:YEAR = ''">
            <imp1:DocumentDateTime>
              <xsl:value-of select='""'/>
            </imp1:DocumentDateTime>
            </xsl:if>   <!-- changed as on 15'Sep -->
            <imp1:Description>
              <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:DESCRIPTN"/>
            </imp1:Description>
            
             <!-- DONE on 13 Oct "Note"-->
         <!-- <xsl:for-each select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:NOTES">
              <imp1:Note>
                   <xsl:copy-of select="./@index"/>
                   <xsl:value-of select="."/>
              </imp1:Note>
            </xsl:for-each>--><!-- DONE on 13 Oct -->
            
            <!-- DONE on 16 Oct "Note"-->
              <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:NOTES[@index='1']" >
              <imp1:Note>
                 <xsl:attribute name="author">
                     <xsl:value-of select="string('1')"/>
                 </xsl:attribute>
                   <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:NOTES[@index='1']"/>
              </imp1:Note>
              </xsl:if> 
             <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:NOTES[@index='2']" >
              <imp1:Note>
                 <xsl:attribute name="author">
                     <xsl:value-of select="string('2')"/>
                 </xsl:attribute>
                   <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:NOTES[@index='2']"/>
              </imp1:Note>
              </xsl:if> 
            <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:NOTES[@index='3']" >
              <imp1:Note>
                 <xsl:attribute name="author">
                     <xsl:value-of select="string('3')"/>
                 </xsl:attribute>
                   <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:NOTES[@index='3']"/>
              </imp1:Note>
              </xsl:if>
            <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:NOTES[@index='4']" >
              <imp1:Note>
                 <xsl:attribute name="author">
                     <xsl:value-of select="string('4')"/>
                 </xsl:attribute>
                   <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:NOTES[@index='4']"/>
              </imp1:Note>
              </xsl:if> 
         <!--  </xsl:for-each>  -->
            
            
            
            
            
            
            
            
          <xsl:for-each select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:PARTNER">
              <xsl:if test='inp1:PARTNRTYPE = "Supplier"'>
<!--START FOR THE PARTNER USERAREA -->    <!-- DONE ON 13 OCT -->
      <xsl:variable name="PARTNER_TEMP">  
            <xsl:value-of select="orcl:getContentAsString(inp1:USERAREA)"/>
      </xsl:variable> 
<!--START FOR THE PARTNER USERAREA -->    <!-- DONE ON 13 OCT -->
           <xsl:variable name="PARTNER_TEMP1">
              <xsl:value-of select='substring-after($PARTNER_TEMP,"DFFVENDOR&gt;")'/>
            </xsl:variable>
            <xsl:variable name="PARTNER_TEMP2">
              <xsl:value-of select='substring-before($PARTNER_TEMP1,"&lt;/DFFVENDOR")'/>
            </xsl:variable>
            <xsl:variable name="partner_sub_att1">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE1>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att1">
              <xsl:value-of select='substring-before($partner_sub_att1,"&lt;/ATTRIBUTE1")'/>
            </xsl:variable> 
            
            <xsl:variable name="partner_sub_att2">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE2>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att2">
              <xsl:value-of select='substring-before($partner_sub_att2,"&lt;/ATTRIBUTE2")'/>
            </xsl:variable> 
            <xsl:variable name="partner_sub_att3">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE3>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att3">
              <xsl:value-of select='substring-before($partner_sub_att3,"&lt;/ATTRIBUTE3")'/>
            </xsl:variable> 
             <xsl:variable name="partner_sub_att4">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE4>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att4">
              <xsl:value-of select='substring-before($partner_sub_att4,"&lt;/ATTRIBUTE4")'/>
            </xsl:variable> 
            <xsl:variable name="partner_sub_att5">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE5>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att5">
              <xsl:value-of select='substring-before($partner_sub_att5,"&lt;/ATTRIBUTE5")'/>
            </xsl:variable> 
            <xsl:variable name="partner_sub_att6">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE6>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att6">
              <xsl:value-of select='substring-before($partner_sub_att6,"&lt;/ATTRIBUTE6")'/>
            </xsl:variable> 
            <xsl:variable name="partner_sub_att7">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE7>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att7">
              <xsl:value-of select='substring-before($partner_sub_att7,"&lt;/ATTRIBUTE7")'/>
            </xsl:variable>
             <xsl:variable name="partner_sub_att8">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE8>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att8">
              <xsl:value-of select='substring-before($partner_sub_att8,"&lt;/ATTRIBUTE8")'/>
            </xsl:variable>
             <xsl:variable name="partner_sub_att9">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE9>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att9">
              <xsl:value-of select='substring-before($partner_sub_att9,"&lt;/ATTRIBUTE9")'/>
            </xsl:variable>
             <xsl:variable name="partner_sub_att10">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE10>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att10">
              <xsl:value-of select='substring-before($partner_sub_att10,"&lt;/ATTRIBUTE10")'/>
            </xsl:variable>
             <xsl:variable name="partner_sub_att11">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE11>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att11">
              <xsl:value-of select='substring-before($partner_sub_att11,"&lt;/ATTRIBUTE11")'/>
            </xsl:variable>
             <xsl:variable name="partner_sub_att12">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE12>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att12">
              <xsl:value-of select='substring-before($partner_sub_att12,"&lt;/ATTRIBUTE12")'/>
            </xsl:variable>
             <xsl:variable name="partner_sub_att13">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE13>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att13">
              <xsl:value-of select='substring-before($partner_sub_att13,"&lt;/ATTRIBUTE13")'/>
            </xsl:variable>
             <xsl:variable name="partner_sub_att14">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE14>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att14">
              <xsl:value-of select='substring-before($partner_sub_att14,"&lt;/ATTRIBUTE14")'/>
            </xsl:variable>
             <xsl:variable name="partner_sub_att15">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE15>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att15">
              <xsl:value-of select='substring-before($partner_sub_att15,"&lt;/ATTRIBUTE15")'/>
            </xsl:variable>
             <xsl:variable name="partner_sub_att16">
              <xsl:value-of select='substring-after($PARTNER_TEMP2,"ATTRIBUTE16>")'/>
            </xsl:variable>
            <xsl:variable name="partner_att16">
              <xsl:value-of select='substring-before($partner_sub_att16,"&lt;/ATTRIBUTE16")'/>
            </xsl:variable> 
            
   <!--START FOR THE PARTNER ADDRESS USERAREA -->   <!-- DONE ON 13 OCT -->      
         <xsl:variable name="ADDRESS_TEMP">  
            <xsl:value-of select="orcl:getContentAsString(inp1:ADDRESS/inp1:USERAREA)"/>                                          
     </xsl:variable>  
<!--START FOR THE PARTNER USERAREA -->     <!-- DONE ON 13 OCT -->
          <xsl:variable name="ADDRESS_TEMP1">
              <xsl:value-of select='substring-after($ADDRESS_TEMP,"DFFVENDORSITE&gt;")'/>
            </xsl:variable>
            <xsl:variable name="ADDRESS_TEMP2">
              <xsl:value-of select='substring-before($ADDRESS_TEMP1,"&lt;/DFFVENDORSITE")'/>
            </xsl:variable>
            <xsl:variable name="address_sub_att1">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE1>")'/>
            </xsl:variable>
            <xsl:variable name="address_att1">
              <xsl:value-of select='substring-before($address_sub_att1,"&lt;/ATTRIBUTE1")'/>
            </xsl:variable>              
            <xsl:variable name="address_sub_att2">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE2>")'/>
            </xsl:variable>
            <xsl:variable name="address_att2">
              <xsl:value-of select='substring-before($address_sub_att2,"&lt;/ATTRIBUTE2")'/>
            </xsl:variable>  
            <xsl:variable name="address_sub_att3">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE3>")'/>
            </xsl:variable>
            <xsl:variable name="address_att3">
              <xsl:value-of select='substring-before($address_sub_att3,"&lt;/ATTRIBUTE3")'/>
            </xsl:variable>  
            <xsl:variable name="address_sub_att4">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE4>")'/>
            </xsl:variable>
            <xsl:variable name="address_att4">
              <xsl:value-of select='substring-before($address_sub_att4,"&lt;/ATTRIBUTE4")'/>
            </xsl:variable>  
            <xsl:variable name="address_sub_att5">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE5>")'/>
            </xsl:variable>
            <xsl:variable name="address_att5">
              <xsl:value-of select='substring-before($address_sub_att5,"&lt;/ATTRIBUTE5")'/>
            </xsl:variable>
            <xsl:variable name="address_sub_att6">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE6>")'/>
            </xsl:variable>
            <xsl:variable name="address_att6">
              <xsl:value-of select='substring-before($address_sub_att6,"&lt;/ATTRIBUTE6")'/>
            </xsl:variable>  
            <xsl:variable name="address_sub_att7">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE7>")'/>
            </xsl:variable>
            <xsl:variable name="address_att7">
              <xsl:value-of select='substring-before($address_sub_att7,"&lt;/ATTRIBUTE7")'/>
            </xsl:variable>  
            <xsl:variable name="address_sub_att8">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE8>")'/>
            </xsl:variable>
            <xsl:variable name="address_att8">
              <xsl:value-of select='substring-before($address_sub_att8,"&lt;/ATTRIBUTE8")'/>
            </xsl:variable>  
            <xsl:variable name="address_sub_att9">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE9>")'/>
            </xsl:variable>
            <xsl:variable name="address_att9">
              <xsl:value-of select='substring-before($address_sub_att9,"&lt;/ATTRIBUTE9")'/>
            </xsl:variable>  
            <xsl:variable name="address_sub_att10">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE10>")'/>
            </xsl:variable>
            <xsl:variable name="address_att10">
              <xsl:value-of select='substring-before($address_sub_att10,"&lt;/ATTRIBUTE10")'/>
            </xsl:variable> 
            <xsl:variable name="address_sub_att11">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE11>")'/>
            </xsl:variable>
            <xsl:variable name="address_att11">
              <xsl:value-of select='substring-before($address_sub_att11,"&lt;/ATTRIBUTE11")'/>
            </xsl:variable> 
            <xsl:variable name="address_sub_att12">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE12>")'/>
            </xsl:variable>
            <xsl:variable name="address_att12">
              <xsl:value-of select='substring-before($address_sub_att12,"&lt;/ATTRIBUTE12")'/>
            </xsl:variable> 
            <xsl:variable name="address_sub_att13">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE13>")'/>
            </xsl:variable>
            <xsl:variable name="address_att13">
              <xsl:value-of select='substring-before($address_sub_att13,"&lt;/ATTRIBUTE13")'/>
            </xsl:variable>  
            <xsl:variable name="address_sub_att14">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE14>")'/>
            </xsl:variable>
            <xsl:variable name="address_att14">
              <xsl:value-of select='substring-before($address_sub_att14,"&lt;/ATTRIBUTE14")'/>
            </xsl:variable>  
            <xsl:variable name="address_sub_att15">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE15>")'/>
            </xsl:variable>
            <xsl:variable name="address_att15">
              <xsl:value-of select='substring-before($address_sub_att15,"&lt;/ATTRIBUTE15")'/>
            </xsl:variable>  
            <xsl:variable name="address_sub_att16">
              <xsl:value-of select='substring-after($ADDRESS_TEMP2,"ATTRIBUTE16>")'/>
            </xsl:variable>
            <xsl:variable name="address_att16">
              <xsl:value-of select='substring-before($address_sub_att16,"&lt;/ATTRIBUTE16")'/>
            </xsl:variable> 
                <imp1:SupplierParty>
                  <imp1:PartyIDs>
                    <imp1:ID>
                     <xsl:value-of select="inp1:PARTNRID"/>                    
                    </imp1:ID>
                    <imp1:TaxID>
                      <xsl:value-of select="inp1:TAXID"/>
                    </imp1:TaxID>
                    <imp1:DUNSID>
                      <xsl:value-of select="inp1:DUNSNUMBER"/>
                    </imp1:DUNSID>
                  </imp1:PartyIDs>
                  <imp1:Name>
                    <xsl:value-of select="inp1:NAME"/> 
                  </imp1:Name>
                  <imp1:Location>
                    <!--<xsl:attribute name="type">
                      <xsl:value-of select="inp1:ADDRESS/inp1:ADDRTYPE"/> 
                    </xsl:attribute>--><!--removed as on 18 NOV--><!-- added as on 18 Sep-->
                    <imp1:ID>
                      <xsl:value-of select="inp1:PARTNRIDX"/>
                    </imp1:ID>
                    <imp1:Address>
                        <!--START FOR THE PARTNER ADDRESS USERAREA -->
                     <!-- <imp1:ID>
                        <xsl:value-of select="inp1:ADDRESS/inp1:ADDRTYPE"/>
                      </imp1:ID> --> <!-- removed as on 18 Sep-->
                      <imp1:LineOne>
                        <xsl:value-of select='/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:PARTNER/inp1:ADDRESS/inp1:ADDRLINE[@index = "1"]'/>
                      </imp1:LineOne>
                      <imp1:LineTwo>
                        <xsl:value-of select='/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:PARTNER/inp1:ADDRESS/inp1:ADDRLINE[@index = "2"]'/>
                      </imp1:LineTwo>
                      <imp1:LineThree>
                        <xsl:value-of select='/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:PARTNER/inp1:ADDRESS/inp1:ADDRLINE[@index = "3"]'/>
                      </imp1:LineThree>
                      <imp1:LineFour>
                        <xsl:value-of select='/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:PARTNER/inp1:ADDRESS/inp1:ADDRLINE[@index = "4"]'/>
                      </imp1:LineFour>
                     <!-- <imp1:CitySubDivisionName>
                        <xsl:value-of select="inp1:ADDRESS/inp1:COUNTY"/>
                      </imp1:CitySubDivisionName> --><!-- removed as on 18 Sep-->
                      <imp1:CityName>
                        <xsl:value-of select="inp1:ADDRESS/inp1:CITY"/>
                      </imp1:CityName>
                      <imp1:CountrySubDivisionCode>
                        <xsl:value-of select="inp1:ADDRESS/inp1:STATEPROVN"/>
                      </imp1:CountrySubDivisionCode>
                      <imp1:CountryCode>
                        <xsl:value-of select="inp1:ADDRESS/inp1:COUNTRY"/>
                      </imp1:CountryCode>    
                      <imp1:PostalCode>
                        <xsl:value-of select="inp1:ADDRESS/inp1:POSTALCODE"/>
                      </imp1:PostalCode>
                 <!--   <imp1:UserArea>
                        <xsl:copy-of select="inp1:ADDRESS/inp1:USERAREA"/> 
                      </imp1:UserArea>  -->
                    </imp1:Address>
                    <imp1:Description>
                      <xsl:value-of select="inp1:ADDRESS/inp1:DESCRIPTN"/>
                    </imp1:Description>
                     <imp1:Note>
                      <xsl:value-of select="inp1:ONETIME"/>
                    </imp1:Note> 
                    <imp1:UserArea><!-- DONE ON 13 OCT -->
                        <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE1')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att1"/>
                        </imp1:Note>
                         <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE2')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att2"/>
                        </imp1:Note>
                         <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE3')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att3"/>
                        </imp1:Note>
                         <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE4')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att4"/>
                        </imp1:Note>
                         <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE5')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att5"/>
                        </imp1:Note>
                         <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE6')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att6"/>
                        </imp1:Note>
                         <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE7')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att7"/>
                        </imp1:Note>
                         <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE8')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att8"/>
                        </imp1:Note>
                         <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE9')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att9"/>
                        </imp1:Note>
                         <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE10')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att10"/>
                        </imp1:Note>
                         <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE11')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att11"/>
                        </imp1:Note>
                         <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE12')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att12"/>
                        </imp1:Note>
                         <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE13')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att13"/>
                        </imp1:Note>
                         <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE14')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att14"/>
                        </imp1:Note>
                         <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE15')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att15"/>
                        </imp1:Note>
                         <imp1:Note>
                            <xsl:attribute name="author">
                                <xsl:value-of select="string('DFFVENDORSITE ATTRIBUTE16')"/>
                            </xsl:attribute>
                            <xsl:value-of select="$address_att16"/>
                        </imp1:Note>
                    </imp1:UserArea>
                  </imp1:Location>
                  <imp1:Contact>
                    <xsl:for-each select=".">
                      <xsl:if test='inp1:PARTNRTYPE = "Supplier"'>
                        <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("FAX")'/>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
	             		<xsl:value-of select="inp1:ADDRESS/inp1:FAX"/> 
                          </imp1:DialNumber>
                          </imp1:Communication>
                          <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("TELEPHONE1")'/>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                            <xsl:value-of select='inp1:ADDRESS/inp1:TELEPHONE[@index = "1"]'/>
                          </imp1:DialNumber>
                          </imp1:Communication>
                          <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("TELEPHONE2")'/>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                            <xsl:value-of select='inp1:ADDRESS/inp1:TELEPHONE[@index = "2"]'/>
                          </imp1:DialNumber>
                          </imp1:Communication>
                          <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("TELEPHONE3")'/>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                            <xsl:value-of select='inp1:ADDRESS/inp1:TELEPHONE[@index = "3"]'/>
                          </imp1:DialNumber>
                        </imp1:Communication>
                      </xsl:if>
                    </xsl:for-each>
                  </imp1:Contact>
                  <imp1:CustomerServiceContact>
                    <imp1:Name>
                      <xsl:value-of select="inp1:CONTACT/inp1:NAME"/>
                    </imp1:Name>
                    <imp1:JobTitle>
                      <xsl:value-of select="inp1:CONTACT/inp1:DESCRIPTN"/>
                    </imp1:JobTitle>
                    <xsl:for-each select=".">
                      <xsl:if test='inp1:PARTNRTYPE = "Supplier"'>
                        <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("EMAIL")'/>
                          </imp1:ChannelCode>
                          <imp1:URI>
                            <xsl:value-of select="inp1:CONTACT/inp1:EMAIL"/>
                          </imp1:URI>
                          </imp1:Communication>
                          <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("FAX")'/>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                          	<xsl:value-of select="inp1:CONTACT/inp1:FAX"/>          <!-- CHANGES DONE TO GET THE INDEX AS ON 29 SEP -->
                          </imp1:DialNumber>
                          </imp1:Communication>
                          <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("TELEPHONE")'/>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                          	<xsl:value-of select="inp1:CONTACT/inp1:TELEPHONE"/>          <!-- CHANGES DONE TO GET THE INDEX AS ON 29 SEP -->
                          </imp1:DialNumber>
                        </imp1:Communication>
                      </xsl:if>
                    </xsl:for-each>
                  </imp1:CustomerServiceContact>  
                <imp1:UserArea><!-- DONE ON 13 OCT -->
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE1')"/>
                        </xsl:attribute>
                        <xsl:value-of select='$partner_att1'/> 
                    </imp1:Note>
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE2')"/>
                        </xsl:attribute>
                        <xsl:value-of select="$partner_att2"/>
                    </imp1:Note>
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE3')"/>
                        </xsl:attribute>
                        <xsl:value-of select="$partner_att3"/>
                    </imp1:Note>
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE4')"/>
                        </xsl:attribute>
                        <xsl:value-of select="$partner_att4"/>
                    </imp1:Note>
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE5')"/>
                        </xsl:attribute>
                        <xsl:value-of select="$partner_att5"/>
                    </imp1:Note>
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE6')"/>
                        </xsl:attribute>
                        <xsl:value-of select="$partner_att6"/>
                    </imp1:Note>
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE7')"/>
                        </xsl:attribute>
                        <xsl:value-of select="$partner_att7"/>
                    </imp1:Note>
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE8')"/>
                        </xsl:attribute>
                        <xsl:value-of select="$partner_att8"/>
                    </imp1:Note>
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE9')"/>
                        </xsl:attribute>
                        <xsl:value-of select="$partner_att9"/>
                    </imp1:Note>
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE10')"/>
                        </xsl:attribute>
                        <xsl:value-of select="$partner_att10"/>
                    </imp1:Note>
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE11')"/>
                        </xsl:attribute>
                        <xsl:value-of select="$partner_att11"/>
                    </imp1:Note>
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE12')"/>
                        </xsl:attribute>
                        <xsl:value-of select="$partner_att12"/>
                    </imp1:Note>
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE13')"/>
                        </xsl:attribute>
                        <xsl:value-of select="$partner_att13"/>
                    </imp1:Note>
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE14')"/>
                        </xsl:attribute>
                        <xsl:value-of select="$partner_att14"/>
                    </imp1:Note>
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE15')"/>
                        </xsl:attribute>
                        <xsl:value-of select="$partner_att15"/>
                    </imp1:Note>
                     <imp1:Note>
                        <xsl:attribute name="author">
                             <xsl:value-of select="string('DFFVENDOR ATTRIBUTE16')"/>
                        </xsl:attribute>
                        <xsl:value-of select="$partner_att16"/>
                    </imp1:Note>
                 </imp1:UserArea>          
                </imp1:SupplierParty>
              </xsl:if>
            </xsl:for-each>
            <imp1:ContractReference>
              <imp1:DocumentID>
                <imp1:ID>
                  <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:CONTRACTB"/>
                </imp1:ID>
              </imp1:DocumentID>
              <imp1:AlternateDocumentID>
                <imp1:ID>
                  <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:CONTRACTS"/>
                </imp1:ID>
              </imp1:AlternateDocumentID>
            </imp1:ContractReference>
            <imp1:ExtendedAmount>
             <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:NUMOFDEC = ''">
                <xsl:attribute name="currencyID">
                  <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:CURRENCY"/>
                </xsl:attribute>
                <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:VALUE div 1.0"/>
              </xsl:if>
              <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:NUMOFDEC = 0">
                <xsl:attribute name="currencyID">
                  <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:CURRENCY"/>
                </xsl:attribute>
                <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:VALUE div 1.0"/>
              </xsl:if>
              <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:NUMOFDEC = 1.0">
                <xsl:attribute name="currencyID">
                  <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:CURRENCY"/>
                </xsl:attribute>
                <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:VALUE div 10.0"/>
              </xsl:if> 
              <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:NUMOFDEC = 2">
                <xsl:attribute name="currencyID">
                  <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:CURRENCY"/>
                </xsl:attribute>
                <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:VALUE div 100.0"/>
              </xsl:if>
             
             <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:NUMOFDEC = 3">
                  <xsl:attribute name="currencyID">
		     <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:CURRENCY"/>
                </xsl:attribute>
                <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:VALUE div 1000.0"/>
            </xsl:if>
            
             <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:NUMOFDEC = 4">
                  <xsl:attribute name="currencyID">
		     <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:CURRENCY"/>
                </xsl:attribute>
                <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:VALUE div 10000"/>
            </xsl:if>
            
            <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:NUMOFDEC = 5">
                  <xsl:attribute name="currencyID">
		     <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:CURRENCY"/>
                </xsl:attribute>
                <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:VALUE div 100000"/>
            </xsl:if>
            
            <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:NUMOFDEC = 6">
                  <xsl:attribute name="currencyID">
		     <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:CURRENCY"/>
                </xsl:attribute>
                <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:OPERAMT/inp1:VALUE div 1000000"/>
            </xsl:if> 
            </imp1:ExtendedAmount>
            
            
            <xsl:for-each select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:PARTNER">
              <xsl:if test='inp1:PARTNRTYPE = "BillTo"'>
                <imp1:BillToParty>
                  <imp1:PartyIDs>
                    <imp1:ID>
                      <xsl:value-of select="inp1:PARTNRID"/>
                    </imp1:ID>
                    <imp1:TaxID>
                      <xsl:value-of select="inp1:TAXID"/>
                    </imp1:TaxID>
                    <imp1:DUNSID>
                      <xsl:value-of select="inp1:DUNSNUMBER"/>
                    </imp1:DUNSID>
                  </imp1:PartyIDs>
                  <imp1:Name>
                    <xsl:value-of select="inp1:NAME"/>
                  </imp1:Name>
                  <imp1:Location>
                   <!-- <xsl:attribute name="type">
                      <xsl:value-of select="inp1:ADDRESS/inp1:ADDRTYPE"/> 
                    </xsl:attribute>--><!--removed as on 18 NOV--><!-- added as on 18 Sep-->
                    <imp1:ID>
                      <xsl:value-of select="inp1:PARTNRIDX"/>
                    </imp1:ID>
                    <imp1:Address>
                    <!--  <imp1:ID>
                        <xsl:value-of select="inp1:ADDRESS/inp1:ADDRTYPE"/>
                      </imp1:ID> --><!-- removed as on 18 Sep-->
                    <imp1:LineOne>
                        <xsl:value-of select="inp1:ADDRESS/inp1:ADDRLINE[@index='1']"/>
                      </imp1:LineOne>
                      <imp1:LineTwo>
                        <xsl:value-of select="inp1:ADDRESS/inp1:ADDRLINE[@index='2']"/>
                      </imp1:LineTwo>
                      <imp1:LineThree>
                        <xsl:value-of select="inp1:ADDRESS/inp1:ADDRLINE[@index='3']"/>
                      </imp1:LineThree>
                      <imp1:LineFour>
                        <xsl:value-of select="inp1:ADDRESS/inp1:ADDRLINE[@index='4']"/>
                      </imp1:LineFour> 
                     <!-- <imp1:CitySubDivisionName>
                        <xsl:value-of select="inp1:ADDRESS/inp1:COUNTY"/>
                      </imp1:CitySubDivisionName> --> <!-- removed as on 18 Sep-->
                      <imp1:CityName>
                        <xsl:value-of select="inp1:ADDRESS/inp1:CITY"/>
                      </imp1:CityName>
                      <imp1:CountrySubDivisionCode>
                        <xsl:value-of select="inp1:ADDRESS/inp1:STATEPROVN"/>
                      </imp1:CountrySubDivisionCode>
                      <imp1:CountryCode>
                        <xsl:value-of select="inp1:ADDRESS/inp1:COUNTRY"/>
                      </imp1:CountryCode>
                      <imp1:PostalCode>
                        <xsl:value-of select="inp1:ADDRESS/inp1:POSTALCODE"/>
                      </imp1:PostalCode>
                     <imp1:UserArea>
                        <xsl:copy-of select="inp1:ADDRESS/inp1:USERAREA/*"/> 
                      </imp1:UserArea> <!-- this was addeded bcoz varun asked us to do this for demo-->
                    </imp1:Address>
                    <imp1:Description>
                      <xsl:value-of select="inp1:ADDRESS/inp1:DESCRIPTN"/>
                    </imp1:Description>
                    <imp1:Note>
                      <xsl:value-of select="inp1:ONETIME"/>
                    </imp1:Note> 
                    <imp1:UserArea>
                      <xsl:copy-of select="inp1:USERAREA/*"/>  
                    </imp1:UserArea> <!-- this was addeded bcoz varun asked us to do this for demo-->
                  </imp1:Location>
                  <imp1:Contact>
                    <xsl:for-each select=".">
                      <xsl:if test='inp1:PARTNRTYPE = "BillTo"'>
                        <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("FAX")'/>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                            <xsl:value-of select="inp1:ADDRESS/inp1:FAX"/>
                          </imp1:DialNumber>
                          </imp1:Communication>
                          <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("TELEPHONE1")'/>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                            <xsl:value-of select='inp1:ADDRESS/inp1:TELEPHONE[@index = "1"]'/>
                          </imp1:DialNumber>
                          </imp1:Communication>
                          <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("TELEPHONE2")'/>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                            <xsl:value-of select='inp1:ADDRESS/inp1:TELEPHONE[@index = "2"]'/>
                          </imp1:DialNumber>
                          </imp1:Communication>
                          <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("TELEPHONE3")'/>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                            <xsl:value-of select='inp1:ADDRESS/inp1:TELEPHONE[@index = "3"]'/>
                          </imp1:DialNumber>
                        </imp1:Communication>
                      </xsl:if>
                    </xsl:for-each>
                  </imp1:Contact>
                  <imp1:BuyerContact>
                    <imp1:Name>
                      <xsl:value-of select="inp1:CONTACT/inp1:NAME"/>
                    </imp1:Name>
                    <imp1:JobTitle>
                      <xsl:value-of select="inp1:CONTACT/inp1:DESCRIPTN"/>
                    </imp1:JobTitle>
                    <xsl:for-each select=".">
                      <xsl:if test='inp1:PARTNRTYPE = "BillTo"'>
                      <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("EMAIL")'/>
                          </imp1:ChannelCode>
                          <imp1:URI>
                            <xsl:value-of select="inp1:CONTACT/inp1:EMAIL"/>
                          </imp1:URI>
                        </imp1:Communication>
                        <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("FAX")'/>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                          	<xsl:value-of select="inp1:CONTACT/inp1:FAX"/>          <!-- CHANGES DONE TO GET THE INDEX AS ON 29 SEP -->
                          </imp1:DialNumber>
                          </imp1:Communication>
                          <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("TELEPHONE")'/>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                          	<xsl:value-of select="inp1:CONTACT/inp1:TELEPHONE"/>          <!-- CHANGES DONE TO GET THE INDEX AS ON 29 SEP -->
                          </imp1:DialNumber>
                          </imp1:Communication>
                      </xsl:if>
                    </xsl:for-each>
                  </imp1:BuyerContact>
                </imp1:BillToParty>
              </xsl:if>
            </xsl:for-each>
            
            
            <xsl:for-each select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:PARTNER">
            <xsl:if test='inp1:PARTNRTYPE = "Carrier"'>
              <imp1:CarrierParty>
                <imp1:PartyIDs>
                  <imp1:ID>
                    <xsl:value-of select="inp1:PARTNRID"/>
                  </imp1:ID>
                </imp1:PartyIDs>
                <imp1:Name>
                  <xsl:value-of select="inp1:NAME"/>
                </imp1:Name>
                <imp1:Location>
                    <imp1:ID>
                      <xsl:value-of select="inp1:PARTNRIDX"/>
                </imp1:ID>
                </imp1:Location> 
              </imp1:CarrierParty>
            </xsl:if>
            </xsl:for-each>
            
            
            <imp1:TransportationTerm>
              <imp1:IncotermsCode>
                <xsl:value-of select="$fobtermid"/> <!-- Changed as per Robin 18-Sep -->
              </imp1:IncotermsCode>  
              <imp1:FreightTermCode>
                <xsl:value-of select="$fttermid"/>  <!-- Changed as per Robin 18-Sep -->
              </imp1:FreightTermCode>
               <imp1:UserArea> <!-- ADDED AS ON 29 OCT -->
              <imp1:Note>
                 <xsl:attribute name="author">
                    <xsl:value-of select="string('Incoterm Description')"/>
                 </xsl:attribute>
                 <xsl:value-of select="$fobdesc"/> 
                </imp1:Note>
                <imp1:Note>
                 <xsl:attribute name="author">
                    <xsl:value-of select="string('Freight Term Description')"/>
                 </xsl:attribute>
                 <xsl:value-of select="$ftterm_desc"/>  
                </imp1:Note>
              </imp1:UserArea>
            </imp1:TransportationTerm>  <!-- Added by nazima as on 15'Sep -->     
            
            
            <imp1:PaymentTerm>
              <imp1:Term>
                <imp1:ID>
                  <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:POTERM/inp1:TERMID"/>
                </imp1:ID>
                <imp1:Description>
                  <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:POTERM/inp1:DESCRIPTN"/>
                </imp1:Description>
              </imp1:Term>
            </imp1:PaymentTerm>
            
            
            <xsl:for-each select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:PARTNER">
              <xsl:if test='inp1:PARTNRTYPE = "SoldTo"'>
                <imp1:BuyerParty>
                  <imp1:PartyIDs>
                    <imp1:ID>
                      <xsl:value-of select="inp1:PARTNRID"/>
                    </imp1:ID>
                    <imp1:TaxID>
                      <xsl:value-of select="inp1:TAXID"/>
                    </imp1:TaxID>
                    <imp1:DUNSID>
                      <xsl:value-of select="inp1:DUNSNUMBER"/>
                    </imp1:DUNSID>
                  </imp1:PartyIDs>
                  <imp1:Name>
                    <xsl:value-of select="inp1:NAME"/>
                  </imp1:Name>
                  <imp1:Location>
                   <!-- <xsl:attribute name="type">
                      <xsl:value-of select="inp1:ADDRESS/inp1:ADDRTYPE"/> 
                    </xsl:attribute>--><!--removed as on 18 NOV--><!-- added as on 18 Sep-->
                    <imp1:ID>
                      <xsl:value-of select="inp1:PARTNRIDX"/>
                    </imp1:ID>
                    <imp1:Address>
                      <!--<imp1:ID>
                        <xsl:value-of select="inp1:ADDRESS/inp1:ADDRTYPE"/>
                      </imp1:ID> --><!-- removed as on 18 Sep-->
                      <imp1:LineOne>
                        <xsl:value-of select="inp1:ADDRESS/inp1:ADDRLINE[@index='1']"/>
                      </imp1:LineOne>
                      <imp1:LineTwo>
                        <xsl:value-of select="inp1:ADDRESS/inp1:ADDRLINE[@index='2']"/>
                      </imp1:LineTwo>
                      <imp1:LineThree>
                        <xsl:value-of select="inp1:ADDRESS/inp1:ADDRLINE[@index='3']"/>
                      </imp1:LineThree>
                      <imp1:LineFour>
                        <xsl:value-of select="inp1:ADDRESS/inp1:ADDRLINE[@index='4']"/>
                      </imp1:LineFour>                    <!--  <imp1:CitySubDivisionName>
                        <xsl:value-of select="inp1:ADDRESS/inp1:COUNTY"/>
                      </imp1:CitySubDivisionName>--><!-- removed as on 18 Sep-->
                      <imp1:CityName>
                        <xsl:value-of select="inp1:ADDRESS/inp1:CITY"/>
                      </imp1:CityName>
                      <imp1:CountrySubDivisionCode>
                        <xsl:value-of select="inp1:ADDRESS/inp1:STATEPROVN"/>
                      </imp1:CountrySubDivisionCode>
                      <imp1:CountryCode>
                        <xsl:value-of select="inp1:ADDRESS/inp1:COUNTRY"/>
                      </imp1:CountryCode>
                      <imp1:PostalCode>
                        <xsl:value-of select="inp1:ADDRESS/inp1:POSTALCODE"/>
                      </imp1:PostalCode>
                    </imp1:Address>
                    <imp1:Description>
                      <xsl:value-of select="inp1:ADDRESS/inp1:DESCRIPTN"/>
                    </imp1:Description>
                    <imp1:Note>
                      <xsl:value-of select="inp1:ONETIME"/>
                    </imp1:Note> 
                  <!--   <imp1:UserArea>
                      <xsl:copy-of select="inp1:ADDRESS/inp1:USERAREA/*"/> 
                    </imp1:UserArea>--> <!-- this was addeded bcoz varun asked us to do this for demo-->
                  </imp1:Location>
                  <imp1:Contact>
                    <xsl:for-each select=".">
                      <xsl:if test='inp1:PARTNRTYPE = "SoldTo"'>
                        <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:text disable-output-escaping="no">FAX</xsl:text>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                            <xsl:value-of select="inp1:ADDRESS/inp1:FAX"/>
                          </imp1:DialNumber>
                          </imp1:Communication>
                         <!-- <imp1:UserArea>
                            <xsl:copy-of select="inp1:CONTACT/inp1:USERAREA/*"/>  
                          </imp1:UserArea>-->  <!-- this was addeded bcoz varun asked us to do this for demo-->
                          <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:text disable-output-escaping="no">TELEPHONE1</xsl:text>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                            <xsl:value-of select='inp1:ADDRESS/inp1:TELEPHONE[@index = "1"]'/>
                          </imp1:DialNumber>
                          </imp1:Communication>
                          <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:text disable-output-escaping="no">TELEPHONE2</xsl:text>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                            <xsl:value-of select='inp1:ADDRESS/inp1:TELEPHONE[@index = "2"]'/>
                          </imp1:DialNumber>
                          </imp1:Communication>
                          <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:text disable-output-escaping="no">TELEPHONE3</xsl:text>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                            <xsl:value-of select='inp1:ADDRESS/inp1:TELEPHONE[@index = "3"]'/>
                          </imp1:DialNumber>
                        </imp1:Communication>
                      </xsl:if>
                    </xsl:for-each>
                  </imp1:Contact>
                  <imp1:CustomerAccountID>
                    <xsl:value-of select="inp1:PARTNRIDX"/>
                  </imp1:CustomerAccountID> 
                  <imp1:BuyerContact>
                    <imp1:Name>
                      <xsl:value-of select="inp1:CONTACT/inp1:NAME"/>
                    </imp1:Name>
                    <imp1:JobTitle>
                      <xsl:value-of select="inp1:CONTACT/inp1:DESCRIPTN"/>
                    </imp1:JobTitle>
                    <xsl:for-each select=".">
                      <xsl:if test='inp1:PARTNRTYPE = "SoldTo"'>
                        <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("EMAIL")'/>
                          </imp1:ChannelCode>
                          <imp1:URI>
                            <xsl:value-of select="inp1:CONTACT/inp1:EMAIL"/>
                          </imp1:URI>
                          </imp1:Communication>
                          <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("FAX")'/>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                            <xsl:value-of select="inp1:CONTACT/inp1:FAX"/>
                          </imp1:DialNumber>
                          </imp1:Communication>
                          <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("TELEPHONE")'/>
                          </imp1:ChannelCode>
                          <imp1:DialNumber>
                            <xsl:value-of select="inp1:CONTACT/inp1:TELEPHONE"/>
                          </imp1:DialNumber>
                        </imp1:Communication>
                      </xsl:if>
                    </xsl:for-each>
                  </imp1:BuyerContact>
                </imp1:BuyerParty>
              </xsl:if>
            </xsl:for-each>
            
            
            <imp1:ReleaseNumber>
              <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:PORELEASE"/>
            </imp1:ReleaseNumber>
            
            <imp1:UserArea>   <!--CHANGED AS ON 16 OCT  -->       
            <xsl:if test="($exchrate != '') or (inp1:DATETIME/inp1:YEAR != '') ">
            <imp1:CurrencyExchangeRate>
                <imp1:RateNumeric>
                 <xsl:value-of select="$exchrate"/>
                </imp1:RateNumeric>               
                <xsl:if test="inp1:DATETIME/inp1:YEAR != ''">
                <imp1:SetDateTime>
                  <xsl:value-of select="concat($year,'-',$month,'-',$day,'T',$hour,':',$min,':',$sec,':',$subsec,substring($timezone,1.0,3.0),':',substring($timezone,4.0,2.0))"/>
                </imp1:SetDateTime>
                </xsl:if>              
             <xsl:if test="inp1:DATETIME/inp1:YEAR = ''">
                <imp1:SetDateTime>
                  <xsl:value-of select="''"/>
                </imp1:SetDateTime>
                </xsl:if>               
              </imp1:CurrencyExchangeRate> 
              </xsl:if>
            
            <!--ADDED AS ON 16 OCT "Note"-->
            <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE1')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader1"/> 
          </imp1:Note>
           <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE2')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader2"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE3')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader3"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE4')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader4"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE5')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader5"/>
          </imp1:Note>
            <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE6')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader6"/>
          </imp1:Note>
           <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE7')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader7"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE8')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader8"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE9')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader9"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE10')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader10"/>
          </imp1:Note>
           <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE11')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader11"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE12')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader12"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE13')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader13"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE14')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader14"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE15')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader15"/>
          </imp1:Note>
          <imp1:Note>
            <xsl:attribute name="author">
              <xsl:value-of select="string('DFFPOHEADER ATTRIBUTE16')"/>
            </xsl:attribute>
            <xsl:value-of select="$dffpoheader16"/>
          </imp1:Note> <!--ADDED AS ON 16 OCT -->
          <xsl:choose>
            <xsl:when test='(/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:ACKREQUEST = "Y") or (/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:ACKREQUEST = "AC")'>
                <imp1:ActionExpression>
                  <xsl:attribute name="actionCode">
                    <xsl:value-of select='string("AcknowledgementRequired")'/>
                  </xsl:attribute>
                </imp1:ActionExpression>
              </xsl:when>
              <xsl:when test='(/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:ACKREQUEST = "N") or (/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERHDR/inp1:ACKREQUEST = "NA")'>
                <imp1:ActionExpression>
                  <xsl:attribute name="actionCode">
                    <xsl:value-of select='string("DoNotAcknowledge")'/>
                  </xsl:attribute>
                </imp1:ActionExpression>
              </xsl:when>
              <xsl:otherwise>
                <imp1:ActionExpression>
                  <xsl:attribute name="actionCode">
                    <xsl:value-of select='""'/>
                  </xsl:attribute>
                </imp1:ActionExpression>
              </xsl:otherwise>
              </xsl:choose>
            </imp1:UserArea><!--CHANGED AS ON 16 OCT  -->
          </imp1:PurchaseOrderHeader>
           
          
          
                                                 <!--POLINE BEGIN--> 
                                                 
            <xsl:for-each select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN"> <!--  CHANGED ON 13 OCT THE FOR EACH CONDITION -->
    <!-- DONE ON 13 OCT THE LINE USERAREA AND THE SCHEDULELINE USERAREA -->
<!--START FOR THE LINE OF USERAREA -->
    <xsl:variable name="temp_ln">
      <xsl:value-of select="orcl:getContentAsString(inp1:USERAREA)"/>
    </xsl:variable> 
    
<!--START FOR THE DFFLINE OF USERAREA -->
            <xsl:variable name="Req_temp_sub_ln">
            <xsl:value-of select='substring-after($temp_ln,"REQUESTOR>")'/>
              </xsl:variable>
            <xsl:variable name="Req_temp_ln">
              <xsl:value-of select='substring-before($Req_temp_sub_ln,"&lt;/REQUESTOR")'/>
            </xsl:variable>
            
            <xsl:variable name="Cat_temp_sub_ln">
            <xsl:value-of select='substring-after($temp_ln,"CATEGORYID>")'/>
              </xsl:variable>
            <xsl:variable name="Cat_temp_ln">
              <xsl:value-of select='substring-before($Cat_temp_sub_ln,"&lt;/CATEGORYID")'/>
            </xsl:variable>
            
            <xsl:variable name="Contract_temp_sub_ln">
            <xsl:value-of select='substring-after($temp_ln,"CONTRACTPONUM>")'/>
              </xsl:variable>
            <xsl:variable name="Contract_temp_ln">
              <xsl:value-of select='substring-before($Contract_temp_sub_ln,"&lt;/CONTRACTPONUM")'/>
            </xsl:variable>
            
            <xsl:variable name="Catnum_temp_sub_ln">
            <xsl:value-of select='substring-after($temp_ln,"CONTRACTPOLINENUM>")'/>
              </xsl:variable>
            <xsl:variable name="Catnum_temp_ln">
              <xsl:value-of select='substring-before($Catnum_temp_sub_ln,"&lt;/CONTRACTPOLINENUM")'/>
            </xsl:variable>
            
            <xsl:variable name="Vendor_temp_sub_ln">
            <xsl:value-of select='substring-after($temp_ln,"VENDORQUOTENUM>")'/>
              </xsl:variable>
            <xsl:variable name="Vendor_temp_ln">
              <xsl:value-of select='substring-before($Vendor_temp_sub_ln,"&lt;/VENDORQUOTENUM")'/>
            </xsl:variable>
            
            <xsl:variable name="Listprc_temp_sub_ln">
            <xsl:value-of select='substring-after($temp_ln,"LISTPRICE>")'/>
              </xsl:variable>
            <xsl:variable name="Listprc_temp_ln">
              <xsl:value-of select='substring-before($Listprc_temp_sub_ln,"&lt;/LISTPRICE")'/>
            </xsl:variable>
            
            <xsl:variable name="Mktprc_temp_sub_ln">
            <xsl:value-of select='substring-after($temp_ln,"MARKETPRICE>")'/>
              </xsl:variable>
            <xsl:variable name="Mktprc_temp_ln">
              <xsl:value-of select='substring-before($Mktprc_temp_sub_ln,"&lt;/MARKETPRICE")'/>
            </xsl:variable>
            
            <xsl:variable name="PrcNotExc_temp_sub_ln">
            <xsl:value-of select='substring-after($temp_ln,"PRICENOTTOEXCEED>")'/>
              </xsl:variable>
            <xsl:variable name="PrcNotExc_temp_ln">
              <xsl:value-of select='substring-before($PrcNotExc_temp_sub_ln,"&lt;/PRICENOTTOEXCEED")'/>
            </xsl:variable>
            
             <xsl:variable name="Negprc_temp_sub_ln">
            <xsl:value-of select='substring-after($temp_ln,"NEGPRICE>")'/>
              </xsl:variable>
            <xsl:variable name="Negprc_temp_ln">
              <xsl:value-of select='substring-before($Negprc_temp_sub_ln,"&lt;/NEGPRICE")'/>
            </xsl:variable>
            
            <xsl:variable name="Taxable_temp_sub_ln">
            <xsl:value-of select='substring-after($temp_ln,"TAXABLE>")'/>
              </xsl:variable>
            <xsl:variable name="Taxable_temp_ln">
              <xsl:value-of select='substring-before($Taxable_temp_sub_ln,"&lt;/TAXABLE")'/>
            </xsl:variable>
            
             <xsl:variable name="Txnrea_temp_sub_ln">
            <xsl:value-of select='substring-after($temp_ln,"TXNREASONCODE>")'/>
              </xsl:variable>
            <xsl:variable name="Txnrea_temp_ln">
              <xsl:value-of select='substring-before($Txnrea_temp_sub_ln,"&lt;/TXNREASONCODE")'/>
            </xsl:variable>
            
             <xsl:variable name="T1099_temp_sub_ln">
            <xsl:value-of select='substring-after($temp_ln,"TYPE1099>")'/>
              </xsl:variable>
            <xsl:variable name="T1099_temp_ln">
              <xsl:value-of select='substring-before($T1099_temp_sub_ln,"&lt;/TYPE1099")'/>
            </xsl:variable>
            
            <xsl:variable name="Lntype_temp_sub_ln">
            <xsl:value-of select='substring-after($temp_ln,"LINEORDERTYPE>")'/>
              </xsl:variable>
            <xsl:variable name="Lntype_temp_ln">
              <xsl:value-of select='substring-before($Lntype_temp_sub_ln,"&lt;/LINEORDERTYPE")'/>
            </xsl:variable>
            
            <xsl:variable name="Hzrdnum_temp_sub_ln">                                                
            <xsl:value-of select='substring-after($temp_ln,"HAZRDUNNUM>")'/>                         
              </xsl:variable>                                                                        
            <xsl:variable name="Hzrdnum_temp_ln">                                                    
              <xsl:value-of select='substring-before($Hzrdnum_temp_sub_ln,"&lt;/HAZRDUNNUM")'/>      
            </xsl:variable>                                                                          
                                                                                                     
            <xsl:variable name="hzrdnumdesc_temp_sub_ln">                                            
            <xsl:value-of select='substring-after($temp_ln,"HAZRDUNDESC>")'/>                       
              </xsl:variable>                                                                        
            <xsl:variable name="hzrdnumdesc_temp_ln">                                               
              <xsl:value-of select='substring-before($hzrdnumdesc_temp_sub_ln,"&lt;/HAZRDUNDESC")'/>
            </xsl:variable> 
            
            <!--START FOR THE DFFLINE OF USERAREA -->
            
            <xsl:variable name="temp_ln1">
                  <xsl:value-of select='substring-after($temp_ln,"&lt;DFFLINE")'/>
            </xsl:variable>
            <xsl:variable name="temp_ln2">
                <xsl:value-of select='substring-before($temp_ln1,"&lt;/DFFLINE")'/>
            </xsl:variable>
            <xsl:variable name="attrsub_ln1">
                <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE1>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln1">
              <xsl:value-of select='substring-before($attrsub_ln1,"&lt;/ATTRIBUTE1")'/>
            </xsl:variable>
            <xsl:variable name="attrsub_ln2">
              <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE2>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln2">
              <xsl:value-of select='substring-before($attrsub_ln2,"&lt;/ATTRIBUTE2")'/>
            </xsl:variable>
            <xsl:variable name="attrsub_ln3">
              <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE3>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln3">
              <xsl:value-of select='substring-before($attrsub_ln3,"&lt;/ATTRIBUTE3")'/>
            </xsl:variable>
            <xsl:variable name="attrsub_ln4">
              <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE4>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln4">
              <xsl:value-of select='substring-before($attrsub_ln4,"&lt;/ATTRIBUTE4")'/>
            </xsl:variable>
            <xsl:variable name="attrsub_ln5">
              <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE5>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln5">
              <xsl:value-of select='substring-before($attrsub_ln5,"&lt;/ATTRIBUTE5")'/>
            </xsl:variable>
             <xsl:variable name="attrsub_ln6">
              <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE6>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln6">
              <xsl:value-of select='substring-before($attrsub_ln6,"&lt;/ATTRIBUTE6")'/>
            </xsl:variable>
            <xsl:variable name="attrsub_ln7">
              <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE7>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln7">
              <xsl:value-of select='substring-before($attrsub_ln7,"&lt;/ATTRIBUTE7")'/>
            </xsl:variable>
               <xsl:variable name="attrsub_ln8">
              <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE8>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln8">
              <xsl:value-of select='substring-before($attrsub_ln8,"&lt;/ATTRIBUTE8")'/>
            </xsl:variable>
            <xsl:variable name="attrsub_ln9">
              <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE9>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln9">
              <xsl:value-of select='substring-before($attrsub_ln9,"&lt;/ATTRIBUTE9")'/>
            </xsl:variable>
            <xsl:variable name="attrsub_ln10">
              <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE10>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln10">
              <xsl:value-of select='substring-before($attrsub_ln10,"&lt;/ATTRIBUTE10")'/>
            </xsl:variable>
             <xsl:variable name="attrsub_ln11">
              <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE11>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln11">
              <xsl:value-of select='substring-before($attrsub_ln11,"&lt;/ATTRIBUTE11")'/>
            </xsl:variable>
             <xsl:variable name="attrsub_ln12">
              <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE12>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln12">
              <xsl:value-of select='substring-before($attrsub_ln12,"&lt;/ATTRIBUTE12")'/>
            </xsl:variable>
             <xsl:variable name="attrsub_ln13">
              <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE13>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln13">
              <xsl:value-of select='substring-before($attrsub_ln13,"&lt;/ATTRIBUTE13")'/>
            </xsl:variable>
              <xsl:variable name="attrsub_ln14">
              <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE14>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln14">
              <xsl:value-of select='substring-before($attrsub_ln14,"&lt;/ATTRIBUTE14")'/>
            </xsl:variable>
             <xsl:variable name="attrsub_ln15">
              <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE15>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln15">
              <xsl:value-of select='substring-before($attrsub_ln15,"&lt;/ATTRIBUTE15")'/>
            </xsl:variable>
             <xsl:variable name="attrsub_ln16">
              <xsl:value-of select='substring-after($temp_ln2,"ATTRIBUTE16>")'/>
            </xsl:variable>
            <xsl:variable name="att_ln16">
              <xsl:value-of select='substring-before($attrsub_ln16,"&lt;/ATTRIBUTE16")'/>
            </xsl:variable>
<!--START FOR THE DFFITEM OF LINE USERAREA -->
    <xsl:variable name="TEMP_DFFITEM1">
      <xsl:value-of select='substring-after($temp_ln,"&lt;DFFITEM")'/>
    </xsl:variable>
    <xsl:variable name="TEMP_DFFITEM2">
      <xsl:value-of select='substring-before($TEMP_DFFITEM1,"&lt;/DFFITEM")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_attrsub_ln1">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE1>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln1">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln1,"&lt;/ATTRIBUTE1")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_attrsub_ln2">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE2>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln2">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln2,"&lt;/ATTRIBUTE2")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_attrsub_ln3">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE3>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln3">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln3,"&lt;/ATTRIBUTE3")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_attrsub_ln4">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE4>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln4">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln4,"&lt;/ATTRIBUTE4")'/>
    </xsl:variable>
     <xsl:variable name="dffitem_attrsub_ln5">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE5>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln5">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln5,"&lt;/ATTRIBUTE5")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_attrsub_ln6">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE6>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln6">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln6,"&lt;/ATTRIBUTE6")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_attrsub_ln7">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE7>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln7">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln7,"&lt;/ATTRIBUTE7")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_attrsub_ln8">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE8>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln8">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln8,"&lt;/ATTRIBUTE8")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_attrsub_ln9">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE9>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln9">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln9,"&lt;/ATTRIBUTE9")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_attrsub_ln10">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE10>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln10">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln10,"&lt;/ATTRIBUTE10")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_attrsub_ln11">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE11>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln11">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln11,"&lt;/ATTRIBUTE11")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_attrsub_ln12">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE12>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln12">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln12,"&lt;/ATTRIBUTE12")'/>
    </xsl:variable>
        <xsl:variable name="dffitem_attrsub_ln13">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE13>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln13">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln13,"&lt;/ATTRIBUTE13")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_attrsub_ln14">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE14>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln14">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln14,"&lt;/ATTRIBUTE14")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_attrsub_ln15">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE15>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln15">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln15,"&lt;/ATTRIBUTE15")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_attrsub_ln16">
      <xsl:value-of select='substring-after($TEMP_DFFITEM2,"ATTRIBUTE16>")'/>
    </xsl:variable>
    <xsl:variable name="dffitem_att_ln16">
      <xsl:value-of select='substring-before($dffitem_attrsub_ln16,"&lt;/ATTRIBUTE16")'/>
    </xsl:variable> 
<!--START FOR THE KFFITEM OF USERAREA -->
    <xsl:variable name="TEMP_KFFITEM1">
      <xsl:value-of select='substring-after($temp_ln,"&lt;KFFITEM")'/>
    </xsl:variable>
    <xsl:variable name="TEMP_KFFITEM2">
      <xsl:value-of select='substring-before($TEMP_KFFITEM1,"&lt;/KFFITEM")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_attrsub_ln1">
      <xsl:value-of select='substring-after($TEMP_KFFITEM2,"ATTRIBUTE1>")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_att_ln1">
      <xsl:value-of select='substring-before($kffitem_attrsub_ln1,"&lt;/ATTRIBUTE1")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_attrsub_ln2">
      <xsl:value-of select='substring-after($TEMP_KFFITEM2,"ATTRIBUTE2>")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_att_ln2">
      <xsl:value-of select='substring-before($kffitem_attrsub_ln2,"&lt;/ATTRIBUTE2")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_attrsub_ln3">
      <xsl:value-of select='substring-after($TEMP_KFFITEM2,"ATTRIBUTE3>")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_att_ln3">
      <xsl:value-of select='substring-before($kffitem_attrsub_ln3,"&lt;/ATTRIBUTE3")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_attrsub_ln4">
      <xsl:value-of select='substring-after($TEMP_KFFITEM2,"ATTRIBUTE4>")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_att_ln4">
      <xsl:value-of select='substring-before($kffitem_attrsub_ln4,"&lt;/ATTRIBUTE4")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_attrsub_ln5">
      <xsl:value-of select='substring-after($TEMP_KFFITEM2,"ATTRIBUTE5>")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_att_ln5">
      <xsl:value-of select='substring-before($kffitem_attrsub_ln5,"&lt;/ATTRIBUTE5")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_attrsub_ln6">
      <xsl:value-of select='substring-after($TEMP_KFFITEM2,"ATTRIBUTE6>")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_att_ln6">
      <xsl:value-of select='substring-before($kffitem_attrsub_ln6,"&lt;/ATTRIBUTE6")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_attrsub_ln7">
      <xsl:value-of select='substring-after($TEMP_KFFITEM2,"ATTRIBUTE7>")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_att_ln7">
      <xsl:value-of select='substring-before($kffitem_attrsub_ln7,"&lt;/ATTRIBUTE7")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_attrsub_ln8">
      <xsl:value-of select='substring-after($TEMP_KFFITEM2,"ATTRIBUTE8>")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_att_ln8">
      <xsl:value-of select='substring-before($kffitem_attrsub_ln8,"&lt;/ATTRIBUTE8")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_attrsub_ln9">
      <xsl:value-of select='substring-after($TEMP_KFFITEM2,"ATTRIBUTE9>")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_att_ln9">
      <xsl:value-of select='substring-before($kffitem_attrsub_ln9,"&lt;/ATTRIBUTE9")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_attrsub_ln10">
      <xsl:value-of select='substring-after($TEMP_KFFITEM2,"ATTRIBUTE10>")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_att_ln10">
      <xsl:value-of select='substring-before($kffitem_attrsub_ln10,"&lt;/ATTRIBUTE10")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_attrsub_ln11">
      <xsl:value-of select='substring-after($TEMP_KFFITEM2,"ATTRIBUTE11>")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_att_ln11">
      <xsl:value-of select='substring-before($kffitem_attrsub_ln11,"&lt;/ATTRIBUTE11")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_attrsub_ln12">
      <xsl:value-of select='substring-after($TEMP_KFFITEM2,"ATTRIBUTE12>")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_att_ln12">
      <xsl:value-of select='substring-before($kffitem_attrsub_ln12,"&lt;/ATTRIBUTE12")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_attrsub_ln13">
      <xsl:value-of select='substring-after($TEMP_KFFITEM2,"ATTRIBUTE13>")'/>
    </xsl:variable>
    <xsl:variable name="kffitem_att_ln13">
      <xsl:value-of select='substring-before($kffitem_attrsub_ln13,"&lt;/ATTRIBUTE13")'/>
    </xsl:variable>  
            <imp1:PurchaseOrderLine>
              <imp1:LineNumber>
                <xsl:value-of select="inp1:POLINENUM"/>
              </imp1:LineNumber>
              <imp1:Status>
                <imp1:Code>
                  <xsl:value-of select="inp1:POLNSTATUS"/>
                </imp1:Code>
              </imp1:Status>
              <imp1:Item>
                <imp1:ItemID>
                  <imp1:ID>
                    <xsl:value-of select="inp1:ITEM"/>
                  </imp1:ID>
                  <imp1:RevisionID>
                    <xsl:value-of select="inp1:ITEMRV"/>
                  </imp1:RevisionID>
                </imp1:ItemID>
                <imp1:SupplierItemID>
                  <imp1:ID>
                    <xsl:value-of select="inp1:ITEMX"/>
                  </imp1:ID>
                  <imp1:RevisionID>
                    <xsl:value-of select="inp1:ITEMRVX"/>
                  </imp1:RevisionID>
                </imp1:SupplierItemID>
                <imp1:Description>
                  <xsl:value-of select="inp1:DESCRIPTN"/>
                </imp1:Description>
                <xsl:for-each select="inp1:NOTES">
                  <imp1:Note>
                    <xsl:value-of select="."/>
                  </imp1:Note>
                </xsl:for-each>
                <imp1:HazardousMaterial>
                  <imp1:ID>
                    <xsl:value-of select="inp1:HAZRDMATL"/>
                  </imp1:ID>
                </imp1:HazardousMaterial>
               <!-- <imp1:Packaging>
                  <imp1:ID>
                    <xsl:value-of select="inp1:POORDERLIN/inp1:QUANTITY/inp1:UOM"/>
                  </imp1:ID>
                </imp1:Packaging>  -->
              </imp1:Item>            
             <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC ='' ">
                <imp1:Quantity>
                <xsl:attribute name="unitCode">
                    <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                  </xsl:attribute>  <!-- Added as on 18 Sep -->
                  <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 1"/>
                </imp1:Quantity>
              </xsl:if>   
              
              <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC = 0">
                <imp1:Quantity>
                  <xsl:attribute name="unitCode">
                    <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                  </xsl:attribute>   <!-- Added as on 18 Sep -->
                  <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 1"/>
                </imp1:Quantity>
              </xsl:if> 
              
              <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC = 1.0">
                <imp1:Quantity>
                  <xsl:attribute name="unitCode">
                    <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                  </xsl:attribute>   <!-- Added as on 18 Sep -->
                  <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 10.0"/>
                </imp1:Quantity>
              </xsl:if>    
              
              <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC = 2.0">
                <imp1:Quantity>
                  <xsl:attribute name="unitCode">
                    <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                  </xsl:attribute>   <!-- Added as on 18 Sep -->
                  <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 100.0"/>
                </imp1:Quantity>
              </xsl:if>     
              
             <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC = 3.0">
                <imp1:Quantity>
                 <xsl:attribute name="unitCode">
                    <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                  </xsl:attribute>   <!-- Added as on 18 Sep -->
                  <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 1000.0"/>
                </imp1:Quantity>
              </xsl:if>    
              
            <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC = 4.0">
                <imp1:Quantity>
                <xsl:attribute name="unitCode">
                    <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                  </xsl:attribute>   <!-- Added as on 18 Sep -->
                  <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 10000.0"/>
                </imp1:Quantity>
              </xsl:if> 
              
            <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC = 5.0">
                <imp1:Quantity>
                <xsl:attribute name="unitCode">
                    <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                  </xsl:attribute>   <!-- Added as on 18 Sep -->
                  <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 100000.0"/>
                </imp1:Quantity>
              </xsl:if>
              
            <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC = 6.0">
                <imp1:Quantity>
                  <xsl:attribute name="unitCode">
                    <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                  </xsl:attribute>   <!-- Added as on 18 Sep -->
                  <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 1000000.0"/>
                </imp1:Quantity>
              </xsl:if> 
              
              
            <imp1:UnitPrice>
              <xsl:if test="inp1:OPERAMT/inp1:NUMOFDEC = ''">
                  <imp1:Amount>
                    <xsl:attribute name="currencyID">
                      <xsl:value-of select="inp1:OPERAMT/inp1:CURRENCY"/>
                    </xsl:attribute>
                    <xsl:value-of select="inp1:OPERAMT/inp1:VALUE div 1"/>
                  </imp1:Amount>
                </xsl:if>   
                
                <xsl:if test="inp1:OPERAMT/inp1:NUMOFDEC = 0">
                  <imp1:Amount>
                    <xsl:attribute name="currencyID">
                      <xsl:value-of select="inp1:OPERAMT/inp1:CURRENCY"/>
                    </xsl:attribute>
                    <xsl:value-of select="inp1:OPERAMT/inp1:VALUE div 1"/>
                  </imp1:Amount>
                </xsl:if> 
                
                <xsl:if test="inp1:OPERAMT/inp1:NUMOFDEC = 1.0">
                  <imp1:Amount>
                    <xsl:attribute name="currencyID">
                      <xsl:value-of select="inp1:OPERAMT/inp1:CURRENCY"/>
                    </xsl:attribute>
                    <xsl:value-of select="inp1:OPERAMT/inp1:VALUE div 10.0"/>
                  </imp1:Amount>
                </xsl:if>      
                
                <xsl:if test="inp1:OPERAMT/inp1:NUMOFDEC = 2.0">
                  <imp1:Amount>
                    <xsl:attribute name="currencyID">
                      <xsl:value-of select="inp1:OPERAMT/inp1:CURRENCY"/>
                    </xsl:attribute>
                    <xsl:value-of select="inp1:OPERAMT/inp1:VALUE div 100.0"/>
                  </imp1:Amount>
                </xsl:if>    
                
                <xsl:if test="inp1:OPERAMT/inp1:NUMOFDEC = 3.0">
                  <imp1:Amount>
                    <xsl:attribute name="currencyID">
                      <xsl:value-of select="inp1:OPERAMT/inp1:CURRENCY"/>
                    </xsl:attribute>
                    <xsl:value-of select="inp1:OPERAMT/inp1:VALUE div 1000.0"/>
                  </imp1:Amount>
                </xsl:if>  
                
                 <xsl:if test="inp1:OPERAMT/inp1:NUMOFDEC = 4.0">
                  <imp1:Amount>
                    <xsl:attribute name="currencyID">
                      <xsl:value-of select="inp1:OPERAMT/inp1:CURRENCY"/>
                    </xsl:attribute>
                    <xsl:value-of select="inp1:OPERAMT/inp1:VALUE div 10000.0"/>
                  </imp1:Amount>
                </xsl:if> 
                
               <xsl:if test="inp1:OPERAMT/inp1:NUMOFDEC = 5.0">
                  <imp1:Amount>
                    <xsl:attribute name="currencyID">
                      <xsl:value-of select="inp1:OPERAMT/inp1:CURRENCY"/>
                    </xsl:attribute>
                    <xsl:value-of select="inp1:OPERAMT/inp1:VALUE div 100000.0"/>
                  </imp1:Amount>
                </xsl:if>
                
               <xsl:if test="inp1:OPERAMT/inp1:NUMOFDEC = 6.0">
                  <imp1:Amount>
                    <xsl:attribute name="currencyID">
                      <xsl:value-of select="inp1:OPERAMT/inp1:CURRENCY"/>
                    </xsl:attribute>
                    <xsl:value-of select="inp1:OPERAMT/inp1:VALUE div 1000000.0"/>
                  </imp1:Amount>
                </xsl:if>  
                
           <!--     <imp1:Code>
                  <xsl:value-of select="inp1:POORDERLIN/inp1:OPERAMT/inp1:UOM"/>
                </imp1:Code> --><!-- removed as on 18 Sep -->
                <imp1:PerQuantity>
                  <xsl:attribute name="unitCode">
                    <xsl:value-of select="inp1:OPERAMT/inp1:UOM"/>
                  </xsl:attribute>
                  <xsl:value-of select="inp1:OPERAMT/inp1:UOMVALUE"/>
                </imp1:PerQuantity>     <!-- added as on 18 Sep -->
              </imp1:UnitPrice>    
              
              <!--POSUBLINE BEGINS-->
              <xsl:for-each select="inp1:POORDERLIN/inp1:POSUBLINE">
                <imp1:PurchaseOrderSubLine>
                  <imp1:LineNumber>
                    <xsl:value-of select="inp1:PSBLINENUM"/>
                  </imp1:LineNumber>
                  <imp1:Description>
                    <xsl:value-of select="inp1:DESCRIPTN"/>
                  </imp1:Description>
                  <imp1:Item>
                    <imp1:ItemID>
                      <imp1:ID>
                        <xsl:value-of select="inp1:ITEM"/>
                      </imp1:ID>
                      <imp1:RevisionID>
                        <xsl:value-of select="inp1:ITEMRV"/>
                      </imp1:RevisionID>
                    </imp1:ItemID>
                    <imp1:SupplierItemID>
                      <imp1:ID>
                        <xsl:value-of select="inp1:ITEMX"/>
                      </imp1:ID>
                      <imp1:RevisionID>
                        <xsl:value-of select="inp1:ITEMRVX"/>
                      </imp1:RevisionID>
                    </imp1:SupplierItemID>
                    <imp1:UPCID>
                      <xsl:value-of select="inp1:UPC"/>
                    </imp1:UPCID>
                  </imp1:Item>
                  
                  <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:NUMOFDEC = ''">
                    <Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:POORDERLIN/inp1:POLINESCHD/inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                      <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:VALUE = 1.0"/>
                    </Quantity>
                    </xsl:if>
                    
                 <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:NUMOFDEC = 0">
                    <Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:POORDERLIN/inp1:POLINESCHD/inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                      <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:VALUE = 1.0"/>
                 </Quantity>
                  </xsl:if>
                  
                <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:NUMOFDEC = 1">
                    <Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:POORDERLIN/inp1:POLINESCHD/inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                      <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:VALUE = 10.0"/>
                 </Quantity>
                  </xsl:if>
                  
                <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:NUMOFDEC = 2">
                    <Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:POORDERLIN/inp1:POLINESCHD/inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                      <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:VALUE = 100.0"/>
                 </Quantity>
                  </xsl:if>
                  
                 <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:NUMOFDEC = 3">
                    <Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:POORDERLIN/inp1:POLINESCHD/inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                      <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:VALUE = 1000.0"/>
                 </Quantity>
                  </xsl:if>
                  
                <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:NUMOFDEC = 4">
                    <Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:POORDERLIN/inp1:POLINESCHD/inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                      <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:VALUE = 10000.0"/>
                 </Quantity>
                  </xsl:if>
                  
                 <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:NUMOFDEC = 5">
                    <Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:POORDERLIN/inp1:POLINESCHD/inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                      <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:VALUE = 100000.0"/>
                 </Quantity>
                  </xsl:if>
                  
                  <xsl:if test="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:NUMOFDEC = 6">
                    <Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:POORDERLIN/inp1:POLINESCHD/inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                      <xsl:value-of select="/ns1:CustomProcess_PO_007/inp1:PROCESS_PO_007/inp1:DATAAREA/inp1:PROCESS_PO/inp1:POORDERLIN/inp1:POSUBLINE/inp1:QUANTITY/inp1:VALUE = 1000000.0"/>
                 </Quantity>
                  </xsl:if>
                  <imp1:DrawingReference>
                    <imp1:DocumentID>
                      <imp1:ID>
                        <xsl:value-of select="inp1:DRAWING"/>
                      </imp1:ID>
                    </imp1:DocumentID>
                  </imp1:DrawingReference>
                </imp1:PurchaseOrderSubLine>
              </xsl:for-each>
              
              
              <!--PURCHASEORDERSCHEDULE BEGINS-->
              <xsl:for-each select="inp1:POLINESCHD">
              
<!--START FOR THE SCHEDULELINE OF USERAREA -->  

     <xsl:variable name="SCH_TEMP">  
            <xsl:value-of select="orcl:getContentAsString(inp1:USERAREA)"/>
      </xsl:variable> 
<!--START FOR THE SCHEDULELINE DATETIME OF USERAREA -->
           <xsl:variable name="sch_temp1">
              <xsl:value-of select='substring-after($SCH_TEMP,"&lt;DATETIME")'/>
            </xsl:variable>
            <xsl:variable name="sch_temp2">
              <xsl:value-of select='substring-before($sch_temp1,"&lt;/DATETIME")'/>
            </xsl:variable>
            <xsl:variable name="sch_yearsub">
              <xsl:value-of select='substring-after($sch_temp2,"YEAR>")'/>
            </xsl:variable>
            <xsl:variable name="sch_year">
              <xsl:value-of select='substring-before($sch_yearsub,"&lt;/YEAR")'/>
            </xsl:variable>
            <xsl:variable name="sch_monthsub">
              <xsl:value-of select='substring-after($sch_temp2,"&lt;MONTH>")'/>
            </xsl:variable>
            <xsl:variable name="sch_month">
              <xsl:value-of select='substring-before($sch_monthsub,"&lt;/MONTH>")'/>
            </xsl:variable>
            <xsl:variable name="sch_daysub">
              <xsl:value-of select='substring-after($sch_temp2,"&lt;DAY>")'/>
            </xsl:variable>
            <xsl:variable name="sch_day">
              <xsl:value-of select='substring-before($sch_daysub,"&lt;/DAY>")'/>
            </xsl:variable>
            <xsl:variable name="sch_hoursub">
              <xsl:value-of select='substring-after($sch_temp2,"&lt;HOUR>")'/>
            </xsl:variable>
            <xsl:variable name="sch_hour">
              <xsl:value-of select='substring-before($sch_hoursub,"&lt;/HOUR>")'/>
            </xsl:variable>
            <xsl:variable name="sch_minsub">
              <xsl:value-of select='substring-after($sch_temp2,"&lt;MINUTE>")'/>
            </xsl:variable>
            <xsl:variable name="sch_min">
              <xsl:value-of select='substring-before($sch_minsub,"&lt;/MINUTE>")'/>
            </xsl:variable>
            <xsl:variable name="sch_secsub">
              <xsl:value-of select='substring-after($sch_temp2,"&lt;SECOND>")'/>
            </xsl:variable>
            <xsl:variable name="sch_sec">
              <xsl:value-of select='substring-before($sch_secsub,"&lt;/SECOND>")'/>
            </xsl:variable>
            <xsl:variable name="sch_subsecsub">
              <xsl:value-of select='substring-after($sch_temp2,"&lt;SUBSECOND>")'/>
            </xsl:variable>
            <xsl:variable name="sch_subsec">
              <xsl:value-of select='substring-before($sch_subsecsub,"&lt;/SUBSECOND>")'/>
            </xsl:variable>
            <xsl:variable name="sch_timezonesub">
              <xsl:value-of select='substring-after($sch_temp2,"&lt;TIMEZONE>")'/>
            </xsl:variable>
            <xsl:variable name="sch_timezone">
              <xsl:value-of select='substring-before($sch_timezonesub,"&lt;/TIMEZONE>")'/>
            </xsl:variable>  
            
            
            
<!--START FOR THE SCHEDULELINE PARTNER OF USERAREA -->       
        <xsl:variable name="SCH_NAME_TEMP">  
            <xsl:value-of select="orcl:getContentAsString(inp1:USERAREA)"/>
      </xsl:variable> 
<!--START FOR THE SCHEDULELINE PARTNER OF USERAREA -->
           <xsl:variable name="SCH_NAME_TEMP1">
              <xsl:value-of select='substring-after($SCH_NAME_TEMP,"&lt;PARTNER")'/>
            </xsl:variable>
            <xsl:variable name="SCH_NAME_TEMP2">
              <xsl:value-of select='substring-before($SCH_NAME_TEMP1,"&lt;/PARTNER")'/>
            </xsl:variable>
            <xsl:variable name="SCH_NAME_TEMP_sub">
              <xsl:value-of select='substring-after($SCH_NAME_TEMP2,"&lt;NAME")'/>
            </xsl:variable>
            <xsl:variable name="SCH_NAME_TEMP_sub1">
              <xsl:value-of select='substring-after($SCH_NAME_TEMP_sub,">")'/>
            </xsl:variable> 
            <xsl:variable name="sch_name">
              <xsl:value-of select='substring-before($SCH_NAME_TEMP_sub1,"&lt;/NAME")'/>
            </xsl:variable>
            <xsl:variable name="ONETIME_sub">
              <xsl:value-of select='substring-after($SCH_NAME_TEMP2,"ONETIME>")'/>
            </xsl:variable>
            <xsl:variable name="sch_ONETIME">
              <xsl:value-of select='substring-before($ONETIME_sub,"&lt;/ONETIME")'/>
            </xsl:variable>
            <xsl:variable name="PARTNRID_sub">
              <xsl:value-of select='substring-after($SCH_NAME_TEMP2,"PARTNRID>")'/>
            </xsl:variable>
            <xsl:variable name="sch_PARTNRID">
              <xsl:value-of select='substring-before($PARTNRID_sub,"&lt;/PARTNRID")'/>
            </xsl:variable>
            <xsl:variable name="PARTNRIDX_sub">
              <xsl:value-of select='substring-after($SCH_NAME_TEMP2,"PARTNRIDX>")'/>
            </xsl:variable>
            <xsl:variable name="sch_PARTNRIDX">
              <xsl:value-of select='substring-before($PARTNRIDX_sub,"&lt;/PARTNRIDX")'/>
            </xsl:variable>
            <xsl:variable name="DUNSNUMBER_sub">
              <xsl:value-of select='substring-after($SCH_NAME_TEMP2,"DUNSNUMBER>")'/>
            </xsl:variable>
            <xsl:variable name="sch_DUNSNUMBER">
              <xsl:value-of select='substring-before($DUNSNUMBER_sub,"&lt;/DUNSNUMBER")'/>
            </xsl:variable>
             <!--    <xsl:variable name="TAXID_sub">
              <xsl:value-of select='substring-after($SCH_NAME_TEMP2,TAXID>")'/>
            </xsl:variable>
            <xsl:variable name="sch_TAXID">
              <xsl:value-of select='substring-before($TAXID_sub,"&lt;/TAXID")'/>
            </xsl:variable> -->
            <xsl:variable name="SCH_ADDRESS1">
              <xsl:value-of select='substring-after($SCH_NAME_TEMP2,"&lt;ADDRESS")'/>
            </xsl:variable>
            <xsl:variable name="SCH_ADDRESS2">
              <xsl:value-of select='substring-before($SCH_ADDRESS1,"&lt;/ADDRESS")'/>
            </xsl:variable>
            
             <xsl:variable name="SCH_ADDRESS_sub">
              <xsl:value-of select='substring-after($SCH_ADDRESS2,"&lt;ADDRLINE")'/>
            </xsl:variable>
            <xsl:variable name="SCH_ADDRESS_sub1">
              <xsl:value-of select='substring-after($SCH_ADDRESS_sub,">")'/>
            </xsl:variable> 
            <xsl:variable name="ADDRESSline1">
              <xsl:value-of select='substring-before($SCH_ADDRESS_sub1,"&lt;/ADDRLINE")'/>
            </xsl:variable> 
            
            <!--<xsl:variable name="SCH_ADDRESS_subline">
              <xsl:value-of select='substring-after($SCH_ADDRESS2,"&lt;ADDRLINE")'/>
            </xsl:variable>-->
            <xsl:variable name="SCH_ADDRESS_subline1">
              <xsl:value-of select='substring-after($SCH_ADDRESS_sub1,"&lt;ADDRLINE")'/>
            </xsl:variable> 
            <xsl:variable name="SCH_ADDRESS_sub2">
              <xsl:value-of select='substring-after($SCH_ADDRESS_subline1,">")'/>
            </xsl:variable>
            <xsl:variable name="ADDRESSline2">
              <xsl:value-of select='substring-before($SCH_ADDRESS_sub2,"&lt;/ADDRLINE")'/>
            </xsl:variable> 
            <xsl:variable name="SCH_ADDRESS_subline2">
              <xsl:value-of select='substring-after($SCH_ADDRESS_sub2,"&lt;ADDRLINE")'/>
            </xsl:variable> 
            <xsl:variable name="SCH_ADDRESS_sub3">
              <xsl:value-of select='substring-after($SCH_ADDRESS_subline2,">")'/>
            </xsl:variable>
            <xsl:variable name="ADDRESSline3">
              <xsl:value-of select='substring-before($SCH_ADDRESS_sub3,"&lt;/ADDRLINE")'/>
            </xsl:variable> 
            <xsl:variable name="SCH_ADDRESS_subline3">
              <xsl:value-of select='substring-after($SCH_ADDRESS_sub3,"&lt;ADDRLINE")'/>
            </xsl:variable> 
            <xsl:variable name="SCH_ADDRESS_sub4">
              <xsl:value-of select='substring-after($SCH_ADDRESS_subline3,">")'/>
            </xsl:variable>
            <xsl:variable name="ADDRESSline4">
              <xsl:value-of select='substring-before($SCH_ADDRESS_sub4,"&lt;/ADDRLINE")'/>
            </xsl:variable> 
            
            <xsl:variable name="FAX_sub">
              <xsl:value-of select='substring-after($SCH_ADDRESS2,"&lt;FAX")'/>
            </xsl:variable>
            <xsl:variable name="FAX_sub1">
              <xsl:value-of select='substring-after($FAX_sub,">")'/>
            </xsl:variable>  
            <xsl:variable name="SCH_FAX1">
              <xsl:value-of select='substring-before($FAX_sub1,"&lt;/FAX")'/>
            </xsl:variable>     
                        
            <xsl:variable name="TELEPHONE_sub">
              <xsl:value-of select='substring-after($SCH_ADDRESS2,"&lt;TELEPHONE")'/>
            </xsl:variable>
            <xsl:variable name="TELEPHONE_sub1">
              <xsl:value-of select='substring-after($TELEPHONE_sub,">")'/>
            </xsl:variable>  
            <xsl:variable name="SCH_TELEPHONE1">
              <xsl:value-of select='substring-before($TELEPHONE_sub1,"&lt;/TELEPHONE")'/>
            </xsl:variable> 
            
            <xsl:variable name="TELEPHONE_sub2">
              <xsl:value-of select='substring-after($TELEPHONE_sub1,"&lt;TELEPHONE")'/>
            </xsl:variable>
            <xsl:variable name="TELEPHONE_sub3">
              <xsl:value-of select='substring-after($TELEPHONE_sub2,">")'/>
            </xsl:variable>  
            <xsl:variable name="SCH_TELEPHONE3">
              <xsl:value-of select='substring-before($TELEPHONE_sub3,"&lt;/TELEPHONE")'/>
            </xsl:variable> 
            
            <xsl:variable name="TELEPHONE_sub4">
              <xsl:value-of select='substring-after($TELEPHONE_sub3,"&lt;TELEPHONE")'/>
            </xsl:variable>
            <xsl:variable name="TELEPHONE_sub5">
              <xsl:value-of select='substring-after($TELEPHONE_sub4,">")'/>
            </xsl:variable>  
            <xsl:variable name="SCH_TELEPHONE6">
              <xsl:value-of select='substring-before($TELEPHONE_sub5,"&lt;/TELEPHONE")'/>
            </xsl:variable> 
            
    
             <xsl:variable name="sch_CITY_sub">
              <xsl:value-of select='substring-after($SCH_ADDRESS2,"CITY>")'/>
            </xsl:variable>
            <xsl:variable name="sch_CITY">
              <xsl:value-of select='substring-before($sch_CITY_sub,"&lt;/CITY")'/>
            </xsl:variable>
             <xsl:variable name="sch_COUNTRY_sub">
              <xsl:value-of select='substring-after($SCH_ADDRESS2,"COUNTRY>")'/>
            </xsl:variable>
            <xsl:variable name="sch_COUNTRY">
              <xsl:value-of select='substring-before($sch_COUNTRY_sub,"&lt;/COUNTRY")'/>
            </xsl:variable>
            <xsl:variable name="sch_DESCRIPTN_sub">
              <xsl:value-of select='substring-after($SCH_ADDRESS2,"DESCRIPTN>")'/>
            </xsl:variable>
            <xsl:variable name="sch_DESCRIPTN">
              <xsl:value-of select='substring-before($sch_DESCRIPTN_sub,"&lt;/DESCRIPTN")'/>
            </xsl:variable>
            <xsl:variable name="sch_POSTALCODE_sub">
              <xsl:value-of select='substring-after($SCH_ADDRESS2,"POSTALCODE>")'/>
            </xsl:variable>
            <xsl:variable name="sch_POSTALCODE">
              <xsl:value-of select='substring-before($sch_POSTALCODE_sub,"&lt;/POSTALCODE")'/>
            </xsl:variable>
            <xsl:variable name="sch_STATEPROVN_sub">
              <xsl:value-of select='substring-after($SCH_ADDRESS2,"STATEPROVN>")'/>
            </xsl:variable>
            <xsl:variable name="sch_STATEPROVN">
              <xsl:value-of select='substring-before($sch_STATEPROVN_sub,"&lt;/STATEPROVN")'/>
            </xsl:variable>
            <xsl:variable name="SCH_CONTACT1">
              <xsl:value-of select='substring-after($SCH_NAME_TEMP2,"&lt;CONTACT")'/>
            </xsl:variable>
            <xsl:variable name="SCH_CONTACT2">
              <xsl:value-of select='substring-before($SCH_CONTACT1,"&lt;/CONTACT")'/>
            </xsl:variable>
            <xsl:variable name="SCH_CONTACT_TEMP_SUB">
              <xsl:value-of select='substring-after($SCH_CONTACT2,"&lt;NAME")'/>
            </xsl:variable>
            <xsl:variable name="SCH_CONTACT_TEMP_SUB1">
              <xsl:value-of select='substring-after($SCH_CONTACT_TEMP_SUB,">")'/>
            </xsl:variable> 
            <xsl:variable name="sch_contact_name">
              <xsl:value-of select='substring-before($SCH_CONTACT_TEMP_SUB1,"&lt;/NAME")'/>
            </xsl:variable>
             <xsl:variable name="SCH_CONTACT_DESCRIPTN_SUB">
              <xsl:value-of select='substring-after($SCH_CONTACT2,"&lt;DESCRIPTN")'/>
            </xsl:variable>
            <xsl:variable name="sch_contact_desc">
              <xsl:value-of select='substring-before($SCH_CONTACT_DESCRIPTN_SUB,"&lt;/DESCRIPTN")'/>
            </xsl:variable>
            
             <xsl:variable name="SCH_FAX_sub">
              <xsl:value-of select='substring-after($SCH_CONTACT2,"&lt;FAX")'/>
            </xsl:variable>
            <xsl:variable name="SCH_FAX_sub1">
              <xsl:value-of select='substring-after($SCH_FAX_sub,">")'/>
            </xsl:variable> 
            <xsl:variable name="SCH_FAX">
              <xsl:value-of select='substring-before($SCH_FAX_sub1,"&lt;/FAX")'/>
            </xsl:variable> 
            
            <xsl:variable name="SCH_TELEPHONE_sub">
              <xsl:value-of select='substring-after($SCH_CONTACT2,"&lt;TELEPHONE")'/>
            </xsl:variable>
            <xsl:variable name="SCH_TELEPHONE_sub1">
              <xsl:value-of select='substring-after($SCH_TELEPHONE_sub,">")'/>
            </xsl:variable> 
            <xsl:variable name="SCH_TELEPHONE">
              <xsl:value-of select='substring-before($SCH_TELEPHONE_sub1,"&lt;/TELEPHONE")'/>
            </xsl:variable> 
            
            <xsl:variable name="SCH_EMAIL_sub">
              <xsl:value-of select='substring-after($SCH_CONTACT2,"&lt;EMAIL")'/>
            </xsl:variable> 
	    <xsl:variable name="SCH_EMAIL_sub1">
              <xsl:value-of select='substring-after($SCH_EMAIL_sub,">")'/>
            </xsl:variable> 
            <xsl:variable name="SCH_EMAIL">
              <xsl:value-of select='substring-before($SCH_EMAIL_sub1,"&lt;/EMAIL")'/>
            </xsl:variable>
            
              <imp1:PurchaseOrderSchedule>
              <imp1:LineNumber>
                  <xsl:value-of select="inp1:PSCLINENUM"/>
                </imp1:LineNumber>
                <imp1:Description>
                  <xsl:value-of select="inp1:DESCRIPTN"/>
                </imp1:Description>
                
              <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC = '' ">
                  <imp1:Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                    <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 1"/>
                  </imp1:Quantity>
                </xsl:if>  
                
                <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC = 0 ">
                  <imp1:Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                    <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 1"/>
                  </imp1:Quantity>
                </xsl:if>
                
                <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC = 1.0">
                  <imp1:Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                    <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 10.0"/>
                  </imp1:Quantity>
                </xsl:if>
                
               <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC = 2.0">
                  <imp1:Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                    <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 100.0"/>
                  </imp1:Quantity>
                </xsl:if>
                
                <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC = 3.0">
                  <imp1:Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                    <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 1000.0"/>
                  </imp1:Quantity>
                </xsl:if>
                
                <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC = 4.0">
                  <imp1:Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                    <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 10000.0"/>
                  </imp1:Quantity>
                </xsl:if>
                
                 <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC = 5.0">
                  <imp1:Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                    <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 100000.0"/>
                  </imp1:Quantity>
                </xsl:if>
                
                  <xsl:if test="inp1:QUANTITY/inp1:NUMOFDEC = 6.0">
                  <imp1:Quantity>
                    <xsl:attribute name="unitCode">
                      <xsl:value-of select="inp1:QUANTITY/inp1:UOM"/>
                    </xsl:attribute> <!-- added as on 18 Sep -->
                    <xsl:value-of select="inp1:QUANTITY/inp1:VALUE div 1000000.0"/>
                  </imp1:Quantity>
                </xsl:if>    
                <xsl:if test="inp1:DATETIME/inp1:YEAR != ''">
                  <imp1:RequiredDeliveryDateTime>
                    <xsl:value-of select='concat(inp1:DATETIME/inp1:YEAR,"-",inp1:DATETIME/inp1:MONTH,"-",inp1:DATETIME/inp1:DAY,"T",inp1:DATETIME/inp1:HOUR,":",inp1:DATETIME/inp1:MINUTE,":",inp1:DATETIME/inp1:SECOND,substring(inp1:DATETIME/inp1:TIMEZONE,1.0,3.0),":",substring(inp1:DATETIME/inp1:TIMEZONE,4.0,2.0))'/>
                  </imp1:RequiredDeliveryDateTime>
                </xsl:if>
                <!--<xsl:if test="inp1:DATETIME/inp1:YEAR = ''">
                  <imp1:RequiredDeliveryDateTime>
                    <xsl:value-of select=' "" '/>
                  </imp1:RequiredDeliveryDateTime>
                </xsl:if> -->  <!-- changed as on 15'Sep by nazima--> 
                
                <!-- DONE ON 13 OCT userarea-->
           <imp1:UserArea>
                <xsl:if test="$sch_year != ''">
                    <imp1:RequestedShipDateTime>
                      <xsl:value-of select='concat($sch_year,"-",$sch_month,"-",$sch_day,"T",$sch_hour,":",$sch_min,":",$sch_sec,substring($sch_timezone,1.0,3.0),":",substring($sch_timezone,4.0,2.0))'/>
                      <!--<xsl:value-of select='concat($sch_year,"-",$sch_month,"-",$sch_day,"T",$sch_hour,":",$sch_min,":",$sch_sec,":",$sch_subsec,substring($sch_timezone,1.0,3.0),":",substring($sch_timezone,4.0,2.0))'/>-->
                    </imp1:RequestedShipDateTime>
                </xsl:if>
              <!--  <xsl:if test="$sch_year = ''">
                    <imp1:RequestedShipDateTime>
                      <xsl:value-of select="''"/>
                    </imp1:RequestedShipDateTime>
                </xsl:if> -->  <!--REMOVED AS ON 16 OCT-->
                    <!--ADDED AS ON 16 OCT-->
             <!--  <xsl:choose> 
                <xsl:when test="$sch_year != ''">
                    <imp1:RequestedShipDateTime>
                      <xsl:value-of select='concat($sch_year,"-",$sch_month,"-",$sch_day,"T",$sch_hour,":",$sch_min,":",$sch_sec,":",substring($sch_timezone,1.0,3.0),":",substring($sch_timezone,4.0,2.0))'/>
                    </imp1:RequestedShipDateTime>
                </xsl:when>
                </xsl:choose>  --> <!--REMOVED AS ON 16 OCT -->
                <imp1:ShipToParty>
                <imp1:PartyIDs>
                    <imp1:ID>
                     <xsl:value-of select="$sch_PARTNRID"/>                    
                    </imp1:ID>
                    <imp1:DUNSID>
                      <xsl:value-of select="$sch_DUNSNUMBER"/>
                    </imp1:DUNSID>
                </imp1:PartyIDs>
                <imp1:Name>
                 <!--   <xsl:value-of select='$SCH_NAME_TEMP_sub'/> -->
                    <xsl:value-of select='$sch_name'/> 
                  </imp1:Name>
                <imp1:Location>
                    <imp1:ID>
                      <xsl:value-of select="$sch_PARTNRIDX"/>
                    </imp1:ID>
               <imp1:Address>
              <!-- <xsl:if test='$SCH_ADDRESS_sub2 != ""'> -->
                     <imp1:LineOne>
                        <xsl:value-of select='$ADDRESSline1'/>
                      </imp1:LineOne>
              <!--  </xsl:if>-->
                     <imp1:LineTwo>
                        <xsl:value-of select='$ADDRESSline2'/>
                      </imp1:LineTwo>
                       <imp1:LineThree>
                        <xsl:value-of select='$ADDRESSline3'/>
                      </imp1:LineThree>
                      <imp1:LineFour>
                        <xsl:value-of select='$ADDRESSline4'/>
                      </imp1:LineFour>
                      <imp1:CityName>
                        <xsl:value-of select='$sch_CITY'/>
                      </imp1:CityName>
                      <imp1:CountrySubDivisionCode>
                        <xsl:value-of select="$sch_STATEPROVN"/>
                    </imp1:CountrySubDivisionCode>
                      <imp1:CountryCode>
                        <xsl:value-of select="$sch_COUNTRY"/>
                      </imp1:CountryCode>
                      <imp1:PostalCode>
                        <xsl:value-of select="$sch_POSTALCODE"/>
                      </imp1:PostalCode>
                    </imp1:Address>
                    <imp1:Description>
                      <xsl:value-of select="$sch_DESCRIPTN"/>
                    </imp1:Description>
                    <imp1:Note>
                      <xsl:value-of select='$sch_ONETIME'/>
                    </imp1:Note>
                    </imp1:Location>
                 <imp1:Contact>
                     <xsl:attribute name="type">
                        <xsl:value-of select='string("Contact1")'/>
                    </xsl:attribute>
                 <imp1:Name>
                      <xsl:value-of select="$sch_contact_name"/>
                    </imp1:Name>
                    <imp1:JobTitle>
                      <xsl:value-of select="$sch_contact_desc"/>
                    </imp1:JobTitle>
                    <imp1:Communication>
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("EMAIL")'/>
                          </imp1:ChannelCode>
                          <imp1:URI>
                            <xsl:value-of select="$SCH_EMAIL"/>
                          </imp1:URI>
                    </imp1:Communication> 
                    <imp1:Communication>   
                          <imp1:ChannelCode>
                            <xsl:value-of select='string("FAX")'/>
                          </imp1:ChannelCode>
                         <imp1:DialNumber>
	             		<xsl:value-of select="$SCH_FAX"/> 
                          </imp1:DialNumber> 
                          </imp1:Communication>
                          <imp1:Communication>
                         <imp1:ChannelCode>
                            <xsl:value-of select='string("TELEPHONE")'/>
                          </imp1:ChannelCode>
                         <imp1:DialNumber>
	             		<xsl:value-of select="$SCH_TELEPHONE"/> 
                          </imp1:DialNumber>
                          </imp1:Communication>
                  </imp1:Contact> 
                 <imp1:Contact>
                     <xsl:attribute name="type">
                        <xsl:value-of select='string("Contact2")'/>
                    </xsl:attribute>           
                     <imp1:Communication>
                        <imp1:ChannelCode>
                            <xsl:value-of select='string("FAX")'/>
                          </imp1:ChannelCode> 
                         <imp1:DialNumber>
	             		<xsl:value-of select="$SCH_FAX1"/> 
                          </imp1:DialNumber>
                          </imp1:Communication>
                          <imp1:Communication>
                         <imp1:ChannelCode>
                            <xsl:value-of select='string("TELEPHONE1")'/>
                          </imp1:ChannelCode>
                         <imp1:DialNumber>
	             		<xsl:value-of select="$SCH_TELEPHONE1"/> 
                          </imp1:DialNumber>
                          </imp1:Communication>
                          <imp1:Communication>
                              <imp1:ChannelCode>
                            <xsl:value-of select='string("TELEPHONE2")'/>
                          </imp1:ChannelCode>
                         <imp1:DialNumber>
	             		<xsl:value-of select="$SCH_TELEPHONE3"/> 
                          </imp1:DialNumber>
                        </imp1:Communication>
                        <imp1:Communication>
                         <imp1:ChannelCode>
                            <xsl:value-of select='string("TELEPHONE3")'/>
                          </imp1:ChannelCode>
                         <imp1:DialNumber>
	             		<xsl:value-of select="$SCH_TELEPHONE6"/> 
                          </imp1:DialNumber>
                        </imp1:Communication> 
                  </imp1:Contact>
                </imp1:ShipToParty>
                </imp1:UserArea>  <!-- DONE ON 13 OCT -->
              </imp1:PurchaseOrderSchedule>
              </xsl:for-each>
                            
              <!--START FOR THE DFFLINE OF USERAREA -->
              
                <imp1:UserArea>
                    <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('REQUESTOR')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$Req_temp_ln"/>
                   </imp1:Note>
                   
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('CATEGORYID')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$Cat_temp_ln"/>
                   </imp1:Note>
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('CONTRACTPONUM')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$Contract_temp_ln"/>
                   </imp1:Note>
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('CONTRACTPOLINENUM')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$Catnum_temp_ln"/>
                   </imp1:Note>
                    <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('VENDORQUOTENUM')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$Vendor_temp_ln"/>
                   </imp1:Note>
                    <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('LISTPRICE')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$Listprc_temp_ln"/>
                   </imp1:Note>
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('MARKETPRICE')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$Mktprc_temp_ln"/>
                   </imp1:Note>
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('PRICENOTTOEXCEED')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$PrcNotExc_temp_ln"/>
                   </imp1:Note>
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('NEGPRICE')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$Negprc_temp_ln"/>
                   </imp1:Note>
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('TAXABLE')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$Taxable_temp_ln"/>
                   </imp1:Note>
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('TXNREASONCODE')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$Txnrea_temp_ln"/>
                   </imp1:Note>
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('TYPE1099')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$T1099_temp_ln"/>
                   </imp1:Note>
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('LINEORDERTYPE')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$Lntype_temp_ln"/>
                   </imp1:Note>
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('HAZRDUNNUM')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$Hzrdnum_temp_ln"/>
                   </imp1:Note>
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('HAZRDUNDESC')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$hzrdnumdesc_temp_ln"/>
                   </imp1:Note> 
    
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE1')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln1"/>
                   </imp1:Note>
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE2')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln2"/>
                    </imp1:Note>
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE3')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln3"/>
                    </imp1:Note>
                    <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE4')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln4"/>
                    </imp1:Note>
                     <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE5')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln5"/>
                    </imp1:Note>
                    <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE6')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln6"/>
                    </imp1:Note>
                     <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE7')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln7"/>
                    </imp1:Note>
                    <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE8')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln8"/>
                    </imp1:Note>
                     <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE9')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln9"/>
                    </imp1:Note>
                    <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE10')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln10"/>
                         </imp1:Note>
                          <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE11')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln11"/>
                    </imp1:Note>
                    <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE12')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln12"/>
                    </imp1:Note>
                    <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE13')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln13"/>
                    </imp1:Note>
                    <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE14')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln14"/>
                    </imp1:Note>
                    <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE15')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln15"/>
                    </imp1:Note>
                    <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFLINE ATTRIBUTE16')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$att_ln16"/>
                    </imp1:Note> 
            <!--END FOR THE DFFLINE OF USERAREA -->
            
            
            <!--START FOR THE DFFITEM OF USERAREA -->
            
             <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE1')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln1"/>
                    </imp1:Note> 
                  <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE2')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln2"/>
                    </imp1:Note> 
                         <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE3')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln3"/>
                    </imp1:Note> 
                  <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE4')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln4"/>
                    </imp1:Note>
                    <imp1:Note>
                     <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE5')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln5"/>
                    </imp1:Note> 
                  <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE6')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln6"/>
                    </imp1:Note> 
                         <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE7')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln7"/>
                    </imp1:Note> 
                  <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE8')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln8"/>
                    </imp1:Note>
                    
                     <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE9')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln9"/>
                    </imp1:Note> 
                  <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE10')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln10"/>
                    </imp1:Note> 
                         <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE11')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln11"/>
                    </imp1:Note> 
                  <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE12')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln12"/>
                    </imp1:Note>
                    <imp1:Note>
                     <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE13')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln13"/>
                    </imp1:Note> 
                  <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE14')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln14"/>
                    </imp1:Note> 
                         <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE15')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln15"/>
                    </imp1:Note> 
                  <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('DFFITEM ATTRIBUTE16')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$dffitem_att_ln16"/>
                    </imp1:Note> 
                    
                    <!--START FOR THE KFFITEM OF USERAREA -->
                    
                   <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('KFFITEM ATTRIBUTE1')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$kffitem_att_ln1"/>
                    </imp1:Note>
                     <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('KFFITEM ATTRIBUTE2')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$kffitem_att_ln2"/>
                    </imp1:Note>
                     <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('KFFITEM ATTRIBUTE3')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$kffitem_att_ln3"/>
                    </imp1:Note>
                     <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('KFFITEM ATTRIBUTE4')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$kffitem_att_ln4"/>
                    </imp1:Note>
                     <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('KFFITEM ATTRIBUTE5')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$kffitem_att_ln5"/>
                    </imp1:Note>
                     <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('KFFITEM ATTRIBUTE6')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$kffitem_att_ln6"/>
                    </imp1:Note>
                     <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('KFFITEM ATTRIBUTE7')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$kffitem_att_ln7"/>
                    </imp1:Note>
                     <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('KFFITEM ATTRIBUTE8')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$kffitem_att_ln8"/>
                    </imp1:Note>
                     <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('KFFITEM ATTRIBUTE9')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$kffitem_att_ln9"/>
                    </imp1:Note>
                     <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('KFFITEM ATTRIBUTE10')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$kffitem_att_ln10"/>
                    </imp1:Note>
                     <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('KFFITEM ATTRIBUTE11')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$kffitem_att_ln11"/>
                    </imp1:Note>
                <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('KFFITEM ATTRIBUTE12')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$kffitem_att_ln12"/>
                    </imp1:Note>
                    <imp1:Note>
                         <xsl:attribute name="author">
                              <xsl:value-of select="string('KFFITEM ATTRIBUTE13')"/>
                         </xsl:attribute>
                         <xsl:value-of select="$kffitem_att_ln13"/>
                    </imp1:Note>
            </imp1:UserArea>
            </imp1:PurchaseOrderLine>
          </xsl:for-each>
        </imp1:PurchaseOrder>
      </DataArea>
      </ProcessPO>
      <Message_id>
        <xsl:value-of select="/ns1:CustomProcess_PO_007/Message_id"/>
      </Message_id>
      <Message_direction>
        <xsl:value-of select="/ns1:CustomProcess_PO_007/Message_direction"/>
      </Message_direction>
      <Sender_Document_number>
        <xsl:value-of select="/ns1:CustomProcess_PO_007/Document_number"/>
      </Sender_Document_number>
      <Sender_Message_type>
        <xsl:value-of select="/ns1:CustomProcess_PO_007/Message_type"/>
      </Sender_Message_type>
      <Sender_Message_standard>
        <xsl:value-of select="/ns1:CustomProcess_PO_007/Message_standard"/>
      </Sender_Message_standard>
      <Sender_Transaction_type>
        <xsl:value-of select="/ns1:CustomProcess_PO_007/Transaction_type"/>
      </Sender_Transaction_type>
      <Sender_Transaction_subtype>
        <xsl:value-of select="/ns1:CustomProcess_PO_007/Transaction_subtype"/>
      </Sender_Transaction_subtype>
      <Sender_System_type>
        <xsl:value-of select="/ns1:CustomProcess_PO_007/Sender_system_type"/>
      </Sender_System_type>
      <Sender_Id>
        <xsl:value-of select="/ns1:CustomProcess_PO_007/Sender_id"/>
      </Sender_Id>
      <Sender_Site_Id>
        <xsl:value-of select="string('')"/>
      </Sender_Site_Id>
      <Sender_Name>
        <xsl:value-of select="/ns1:CustomProcess_PO_007/Attribute1"/>
      </Sender_Name>
      <Receiver_Id>
        <xsl:value-of select="/ns1:CustomProcess_PO_007/Attribute4"/>
      </Receiver_Id>
      <Receiver_Site_Id>
        <xsl:value-of select="/ns1:CustomProcess_PO_007/Attribute5"/>
      </Receiver_Site_Id>
      <Flow_id_1>
        <xsl:value-of select="/ns1:CustomProcess_PO_007/Flow_id_1"/>
      </Flow_id_1>
      <Flow_id_2>
        <xsl:value-of select="ehdr:getInstanceID()"/>
      </Flow_id_2>
      <Flow_id_3>
        <xsl:value-of select="/ns1:CustomProcess_PO_007/Flow_id_3"/>
      </Flow_id_3>
    </ns2:CustomProcessPO>
  </xsl:template>
</xsl:stylesheet>

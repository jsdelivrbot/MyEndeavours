<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="ETH_DEQJMS_CustomProcessPO.wsdl"/>
      <rootElement name="CustomProcessPO" namespace="http://xmlns.emrsn.com/CustomProcessPurchaseOrder"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="ETHSys_IntegrationServices_ETHSysGrp_B2BInOut_ETH_ProcessPO_CustomEDI_5020_RemoveNamespace_RS.wsdl"/>
      <rootElement name="CustomEDI850" namespace="http://xmlns.emrsn.com/CustomEDI850"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.4.0(build 080718.0645) AT [WED SEP 23 15:34:56 IST 2009]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:ns9="urn:oracle:integration:b2b:DCC1FCD2811C47748DF43A39F735F4F0"
                xmlns:ns5="http://www.openapplications.org/oagis/9/unqualifieddatatypes/1.1"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:tns="http://oracle.com/esb/namespaces/ETHSys_InputServices_ETHSysGrp_PO_EDI_Input"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                xmlns:ns1="http://www.openapplications.org/oagis/9/IANAMIMEMediaTypes:2003"
                xmlns:ns0="http://www.w3.org/2001/XMLSchema"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:ns10="http://xmlns.oracle.com/pcbpel/adapter/file/ETH_PUTFL_EDI_Output_850V5_0/"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:hdr="http://xmlns.oracle.com/pcbpel/adapter/file/"
                xmlns:ns6="http://www.openapplications.org/oagis/9/unitcode/66411:2001"
                xmlns:ns8="http://www.openapplications.org/oagis/9/languagecode/5639:1988"
                xmlns:inp1="http://xmlns.emrsn.com/CustomProcessPurchaseOrder"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ns3="http://xmlns.emrsn.com/CustomEDI850"
                xmlns:ns4="http://www.openapplications.org/oagis/9/qualifieddatatypes/1.1"
                xmlns:ns7="http://www.openapplications.org/oagis/9/currencycode/54217:2001"
                xmlns:eth="http://www.oracle.com/XSL/Transform/java/ETHComplianceCheck.functions.ETHComplianceCheck"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:ns2="http://www.openapplications.org/oagis/9/codelists"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:imp1="http://www.openapplications.org/oagis/9"
                exclude-result-prefixes="xsl ns5 tns ns1 ns0 ns6 ns8 inp1 ns4 ns7 ns2 ns3 ns10 plt jca ns9 hdr imp1 ehdr xp20 ora orcl bpws eth hwf xref ids">
  <xsl:template match="/">
    <ns3:CustomEDI850>
      <xsl:variable name="SC_SeqNo">  
        <xsl:value-of select="orcl:sequence-next-val('B2B_MSG_SEQ','jdbc/ETH_BusinessDB')"/>
      </xsl:variable>
      <xsl:variable name="Current_Time">  
        <xsl:value-of select="xp20:current-time()"/>
      </xsl:variable> 
      <xsl:variable name="destination">
        <xsl:choose>
            <xsl:when test="/inp1:CustomProcessPO/Attribute5 ='TP1'">        
                <xsl:value-of select="/inp1:CustomProcessPO/Trading_partner_1_name"/>
            </xsl:when>
            <xsl:when test="/inp1:CustomProcessPO/Attribute5 ='TP2'">
                <xsl:value-of select="/inp1:CustomProcessPO/Trading_partner_2_name"/>
            </xsl:when> 
            <xsl:when test="/inp1:CustomProcessPO/Attribute5 ='TP3'">
                <xsl:value-of select="/inp1:CustomProcessPO/Trading_partner_3_name"/>
            </xsl:when>
	    <xsl:when test="/inp1:CustomProcessPO/Attribute5 ='TP4'">
                <xsl:value-of select="/inp1:CustomProcessPO/Logistics_1_name"/>
	    </xsl:when>
	    <xsl:when test="/inp1:CustomProcessPO/Attribute5 ='TP5'">
                <xsl:value-of select="/inp1:CustomProcessPO/Logistics_2_name"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:value-of select="string('Invalid')"/>
            </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="Var_InterchangeSenderQual">  
        <xsl:value-of select="orcl:lookup-dvm('ISA_GS_IDs','TradingPartner',$destination,'InterchangeSenderQual','ZZ')"/>        
      </xsl:variable>
      <xsl:variable name="Var_InterchangeSenderID">  
        <xsl:value-of select="orcl:lookup-dvm('ISA_GS_IDs','TradingPartner',$destination,'InterchangeSenderID','EMR')"/>
      </xsl:variable> 
      <xsl:variable name="Var_InterchangeReceiverQual">  
        <xsl:value-of select="orcl:lookup-dvm('ISA_GS_IDs','TradingPartner',$destination,'InterchangeReceiverQual','ZZ')"/>
      </xsl:variable> 
      <xsl:variable name="Var_InterchangeReceiverID">  
        <xsl:value-of select="orcl:lookup-dvm('ISA_GS_IDs','TradingPartner',$destination,'InterchangeReceiverID','SeeBeyond')"/>
      </xsl:variable> 
      <xsl:variable name="Var_InterchangeUsageIndicator">  
        <xsl:value-of select="orcl:lookup-dvm('ISA_GS_IDs','TradingPartner',$destination,'InterchangeUsageIndicator','P')"/>      
      </xsl:variable> 
      <xsl:variable name="Var_GroupSenderID">  
        <xsl:value-of select="orcl:lookup-dvm('ISA_GS_IDs','TradingPartner',$destination,'GroupSenderID','EMR')"/>
      </xsl:variable> 
      <xsl:variable name="Var_GroupReceiverID">  
        <xsl:value-of select="orcl:lookup-dvm('ISA_GS_IDs','TradingPartner',$destination,'GroupReceiverID','SeeBeyond')"/>
      </xsl:variable>

      <ns9:Transaction-850>    
      <xsl:variable name="Current_date">  
        <xsl:value-of select="xp20:current-date()"/>
      </xsl:variable>
      <xsl:attribute name="XDataVersion">
        <xsl:value-of select='string("1.0")'/>
      </xsl:attribute>
      <xsl:attribute name="Standard">
        <xsl:value-of select='string("X12")'/>
      </xsl:attribute>
      <xsl:attribute name="GUID">
        <xsl:value-of select='string("{D4791971-A782-D811-B0F2-080020C8C860}")'/>
      </xsl:attribute>
      <xsl:attribute name="CreatedBy">
        <xsl:value-of select='string("ECXEngine_899")'/>
      </xsl:attribute>
      <xsl:attribute name="CreatedDate"> <!--ADDED AS ON 17 OCT -->
        <xsl:value-of select="xp20:current-dateTime()"/>
      </xsl:attribute>
      <ns9:Internal-Properties>
         <ns9:Data-Structure>
            <xsl:attribute name="Name">
              <xsl:value-of select='string("Interchange")'/>
            </xsl:attribute>
            <ns9:Lookup>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeSenderQual")'/>
              </xsl:attribute>
              <xsl:value-of select='$Var_InterchangeSenderQual'/>
            </ns9:Lookup>
            <ns9:Lookup>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeSenderID")'/>
              </xsl:attribute>
              <xsl:value-of select='$Var_InterchangeSenderID'/>
            </ns9:Lookup>
            <ns9:Lookup>
                <xsl:attribute name="Name">
                    <xsl:value-of select='string("InterchangeReceiverQual")'/>
                </xsl:attribute>                    
                <xsl:value-of select='$Var_InterchangeReceiverQual'/>
            </ns9:Lookup>
            <ns9:Lookup>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeReceiverID")'/>
              </xsl:attribute>
              <xsl:value-of select='$Var_InterchangeReceiverID'/>
            </ns9:Lookup>
            <ns9:Lookup>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeControlVersion")'/>
              </xsl:attribute>
              <xsl:value-of select='string("00502")'/>
            </ns9:Lookup>
            <ns9:Lookup>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("Standard")'/>
              </xsl:attribute>
              <xsl:value-of select='string("X12")'/>
            </ns9:Lookup>
            <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeAuthorizationInfoQual")'/>
              </xsl:attribute>
              <xsl:value-of select='string("00")'/>
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeAuthorizationInfo")'/>
              </xsl:attribute>
              <xsl:value-of select='string("")'/>
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeSecurityInfoQual")'/>
              </xsl:attribute>
              <xsl:value-of select='string("00")'/>
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeSecurityInfo")'/>
              </xsl:attribute>
              <xsl:value-of select='string("")'/>
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeSenderQual")'/>
              </xsl:attribute>
              <xsl:value-of select='$Var_InterchangeSenderQual'/>
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeSenderID")'/>
              </xsl:attribute>
              <xsl:value-of select='$Var_InterchangeSenderID'/>
            </ns9:Property>
            <ns9:Property>
                <xsl:attribute name="Name">
                    <xsl:value-of select='string("InterchangeReceiverQual")'/>
                </xsl:attribute>                    
                <xsl:value-of select='$Var_InterchangeReceiverQual'/>
            </ns9:Property>
            <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeReceiverID")'/>
              </xsl:attribute>
              <xsl:value-of select='$Var_InterchangeReceiverID'/>
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeDate")'/>
              </xsl:attribute>
             <xsl:value-of select="concat(substring($Current_date,3.0,2.0),substring($Current_date,6.0,2.0),substring($Current_date,9.0,2.0))"/>
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeTime")'/>
              </xsl:attribute>
               <!--<xsl:value-of select="xp20:current-time()"/> -->
              <xsl:value-of select="concat(substring($Current_Time,1.0,2.0),substring($Current_Time,4.0,2.0))"/> 
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeControlStandard_RepeatingSeparator")'/>
              </xsl:attribute>
              <xsl:value-of select='string("&lt;")'/>
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeControlVersion")'/>
              </xsl:attribute>
              <xsl:value-of select='string("00502")'/>
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeControlNumber")'/>
              </xsl:attribute>
              <xsl:value-of select="$SC_SeqNo"/>
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeAckRequested")'/>
              </xsl:attribute>
              <xsl:value-of select='string("0")'/>
            </ns9:Property>
            <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeUsageIndicator")'/>
              </xsl:attribute>
              <xsl:value-of select='$Var_InterchangeUsageIndicator'/>
            </ns9:Property>
            <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeComponentElementSep")'/>
              </xsl:attribute>
              <xsl:value-of select='string("0x3e")'/>
            </ns9:Property>
            <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("DecimalSeparator")'/>
              </xsl:attribute>
              <xsl:value-of select='string("")'/> 
            </ns9:Property> 
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("ElementDelimiter")'/>
              </xsl:attribute>
              <xsl:value-of select='string("0x7c")'/>
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("ReleaseCharacter")'/>
              </xsl:attribute>
              <xsl:value-of select='string("")'/>
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("RepeatingSeparator")'/>
              </xsl:attribute>
              <xsl:value-of select='string("0x3c")'/>
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("SegmentDelimiter")'/>
              </xsl:attribute>
              <xsl:value-of select='string("0x7e0xd0xa")'/>
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("SubelementDelimiter")'/>
              </xsl:attribute>
              <xsl:value-of select='string("0x3e")'/>
            </ns9:Property>
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeChildCount")'/>
              </xsl:attribute>
           <!--   <xsl:value-of select='string("1")'/> -->
                <xsl:value-of select='count(/inp1:CustomProcessPO/ProcessPO/DataArea/imp1:PurchaseOrder)'/>
            </ns9:Property>
                  <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("InterchangeTrailerControlNumber")'/>
              </xsl:attribute>
              <xsl:value-of select="$SC_SeqNo"/>
            </ns9:Property> 
          
            <ns9:Data-Structure>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("Group")'/>
              </xsl:attribute>
              <ns9:Lookup>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("GroupSenderID")'/>
              </xsl:attribute>
              <xsl:value-of select='$Var_GroupSenderID'/>
            </ns9:Lookup>
            <ns9:Lookup>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("GroupReceiverID")'/>
              </xsl:attribute>
              <xsl:value-of select='$Var_GroupReceiverID'/>
            </ns9:Lookup> 
            <ns9:Lookup>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("GroupVersionNumber")'/>
              </xsl:attribute>
              <xsl:value-of select='string("005020")'/>
            </ns9:Lookup>
            
            <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("GroupID")'/>
              </xsl:attribute>
              <xsl:value-of select='string("PO")'/>
            </ns9:Property> 
            <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("GroupSenderID")'/>
              </xsl:attribute>
              <!--<xsl:value-of select='$Var_GroupSenderID'/>-->
              <xsl:value-of select="/inp1:CustomProcessPO/ProcessPO/imp1:ApplicationArea/imp1:Sender/imp1:LogicalID"/>
            </ns9:Property> 
            <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("GroupReceiverID")'/>
              </xsl:attribute>
              <xsl:value-of select='$Var_GroupReceiverID'/>              
            </ns9:Property>
            <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("GroupDate")'/>
              </xsl:attribute>
              <!--<xsl:value-of select="xp20:current-date()"/> -->
               <xsl:value-of select="concat(substring($Current_date,1.0,4.0),substring($Current_date,6.0,2.0),substring($Current_date,9.0,2.0))"/>
              
            </ns9:Property> 
               <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("GroupTime")'/>
              </xsl:attribute>
                 <xsl:value-of select="concat(substring($Current_Time,1.0,2.0),substring($Current_Time,4.0,2.0))"/> 
            </ns9:Property> 
               <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("GroupControlNumber")'/>
              </xsl:attribute>
              <xsl:value-of select="$SC_SeqNo"/>
            </ns9:Property> 
               <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("GroupAgencyCode")'/>
              </xsl:attribute>
              <xsl:value-of select='string("X")'/>
            </ns9:Property> 
               <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("GroupVersionNumber")'/>
              </xsl:attribute>
              <xsl:value-of select='string("005020")'/>
            </ns9:Property> 
              <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("GroupChildCount")'/>
              </xsl:attribute>
            <!--  <xsl:value-of select='string("1")'/> -->
                  <xsl:value-of select='count(/inp1:CustomProcessPO/ProcessPO/DataArea/imp1:PurchaseOrder)'/>
            </ns9:Property> 
             <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("GroupTrailerControlNumber")'/>
              </xsl:attribute>
              <xsl:value-of select="$SC_SeqNo"/>
            </ns9:Property> 
          <ns9:Data-Structure>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("Transaction")'/>
              </xsl:attribute>
                <ns9:Lookup>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("TransactionID")'/>
              </xsl:attribute>
              <xsl:value-of select='string("850")'/>
            </ns9:Lookup>
                          
                   <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("TransactionID")'/>
              </xsl:attribute>
              <xsl:value-of select='string("850")'/>
            </ns9:Property> 
               <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("TransactionControlNumber")'/>
              </xsl:attribute>
              <xsl:value-of select="$SC_SeqNo"/>
            </ns9:Property> 
               <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("TransactionImplementationReference")'/>
              </xsl:attribute>
              <xsl:value-of select='string("")'/>
            </ns9:Property> 
               <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("TransactionChildCount")'/>
              </xsl:attribute>
             <!-- <xsl:value-of select='string("35")'/> -->
                <xsl:value-of select='string("#SegmentCount#")'/> 
            </ns9:Property> 
               <ns9:Property>
              <xsl:attribute name="Name">
                <xsl:value-of select='string("TransactionTrailerControlNumber")'/>
              </xsl:attribute>
              <xsl:value-of select="$SC_SeqNo"/>
            </ns9:Property> 
            </ns9:Data-Structure>
            </ns9:Data-Structure>
          </ns9:Data-Structure>
        </ns9:Internal-Properties>
    <!--  <ns9:Segment-ISA> -->
        <!-- <ns9:Element-I01>
          <xsl:value-of select="/inp1:CustomProcessPO/ProcessPO/imp1:ApplicationArea/imp1:Sender/imp1:AuthorizationID"/>
        </ns9:Element-I01>-->
        <!-- ADDED AS PER ROBIN'S MAIL ON 23 SEP -->
        <!-- <ns9:Element-I13>
          <xsl:value-of select="string(0.0)"/>
        </ns9:Element-I13>-->
      <!--  <xsl:for-each select="/inp1:CustomProcessPO/ProcessPO">
          <xsl:if test='@systemEnvironmentCode = "Production"'>
            <ns9:Element-I14>
              <xsl:value-of select='string("P")'/>
            </ns9:Element-I14>
          </xsl:if>
        </xsl:for-each>
        <xsl:for-each select="/inp1:CustomProcessPO/ProcessPO">
          <xsl:if test='@systemEnvironmentCode = "Test"'>
            <ns9:Element-I14>
              <xsl:value-of select='string("T")'/>
            </ns9:Element-I14>
          </xsl:if>
        </xsl:for-each>
      </ns9:Segment-ISA> -->
      <!--   <ns9:Segment-GS> -->
      <!--    <ns9:Element-479>
          <xsl:value-of select='string("PO")'/>
        </ns9:Element-479>
        <ns9:Element-142>
          <xsl:value-of select="/inp1:CustomProcessPO/ProcessPO/imp1:ApplicationArea/imp1:Sender/imp1:LogicalID"/>
        </ns9:Element-142>
        <ns9:Element-373>
          <xsl:value-of select="concat(substring(/inp1:CustomProcessPO/ProcessPO/imp1:ApplicationArea/imp1:CreationDateTime,1.0,4.0),substring(/inp1:CustomProcessPO/ProcessPO/imp1:ApplicationArea/imp1:CreationDateTime,6.0,2.0),substring(/inp1:CustomProcessPO/ProcessPO/imp1:ApplicationArea/imp1:CreationDateTime,9.0,2.0))"/>
        </ns9:Element-373> -->
      <!-- ADDED AS PER ROBIN'S MAIL ON 23 SEP -->
      <!-- <ns9:Element-337>
          <xsl:value-of select="concat(substring(/inp1:CustomProcessPO/ProcessPO/imp1:ApplicationArea/imp1:CreationDateTime,12.0,2.0),substring(/inp1:CustomProcessPO/ProcessPO/imp1:ApplicationArea/imp1:CreationDateTime,15.0,2.0),substring(/inp1:CustomProcessPO/ProcessPO/imp1:ApplicationArea/imp1:CreationDateTime,18.0,2.0))"/>
        </ns9:Element-337> -->
      <!-- ADDED AS PER ROBIN'S MAIL ON 23 SEP -->
      <!--</ns9:Segment-GS>-->
      
      <xsl:for-each select="/inp1:CustomProcessPO/ProcessPO/DataArea/imp1:PurchaseOrder">
      
      <ns9:Segment-ST>      
        <ns9:Element-143>
          <xsl:value-of select="string(850.0)"/>
        </ns9:Element-143>
       <!-- <ns9:Element-329>
          <xsl:value-of select="orcl:lookup-table('SC_MASTER_TRANSACTION','FLOW_ID_1',$flowID,'ST_CONTROL','jdbc:polite4:system/any@142.176.225.81:1531:OraESB')"/>
        </ns9:Element-329>-->
        <ns9:Element-329>
          <!--<xsl:value-of select="string('#ControlNumber#')"/>-->
          <xsl:value-of select="$SC_SeqNo"/>
        </ns9:Element-329>
      </ns9:Segment-ST>
      <ns9:Segment-BEG>
       <ns9:Element-353>
          <xsl:value-of select='string("00")'/>
        </ns9:Element-353> <!-- ADDED AS PER ROBIN'S MAIL ON 23 SEP -->
        <xsl:choose>
          <!-- ADDED AS PER ROBIN'S MAIL ON 23 SEP -->
          <xsl:when test='imp1:PurchaseOrderHeader/imp1:DocumentID/imp1:VariationID = "STANDARD"'>
            <ns9:Element-92>
              <xsl:value-of select='string("SA")'/>
            </ns9:Element-92>
          </xsl:when>
          <xsl:when test='imp1:PurchaseOrderHeader/imp1:DocumentID/imp1:VariationID = "BLANKET"'>
            <ns9:Element-92>
              <xsl:value-of select='string("BK")'/>
            </ns9:Element-92>
          </xsl:when>
        </xsl:choose>
        <!-- ADDED AS PER ROBIN'S MAIL ON 23 SEP -->
        <ns9:Element-324>
          <xsl:value-of select="imp1:PurchaseOrderHeader/imp1:DocumentID/imp1:ID"/>
        </ns9:Element-324>
        <ns9:Element-328>
          <!--<xsl:value-of select="imp1:PurchaseOrderHeader/imp1:ContractReference/imp1:ReleaseNumber"/>-->
          <xsl:value-of select="imp1:PurchaseOrderHeader/imp1:ReleaseNumber"/>
        </ns9:Element-328>
        <ns9:Element-373>           <!-- ADDED AS ON 25 SEP -->        
           <xsl:value-of select="concat(substring(imp1:PurchaseOrderHeader/imp1:DocumentDateTime,1.0,4.0),substring(imp1:PurchaseOrderHeader/imp1:DocumentDateTime,6.0,2.0),substring(imp1:PurchaseOrderHeader/imp1:DocumentDateTime,9.0,2.0))"/>
          <!--<xsl:value-of select="concat(substring(imp1:PurchaseOrderHeader/imp1:DocumentDateTime,1.0,4.0),substring(imp1:PurchaseOrderHeader/imp1:DocumentDateTime,6.0,2.0),substring(imp1:PurchaseOrderHeader/imp1:DocumentDateTime,9.0,2.0),substring(imp1:PurchaseOrderHeader/imp1:DocumentDateTime,12.0,2.0),substring(imp1:PurchaseOrderHeader/imp1:DocumentDateTime,15.0,2.0),substring(imp1:PurchaseOrderHeader/imp1:DocumentDateTime,18.0,2.0))"/> -->
        </ns9:Element-373>
        <ns9:Element-367>
          <xsl:value-of select="imp1:PurchaseOrderHeader/imp1:ContractReference/imp1:DocumentID/imp1:ID"/>
        </ns9:Element-367>  
        
         <!--<xsl:if test='(imp1:ProcessPurchaseOrder/DataArea/imp1:PurchaseOrder/imp1:PurchaseOrderHeader/imp1:UserArea/imp1:ActionExpression/@actionCode = "Y") or (imp1:ProcessPurchaseOrder/DataArea/imp1:PurchaseOrder/imp1:PurchaseOrderHeader/imp1:UserArea/imp1:ActionExpression/@actionCode = "AcknowledgementRequired")'>-->
         <xsl:if test='(imp1:PurchaseOrderHeader/imp1:UserArea/imp1:ActionExpression/@actionCode = "Y") or (imp1:PurchaseOrderHeader/imp1:UserArea/imp1:ActionExpression/@actionCode = "AcknowledgementRequired")'>
            <ns9:Element-587>
              <xsl:value-of select='string("AC")'/>
            </ns9:Element-587>
          </xsl:if>
          <!--<xsl:if test='(imp1:ProcessPurchaseOrder/DataArea/imp1:PurchaseOrder/imp1:PurchaseOrderHeader/imp1:UserArea/imp1:ActionExpression/@actionCode = "N") or (imp1:ProcessPurchaseOrder/DataArea/imp1:PurchaseOrder/imp1:PurchaseOrderHeader/imp1:UserArea/imp1:ActionExpression/@actionCode = "DoNotAcknowledge")'>-->
          <xsl:if test='(imp1:PurchaseOrderHeader/imp1:UserArea/imp1:ActionExpression/@actionCode = "N") or (imp1:PurchaseOrderHeader/imp1:UserArea/imp1:ActionExpression/@actionCode = "DoNotAcknowledge")'>
            <ns9:Element-587>
              <xsl:value-of select='string("NA")'/>
            </ns9:Element-587>
          </xsl:if>
          <!-- ADDED AS PER ROBIN'S MAIL ON 23 SEP -->
         <!-- <xsl:if test='/inp1:CustomProcessPO/ProcessPO/DataArea/imp1:Process/@acknowledgeCode = ("Y")'>
            <ns9:Element-587>
              <xsl:value-of select='string("AC")'/>
            </ns9:Element-587>
          </xsl:if>
          <xsl:if test='/inp1:CustomProcessPO/ProcessPO/DataArea/imp1:Process/@acknowledgeCode = ("N")'> 
            <ns9:Element-587>
              <xsl:value-of select='string("NA")'/>
            </ns9:Element-587>
          </xsl:if>--><!-- ADDED AS PER ROBIN'S MAIL ON 23 SEP --><!--Removed as on 3 Nov -->
        <ns9:Element-786>
          <xsl:value-of select='string("03")'/>
        </ns9:Element-786>
        <!-- ADDED AS PER ROBIN'S MAIL ON 23 SEP -->
      </ns9:Segment-BEG>
      <ns9:Segment-CUR>
        <ns9:Element-98>
          <xsl:value-of select='string("BY")'/>
        </ns9:Element-98>
        <ns9:Element-100>
          <xsl:value-of select="imp1:PurchaseOrderHeader/imp1:ExtendedAmount/@currencyID"/>
        </ns9:Element-100> 
        <!-- need to remove the following mapping once the EXTENDEDAMOUNT Issue is resolved in Flatfile --> 
       <!-- <xsl:choose>
        <xsl:when test="/inp1:CustomProcessPO/ProcessPO/imp1:ApplicationArea/imp1:Sender/imp1:LogicalID ='LIEBERTNA'"> 
        <ns9:Element-100>
          <xsl:value-of select="string('USD')"/>
        </ns9:Element-100>
        </xsl:when>
        <xsl:otherwise>
        <ns9:Element-100>
          <xsl:value-of select="imp1:PurchaseOrderHeader/imp1:ExtendedAmount/@currencyID"/>
        </ns9:Element-100>
        </xsl:otherwise>
        </xsl:choose>-->
        <!-- ADDED AS ON 23 OCT "RateNumeric CONDITION" -->   
        <xsl:if test='imp1:PurchaseOrderHeader/imp1:UserArea/imp1:CurrencyExchangeRate/imp1:RateNumeric != ""'>  
        <ns9:Element-280>
          <xsl:value-of select="imp1:PurchaseOrderHeader/imp1:UserArea/imp1:CurrencyExchangeRate/imp1:RateNumeric"/>
        </ns9:Element-280> 
        </xsl:if>
        <xsl:if test='imp1:PurchaseOrderHeader/imp1:UserArea/imp1:CurrencyExchangeRate/imp1:SetDateTime != ""'> <!-- ADDED AS ON 23 OCT -->   
        <ns9:Element-374>
          <xsl:value-of select='string("AAY")'/>
        </ns9:Element-374>
        <ns9:Element-373_1>
          <xsl:value-of select="concat(substring(imp1:PurchaseOrderHeader/imp1:UserArea/imp1:CurrencyExchangeRate/imp1:SetDateTime,1.0,4.0),substring(imp1:PurchaseOrderHeader/imp1:UserArea/imp1:CurrencyExchangeRate/imp1:SetDateTime,6.0,2.0),substring(imp1:PurchaseOrderHeader/imp1:UserArea/imp1:CurrencyExchangeRate/imp1:SetDateTime,9.0,2.0))"/>
        </ns9:Element-373_1>
        <ns9:Element-337>
          <xsl:value-of select="concat(substring(imp1:PurchaseOrderHeader/imp1:UserArea/imp1:CurrencyExchangeRate/imp1:SetDateTime,12.0,2.0),substring(imp1:PurchaseOrderHeader/imp1:UserArea/imp1:CurrencyExchangeRate/imp1:SetDateTime,15.0,2.0),substring(imp1:PurchaseOrderHeader/imp1:UserArea/imp1:CurrencyExchangeRate/imp1:SetDateTime,18.0,2.0))"/>
        </ns9:Element-337>
        </xsl:if><!-- ADDED AS ON 25 SEP -->   
      </ns9:Segment-CUR>
      
      <xsl:for-each select="/inp1:CustomProcessPO/ProcessPO/imp1:ApplicationArea/imp1:Sender">
        <ns9:Segment-REF>
          <ns9:Element-128>
            <xsl:value-of select='string("S3")'/>
          </ns9:Element-128>
          <ns9:Element-127>
            <xsl:value-of select='string("EMR850V5.1")'/> <!-- Added on 12 Sep 2009 - SC_Phase3 -->
          </ns9:Element-127>
        </ns9:Segment-REF>
      </xsl:for-each> 
      
      <!-- Removed on 09 Sep 2009 - SC_Phase3 -->
      <!-- ADDED AS ON 23 OCT " IF COMDITION ,FOR-EACH & REF" -->     
     <!--
     <xsl:for-each select="imp1:PurchaseOrderHeader">    
     <xsl:if test='imp1:DocumentID/imp1:RevisionID != ""'> 
          <ns9:Segment-REF>
            <ns9:Element-128>
              <xsl:value-of select='string("PP")'/>
            </ns9:Element-128>
            <ns9:Element-352>
              <xsl:value-of select="imp1:DocumentID/imp1:RevisionID"/>
            </ns9:Element-352>
          </ns9:Segment-REF>       
     </xsl:if> 
    </xsl:for-each>
    -->
    <!-- Removed on 09 Sep 2009 - SC_Phase3 -->
    
      <xsl:for-each select="/inp1:CustomProcessPO/ProcessPO/imp1:ApplicationArea/imp1:Sender">
      <!--<xsl:if test ='imp1:ReferenceID != ""'> --><!-- Removed as on 3 Nov -->
       <xsl:if test='imp1:AuthorizationID !=""'><!-- Changed as on 3 Nov -->
        <ns9:Segment-REF>
          <ns9:Element-128>
            <xsl:value-of select='string("06")'/>
          </ns9:Element-128>
          <ns9:Element-352>
	    <!-- <xsl:value-of select="imp1:ReferenceID"/> --><!-- Removed as on 3 Nov -->
            <xsl:value-of select="imp1:AuthorizationID"/><!-- Changed as on 3 Nov -->
          </ns9:Element-352>
        </ns9:Segment-REF>
        </xsl:if>
      </xsl:for-each>
      
      <!-- Removed on 09 Sep 2009 - SC_Phase3 -->
      <!--
      <xsl:if test='imp1:PurchaseOrderHeader/imp1:Description !=""'>
      <xsl:for-each select="imp1:PurchaseOrderHeader"> 
        <ns9:Segment-REF>
          <ns9:Element-128>
            <xsl:value-of select='string("K6")'/> 
          </ns9:Element-128>
          <ns9:Element-352>
            <xsl:value-of select="imp1:Description"/> 
          </ns9:Element-352>
        </ns9:Segment-REF>
      </xsl:for-each>
       </xsl:if>
       -->
       <!-- Removed on 09 Sep 2009 - SC_Phase3 -->
       
   <!-- ADDED AS ON 1 DEC THE FOLLOWING REF SEGMENT-->
  <!-- <xsl:for-each select="imp1:PurchaseOrderLine/imp1:PurchaseOrderSchedule/imp1:Note">-->
 <!--<xsl:if test='((imp1:PurchaseOrderLine/imp1:Note[1] !="") and (imp1:PurchaseOrderLine/imp1:Note[1]/@author = "Emerson Location Identifier"))'>
          <ns9:Segment-REF>
            <ns9:Element-128>
              <xsl:value-of select='string("4C")'/>
            </ns9:Element-128>
            <ns9:Element-127>
              <xsl:value-of select="imp1:PurchaseOrderLine/imp1:Note[1]"/>
            </ns9:Element-127>
          </ns9:Segment-REF>
    </xsl:if>
    <xsl:if test='((imp1:PurchaseOrderLine/imp1:Note[2] !="") and (imp1:PurchaseOrderLine/imp1:Note[2]/@author = "Kanban Card Number"))'>
          <ns9:Segment-REF>
            <ns9:Element-128>
              <xsl:value-of select='string("KE")'/>
            </ns9:Element-128>
            <ns9:Element-127>
              <xsl:value-of select="imp1:PurchaseOrderLine/imp1:Note[2]"/>
            </ns9:Element-127>
          </ns9:Segment-REF>
    </xsl:if>-->
 <!--</xsl:for-each>-->
 <!-- ADDED AS ON 1 DEC THE FOLLLOWING IF CONDITION -->
   <xsl:if test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:FreightTermCode != '') or (imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:PlaceOfOwnershipTransferLocation/imp1:Name !='') "> 
      <ns9:Segment-FOB>
      <!-- Updated on 09 Sep 2009 - SC_Phase3 -->
        <!-- 23 Jun 2009 - Fix for Issue 139a -->
          <xsl:choose>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:FreightTermCode = 'Prepaid')">
                <ns9:Element-146>       
                  <xsl:value-of select='string("PP")'/>
                </ns9:Element-146>
            </xsl:when>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:FreightTermCode = 'Collect')">
                <ns9:Element-146>       
                  <xsl:value-of select='string("CC")'/>
                </ns9:Element-146>
            </xsl:when>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:FreightTermCode = 'Customer Pickup')">
                <ns9:Element-146>       
                  <xsl:value-of select='string("PB")'/>
                </ns9:Element-146>
            </xsl:when>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:FreightTermCode = 'Defined by Buyer and Seller')">
                <ns9:Element-146>       
                  <xsl:value-of select='string("DF")'/>
                </ns9:Element-146>
            </xsl:when>
            <xsl:otherwise>
                <ns9:Element-146>       
                  <xsl:value-of select='string("DF")'/>
                </ns9:Element-146>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:if test="imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode != ''">
           <xsl:choose>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'INCO2000 EXW')">
                <ns9:Element-334>
                  <xsl:value-of select="string('01')"/>
                </ns9:Element-334>
                <ns9:Element-335>
                  <xsl:value-of select='string("EXW")'/>
                </ns9:Element-335>                
            </xsl:when>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'INCO2000 FCA')">
                <ns9:Element-334>
                  <xsl:value-of select="string('01')"/>
                </ns9:Element-334>
                <ns9:Element-335>
                  <xsl:value-of select='string("FCA")'/>
                </ns9:Element-335>                
            </xsl:when>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'INCO2000 CPT')">
                <ns9:Element-334>
                  <xsl:value-of select="string('01')"/>
                </ns9:Element-334>
                <ns9:Element-335>
                  <xsl:value-of select='string("CPT")'/>
                </ns9:Element-335>
            </xsl:when>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'INCO2000 CIP')">
                <ns9:Element-334>
                  <xsl:value-of select="string('01')"/>
                </ns9:Element-334>
                <ns9:Element-335>
                  <xsl:value-of select='string("CIP")'/>
                </ns9:Element-335>
            </xsl:when>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'INCO2000 DAF')">
                <ns9:Element-334>
                  <xsl:value-of select="string('01')"/>
                </ns9:Element-334>
                <ns9:Element-335>
                  <xsl:value-of select='string("DAF")'/>
                </ns9:Element-335>
            </xsl:when>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'INCO2000 DDU')">
                <ns9:Element-334>
                  <xsl:value-of select="string('01')"/>
                </ns9:Element-334>
                <ns9:Element-335>
                  <xsl:value-of select='string("DDU")'/>
                </ns9:Element-335>
            </xsl:when>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'INCO2000 DDP')">
                <ns9:Element-334>
                  <xsl:value-of select="string('01')"/>
                </ns9:Element-334>
                <ns9:Element-335>
                  <xsl:value-of select='string("DDP")'/>
                </ns9:Element-335>
            </xsl:when>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'INCO2000 FAS')">
                <ns9:Element-334>
                  <xsl:value-of select="string('01')"/>
                </ns9:Element-334>
                <ns9:Element-335>
                  <xsl:value-of select='string("FAS")'/>
                </ns9:Element-335>
            </xsl:when>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'INCO2000 FOB')">
                <ns9:Element-334>
                  <xsl:value-of select="string('01')"/>
                </ns9:Element-334>
                <ns9:Element-335>
                  <xsl:value-of select='string("FOB")'/>
                </ns9:Element-335>
            </xsl:when>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'INCO2000 CFR')">
                <ns9:Element-334>
                  <xsl:value-of select="string('01')"/>
                </ns9:Element-334>
                <ns9:Element-335>
                  <xsl:value-of select='string("CFR")'/>
                </ns9:Element-335>
            </xsl:when>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'INCO2000 CIF')">
                <ns9:Element-334>
                  <xsl:value-of select="string('01')"/>
                </ns9:Element-334>
                <ns9:Element-335>
                  <xsl:value-of select='string("CIF")'/>
                </ns9:Element-335>
            </xsl:when>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'INCO2000 DES')">
                <ns9:Element-334>
                  <xsl:value-of select="string('01')"/>
                </ns9:Element-334>
                <ns9:Element-335>
                  <xsl:value-of select='string("DES")'/>
                </ns9:Element-335>
            </xsl:when>
            <xsl:when test="(imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'INCO2000 DEQ')">
                <ns9:Element-334>
                  <xsl:value-of select="string('01')"/>
                </ns9:Element-334>
                <ns9:Element-335>
                  <xsl:value-of select='string("DEQ")'/>
                </ns9:Element-335>
            </xsl:when>
            <xsl:otherwise>
                <ns9:Element-335>
                  <xsl:value-of select='string("")'/>
                </ns9:Element-335>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:if>
        <!-- Updated on 09 Sep 2009 - SC_Phase3 -->
        
        <!-- Removed on 09 Sep 2009 - SC_Phase3 -->
        <!-- 23 Jun 2009 - Fix for Issue 139a -->
        <!--
        <xsl:if test="imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:FreightTermCode != ''">
         <ns9:Element-309>
          <xsl:value-of select='string("ZZ")'/>
        </ns9:Element-309>
        <ns9:Element-352>
          <xsl:value-of select="imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:FreightTermCode"/>
        </ns9:Element-352>
        </xsl:if>
        -->
        <!-- Removed on 09 Sep 2009 - SC_Phase3 -->
        <!--ADDED AS ON 23 OCT "LOGICALID" CONDITION -->
        <!--<xsl:if test="/inp1:CustomProcessPO/ProcessPO/imp1:ApplicationArea/imp1:Sender/imp1:LogicalID ='LIEBERTNA'">--> <!-- Removed on 12 Sep 2009 - SC_Phase3 -->
        <xsl:if test="imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:PlaceOfOwnershipTransferLocation/imp1:Name !=''">
        <ns9:Element-309_5>
          <xsl:value-of select='string("ZZ")'/>
        </ns9:Element-309_5>
        <ns9:Element-352_1>
          <xsl:value-of select="imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:PlaceOfOwnershipTransferLocation/imp1:Name"/>
        </ns9:Element-352_1>
        </xsl:if>
        <!--</xsl:if> -->
        <!-- Added on 09 Sep 2009 - SC_Phase3 -->
        <xsl:choose>
            <xsl:when test="((imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'UCC FOB ORIGIN PPD') or (imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'UCC FOB ORIGIN COL'))">                
                <ns9:Element-54>
                  <xsl:value-of select="string('BY')"/>
                </ns9:Element-54>
            </xsl:when>
            <xsl:when test="((imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'UCC FOB DEST PPD') or (imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode = 'UCC FOB DEST COL'))">                
                <ns9:Element-54>
                  <xsl:value-of select="string('SE')"/>
                </ns9:Element-54>
            </xsl:when>
            <xsl:otherwise>
                <ns9:Element-54>
                  <xsl:value-of select="string('')"/>
                </ns9:Element-54>
            </xsl:otherwise>
        </xsl:choose>
        <ns9:Element-352_2>
            <xsl:value-of select="imp1:PurchaseOrderHeader/imp1:TransportationTerm/imp1:IncotermsCode"/>
        </ns9:Element-352_2>
        <!-- Added on 09 Sep 2009 - SC_Phase3 -->
      </ns9:Segment-FOB> 
      </xsl:if>
       <!-- ADDED If as on April-24- 2009 as it was erroring out in B2B at the segment count-->
      <xsl:if test="imp1:PurchaseOrderHeader/imp1:PaymentTerm/imp1:Term/imp1:ID !=''">
      <ns9:Segment-ITD>
        <ns9:Element-352_3>
          <xsl:value-of select="imp1:PurchaseOrderHeader/imp1:PaymentTerm/imp1:Term/imp1:ID"/>
        </ns9:Element-352_3>
      </ns9:Segment-ITD>
      </xsl:if>
       <!-- ADDED If as on April-24- 2009-->
       <xsl:if test="(imp1:PurchaseOrderHeader/imp1:Note[1] != '') or (imp1:PurchaseOrderHeader/imp1:Note[2] != '') or (imp1:PurchaseOrderHeader/imp1:Description != '')">
        <ns9:Loop-N9><!-- ADDED AS ON 8 OCT "loop-n9" -->
        <ns9:Segment-N9>
          <ns9:Element-128_4>
            <xsl:value-of select='string("L1")'/>
          </ns9:Element-128_4>
          <ns9:Element-127_1>
            <xsl:value-of select='string("PO Header Instructions to Supplier")'/>
          </ns9:Element-127_1>
        </ns9:Segment-N9>   
        <!-- Added on 09 Sep 2009 - SC_Phase3 -->
        <xsl:if test='imp1:PurchaseOrderHeader/imp1:Description !=""'>
            <ns9:Segment-MTX_1>
              <ns9:Element-363_1>
                <xsl:value-of select='string("OTH")'/>
              </ns9:Element-363_1>          
                   <ns9:Element-1551_2>
                    <xsl:value-of select="normalize-space(imp1:PurchaseOrderHeader/imp1:Description)"/>
                  </ns9:Element-1551_2>          
            </ns9:Segment-MTX_1>
        </xsl:if>
       <!-- Added on 09 Sep 2009 - SC_Phase3 -->
        <xsl:if test="(imp1:PurchaseOrderHeader/imp1:Note[1] != '') or (imp1:PurchaseOrderHeader/imp1:Note[2] != '')">
        <ns9:Segment-MTX_1>
          <ns9:Element-363_1>
            <xsl:value-of select='string("OTH")'/>
          </ns9:Element-363_1>
          <xsl:if test="imp1:PurchaseOrderHeader/imp1:Note[1] != ''">
           <ns9:Element-1551_2>
            <xsl:value-of select="normalize-space(imp1:PurchaseOrderHeader/imp1:Note[1])"/>
          </ns9:Element-1551_2>
          </xsl:if>
          <xsl:if test="imp1:PurchaseOrderHeader/imp1:Note[1] = ''">
           <ns9:Element-1551_2>
            <xsl:value-of select="string('NULL')"/>
          </ns9:Element-1551_2>
          </xsl:if>
          <xsl:if test="imp1:PurchaseOrderHeader/imp1:Note[2] != ''">
          <ns9:Element-1551>
            <xsl:value-of select="normalize-space(imp1:PurchaseOrderHeader/imp1:Note[2])"/>
          </ns9:Element-1551> 
          </xsl:if>
          <xsl:if test="imp1:PurchaseOrderHeader/imp1:Note[2] = ''">
          <ns9:Element-1551>
            <xsl:value-of select="string('NULL')"/>
          </ns9:Element-1551> 
          </xsl:if>
        </ns9:Segment-MTX_1> 
         </xsl:if>
      </ns9:Loop-N9>
      </xsl:if><!-- ADDED AS ON 8 OCT "loop-n9"-->
   <!--REMOVED ON 8 OCT "LDT" -->
   <!--<ns9:Loop-LDT>
        <xsl:choose>
          <xsl:when test='imp1:PurchaseOrderHeader/imp1:Note[@index = "1"] != ""'>
            <ns9:Segment-MTX>
              <ns9:Element-363>
                <xsl:value-of select='string("OTH")'/>
              </ns9:Element-363>
              <ns9:Element-1551>
                <xsl:value-of select='imp1:PurchaseOrderHeader/imp1:Note[@index = "1"]'/>
              </ns9:Element-1551>
            </ns9:Segment-MTX>
          </xsl:when>
          <xsl:when test='imp1:PurchaseOrderHeader/imp1:Note[@index = "2"] != ""'>
            <ns9:Segment-MTX>
              <ns9:Element-363>
                <xsl:value-of select='string("OTH")'/>
              </ns9:Element-363>
              <ns9:Element-1551_1>
                <xsl:value-of select='imp1:PurchaseOrderHeader/imp1:Note[@index = "2"]'/>
              </ns9:Element-1551_1>
            </ns9:Segment-MTX>
          </xsl:when>
        </xsl:choose>
      </ns9:Loop-LDT> --><!--REMOVED ON 8 OCT --><!-- ADDED AS PER ROBIN'S MAIL ON 23 SEP -->
      <!-- SUPPLIER -->
      <xsl:for-each select="imp1:PurchaseOrderHeader/imp1:SupplierParty">
        <ns9:Loop-N1>
          <ns9:Segment-N1>
            <ns9:Element-98_3>
              <xsl:value-of select='string("VN")'/>
            </ns9:Element-98_3>
            <ns9:Element-93_1>
              <xsl:value-of select="substring(imp1:Name[1],1.0,60.0)"/>
            </ns9:Element-93_1>
            <ns9:Element-66_1>
              <xsl:value-of select='string("93")'/>
            </ns9:Element-66_1>
            <ns9:Element-67>
              <xsl:value-of select="imp1:PartyIDs/imp1:ID"/>
            </ns9:Element-67>
          </ns9:Segment-N1>
          <!--  Updated as per new mapping (Robin's email dated 21st Oct 2009) to set multiple "Name" fields from input --> 
          <!--<xsl:variable name="LENGTH_VN">  
             <xsl:value-of select="string-length(imp1:Name)"/>
          </xsl:variable>           
         <xsl:if test="$LENGTH_VN > 60.0">-->   <!-- ADDED AS ON 8 OCT-->
         <xsl:if test="imp1:Name[2] != '' or imp1:Name[3] != ''">
          <ns9:Segment-N2>
            <xsl:if test="imp1:Name[2] != ''">
                <ns9:Element-93_1>
                  <xsl:value-of select="substring(imp1:Name[2],1.0,60.0)"/>
                </ns9:Element-93_1>
            </xsl:if>
            <xsl:if test="imp1:Name[3] != ''">          
                <ns9:Element-93>
                  <xsl:value-of select="substring(imp1:Name[3],1.0,60.0)"/>
                </ns9:Element-93>
          </xsl:if>
          </ns9:Segment-N2>          
          </xsl:if>
          <xsl:if test="imp1:Name[4] != '' or imp1:Name[5] != ''">
          <ns9:Segment-N2>
            <xsl:if test="imp1:Name[4] != ''">
                <ns9:Element-93_1>
                  <xsl:value-of select="substring(imp1:Name[4],1.0,60.0)"/>
                </ns9:Element-93_1>
            </xsl:if>
            <xsl:if test="imp1:Name[5] != ''">
                <ns9:Element-93>
                  <xsl:value-of select="substring(imp1:Name[5],1.0,60.0)"/>
                </ns9:Element-93>
            </xsl:if>
          </ns9:Segment-N2>
          </xsl:if>          
          <!--  Updated as per new mapping (Robin's email dated 21st Oct 2009) to set multiple "Name" fields from input --> 
            <!--Changed  AS ON 22 APR  -->  
        <!--Changed  AS ON 19 MAR  -->  
      
          <xsl:if test='(imp1:Location/imp1:Address/imp1:LineOne!="") or (imp1:Location/imp1:Address/imp1:LineTwo != "")'>
            <ns9:Segment-N3>
            <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineOne) &lt;= 55)'>
            <ns9:Element-166>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:LineOne"/> 
            </ns9:Element-166>
            </xsl:if>
              <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineOne) &gt; 55)'>
            <ns9:Element-166>
              <xsl:value-of select="concat(substring(imp1:Location/imp1:Address/imp1:LineOne,1,54),'+')"/>
              <!--<xsl:value-of select="imp1:Location/imp1:Address/imp1:LineOne"/> -->
            </ns9:Element-166>
            </xsl:if>
             <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineTwo) &lt;= 55)'>
            <ns9:Element-166_1>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:LineTwo"/>
            </ns9:Element-166_1>
               </xsl:if>
                <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineTwo)  &gt; 55)'>
            <ns9:Element-166_1>
              <xsl:value-of select="concat(substring(imp1:Location/imp1:Address/imp1:LineTwo,1,54),'+')"/>
            </ns9:Element-166_1>
               </xsl:if>
          </ns9:Segment-N3> 
          </xsl:if>
            <!--Changed  AS ON 22 APR  -->  
 <!--Changed  AS ON 19 MAR  -->  
 <xsl:if test='(imp1:Location/imp1:Address/imp1:LineThree!="") or (imp1:Location/imp1:Address/imp1:LineFour != "")'>
            <ns9:Segment-N3>
              <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineThree) &lt;= 55)'>
            <ns9:Element-166>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:LineThree"/>
            </ns9:Element-166>
            </xsl:if>
             <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineThree) &gt; 55)'>
            <ns9:Element-166>
              <xsl:value-of select="concat(substring(imp1:Location/imp1:Address/imp1:LineThree,1,54),'+')"/>
             </ns9:Element-166>
            </xsl:if>
            <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineFour) &lt;= 55)'>
            <ns9:Element-166_1>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:LineFour"/>
            </ns9:Element-166_1>
            </xsl:if>
             <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineFour) &gt; 55)'>
            <ns9:Element-166_1>
              <xsl:value-of select="concat(substring(imp1:Location/imp1:Address/imp1:LineFour,1,54),'+')"/>
             </ns9:Element-166_1>
            </xsl:if>
          </ns9:Segment-N3> 
          </xsl:if>
         
          <!--ADDED AS ON 16 OCT -->
    
          <ns9:Segment-N4>
            <ns9:Element-19>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:CityName"/>
            </ns9:Element-19>
            <!--<xsl:if test='((imp1:Location/imp1:Address/imp1:CountryCode = "US") or (imp1:Location/imp1:Address/imp1:CountryCode ="CA"))'>
              <ns9:Element-156>
                <xsl:value-of select="imp1:Location/imp1:Address/imp1:CountrySubDivisionCode"/>
              </ns9:Element-156>
            </xsl:if>--><!-- Removed on 18 MAR-->
            
            <!-- Postal code changes as per #174 - 1Feb2010 and 4Feb2010-->
                  <xsl:choose>
                            <xsl:when test='contains(imp1:Location/imp1:Address/imp1:PostalCode,"-") and (imp1:Location/imp1:Address/imp1:PostalCode != "")'>
                            
                                <ns9:Element-116>
                                  <xsl:value-of select="translate(imp1:Location/imp1:Address/imp1:PostalCode,'-','')"/>
                                </ns9:Element-116>
                                
                            </xsl:when>
                         
                            <xsl:when test='contains(imp1:Location/imp1:Address/imp1:PostalCode," ") and (imp1:Location/imp1:Address/imp1:PostalCode != "")'>
                            
                                <ns9:Element-116>
                                  <xsl:value-of select="translate(imp1:Location/imp1:Address/imp1:PostalCode,' ','')"/>
                                </ns9:Element-116>
                                
                            </xsl:when>
                            
                             <xsl:when test='((imp1:Location/imp1:Address/imp1:PostalCode = "") and (imp1:Location/imp1:Address/imp1:CityName != ""))'>
                                <ns9:Element-116>
                                  <xsl:value-of select='string("00000")'/>
                                </ns9:Element-116>
                              </xsl:when>
                            
                            
                            <xsl:otherwise>
                                    <ns9:Element-116>
                                            <xsl:value-of select="imp1:Location/imp1:Address/imp1:PostalCode"/>
                                     </ns9:Element-116>
                            </xsl:otherwise>
                    
                    </xsl:choose>
                    
                    
                       <!-- End of Postal Code changes incorporated on 4Feb2010 -->
                
            <ns9:Element-26_1>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:CountryCode"/>
            </ns9:Element-26_1>
             <xsl:if test ="imp1:Location/imp1:ID !=''"> <!-- Added as on 3 Nov the "If" condition -->
            <ns9:Element-309_6>
              <xsl:value-of select="string(93.0)"/>
            </ns9:Element-309_6>
            <ns9:Element-310>
              <xsl:value-of select="imp1:Location/imp1:ID"/>
            </ns9:Element-310>
            </xsl:if>
           <!-- <xsl:if test='((imp1:Location/imp1:Address/imp1:CountryCode != "US") or (imp1:Location/imp1:Address/imp1:CountryCode ="CA"))'>-->
             <!-- Added choose when condition on April-24 2009 to convert contrydivision name  to  code-->
                 <xsl:if test="(imp1:Location/imp1:Address/imp1:CountrySubDivisionCode !='')">
             <xsl:choose>
              <xsl:when test="(string-length(imp1:Location/imp1:Address/imp1:CountrySubDivisionCode) &lt;= 3)">
              <ns9:Element-1715>
              <!--Changed on April-22-->
               <xsl:value-of select='orcl:lookup-dvm("Country Subdivisions","Target",imp1:Location/imp1:Address/imp1:CountrySubDivisionCode,"EDICode",imp1:Location/imp1:Address/imp1:CountrySubDivisionCode)'/>
              <!--  <xsl:value-of select="imp1:Location/imp1:Address/imp1:CountrySubDivisionCode"/> -->
              </ns9:Element-1715>
              </xsl:when>
              <xsl:when test="(string-length(imp1:Location/imp1:Address/imp1:CountrySubDivisionCode) &gt; 3)">
              <ns9:Element-1715>
               <xsl:value-of select='orcl:lookup-dvm("Country Subdivisions","Target",imp1:Location/imp1:Address/imp1:CountrySubDivisionCode,"EDICode","ZZZ")'/> 
             
              </ns9:Element-1715>
          </xsl:when>
          </xsl:choose>
          </xsl:if>
           <!-- </xsl:if>--> 
          </ns9:Segment-N4> 
          <!--ADDED AS ON 23 OCT "NAME CONDITION" -->
          <xsl:if test='((imp1:CustomerServiceContact/imp1:Name != "") or (imp1:CustomerServiceContact/imp1:Communication[3]/imp1:DialNumber != "")or(imp1:CustomerServiceContact/imp1:Communication[2]/imp1:DialNumber != "")or(imp1:CustomerServiceContact/imp1:Communication[1]/imp1:URI != ""))'>
          <!--<xsl:if test='imp1:CustomerServiceContact/imp1:Name != ""'>-->
           <ns9:Segment-PER_1>
                <ns9:Element-366_1>
                  <xsl:value-of select='string("SU")'/>
                </ns9:Element-366_1>
                <xsl:if test='imp1:CustomerServiceContact/imp1:Name != ""'>
              <ns9:Element-93>
                <xsl:value-of select="imp1:CustomerServiceContact/imp1:Name"/>
              </ns9:Element-93>
              </xsl:if>
              <xsl:if test='imp1:CustomerServiceContact/imp1:Communication[3]/imp1:DialNumber != ""'>
                <ns9:Element-365_3>
                  <xsl:value-of select='string("TE")'/>
                </ns9:Element-365_3>
              <ns9:Element-364>
                <xsl:value-of select="imp1:CustomerServiceContact/imp1:Communication[3]/imp1:DialNumber"/>
              </ns9:Element-364>
               </xsl:if>
              <xsl:if test='imp1:CustomerServiceContact/imp1:Communication[2]/imp1:DialNumber != ""'>
                <ns9:Element-365_4>
                  <xsl:value-of select='string("FX")'/>
                </ns9:Element-365_4>
              <ns9:Element-364_1>
                <xsl:value-of select="imp1:CustomerServiceContact/imp1:Communication[2]/imp1:DialNumber"/>
              </ns9:Element-364_1>
              </xsl:if>
              <xsl:if test='imp1:CustomerServiceContact/imp1:Communication[1]/imp1:URI != ""'>
              <ns9:Element-365_5>
                <xsl:value-of select='string("EM")'/>
              </ns9:Element-365_5>
              <ns9:Element-364_2>
                <xsl:value-of select="imp1:CustomerServiceContact/imp1:Communication[1]/imp1:URI"/>
              </ns9:Element-364_2>
              </xsl:if>
            </ns9:Segment-PER_1>  
          </xsl:if>
        </ns9:Loop-N1>
      </xsl:for-each>
      <!-- SOLDTO -->
      <xsl:for-each select="imp1:PurchaseOrderHeader/imp1:BuyerParty">
        <xsl:if test='concat(@category,"BuyerParty")'>
          <ns9:Loop-N1>
            <xsl:if test="imp1:Name[1] != ''">
            <ns9:Segment-N1>
              <ns9:Element-98_3>
                <xsl:value-of select='string("SO")'/>
              </ns9:Element-98_3>
              <ns9:Element-93_1>
                <xsl:value-of select="substring(imp1:Name[1],1.0,60.0)"/>
              </ns9:Element-93_1>
            </ns9:Segment-N1>
           </xsl:if>
           <!--  Updated as per new mapping (Robin's email dated 21st Oct 2009) to set multiple "Name" fields from input --> 
          <!--<xsl:variable name="LENGTH_SO">  
                 <xsl:value-of select="string-length(imp1:Name)"/>
            </xsl:variable> 
            <xsl:if test="$LENGTH_SO > 60.0">-->   <!-- ADDED AS ON 8 OCT-->
         <xsl:if test="imp1:Name[2] != '' or imp1:Name[3] != ''">
          <ns9:Segment-N2>
            <xsl:if test="imp1:Name[2] != ''">
                <ns9:Element-93_1>
                  <xsl:value-of select="substring(imp1:Name[2],1.0,60.0)"/>
                </ns9:Element-93_1>
            </xsl:if>
            <xsl:if test="imp1:Name[3] != ''">          
                <ns9:Element-93>
                  <xsl:value-of select="substring(imp1:Name[3],1.0,60.0)"/>
                </ns9:Element-93>
          </xsl:if>
          </ns9:Segment-N2>          
          </xsl:if>
          <xsl:if test="imp1:Name[4] != '' or imp1:Name[5] != ''">
          <ns9:Segment-N2>
            <xsl:if test="imp1:Name[4] != ''">
                <ns9:Element-93_1>
                  <xsl:value-of select="substring(imp1:Name[4],1.0,60.0)"/>
                </ns9:Element-93_1>
            </xsl:if>
            <xsl:if test="imp1:Name[5] != ''">
                <ns9:Element-93>
                  <xsl:value-of select="substring(imp1:Name[5],1.0,60.0)"/>
                </ns9:Element-93>
            </xsl:if>
          </ns9:Segment-N2>
          </xsl:if>          
          <!--  Updated as per new mapping (Robin's email dated 21st Oct 2009) to set multiple "Name" fields from input -->             
            <!--Changed  AS ON 22 APR-->  <!--Changed  AS ON 19 MAR  -->  
           <xsl:if test='(imp1:Location/imp1:Address/imp1:LineOne!="") or (imp1:Location/imp1:Address/imp1:LineTwo != "")'>
            <ns9:Segment-N3>
            <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineOne) &lt;= 55)'>
            <ns9:Element-166>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:LineOne"/> 
            </ns9:Element-166>
            </xsl:if>
              <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineOne) &gt; 55)'>
            <ns9:Element-166>
              <xsl:value-of select="concat(substring(imp1:Location/imp1:Address/imp1:LineOne,1,54),'+')"/>
              <!--<xsl:value-of select="imp1:Location/imp1:Address/imp1:LineOne"/> -->
            </ns9:Element-166>
            </xsl:if>
             <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineTwo) &lt;= 55)'>
            <ns9:Element-166_1>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:LineTwo"/>
            </ns9:Element-166_1>
               </xsl:if>
                <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineTwo)  &gt; 55)'>
            <ns9:Element-166_1>
              <xsl:value-of select="concat(substring(imp1:Location/imp1:Address/imp1:LineTwo,1,54),'+')"/>
            </ns9:Element-166_1>
               </xsl:if>
          </ns9:Segment-N3> 
       
          </xsl:if>
  <!--Changed  AS ON 22 APR-->  <!--Changed  AS ON 19 MAR  -->  
 <xsl:if test='(imp1:Location/imp1:Address/imp1:LineThree!="") or (imp1:Location/imp1:Address/imp1:LineFour != "")'>
            <ns9:Segment-N3>
              <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineThree) &lt;= 55)'>
            <ns9:Element-166>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:LineThree"/>
            </ns9:Element-166>
            </xsl:if>
             <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineThree) &gt; 55)'>
            <ns9:Element-166>
              <xsl:value-of select="concat(substring(imp1:Location/imp1:Address/imp1:LineThree,1,54),'+')"/>
             </ns9:Element-166>
            </xsl:if>
            <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineFour) &lt;= 55)'>
            <ns9:Element-166_1>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:LineFour"/>
            </ns9:Element-166_1>
            </xsl:if>
             <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineFour) &gt; 55)'>
            <ns9:Element-166>
              <xsl:value-of select="concat(substring(imp1:Location/imp1:Address/imp1:LineFour,1,54),'+')"/>
             </ns9:Element-166>
            </xsl:if>
          </ns9:Segment-N3> 
          </xsl:if>
          <xsl:if test='(imp1:Location/imp1:Address/imp1:CityName != "") or (imp1:Location/imp1:Address/imp1:PostalCode != "") or (imp1:Location/imp1:Address/imp1:CountryCode != "") or (imp1:Location/imp1:Address/imp1:CountrySubDivisionCode != "")'>
            <ns9:Segment-N4>
              <ns9:Element-19>
                <xsl:value-of select="imp1:Location/imp1:Address/imp1:CityName"/>
              </ns9:Element-19>
              <!--<xsl:if test='(imp1:Location/imp1:Address/imp1:CountryCode = "US") or (imp1:Location/imp1:Address/imp1:CountryCode="CA")'>
                <ns9:Element-156>
                  <xsl:value-of select="imp1:Location/imp1:Address/imp1:CountrySubDivisionCode"/>
                </ns9:Element-156>
              </xsl:if>--><!-- Removed on 18 MAR-->
           
           
            <!-- Commented on 01Feb2010 
              <ns9:Element-116>
                <xsl:value-of select="imp1:Location/imp1:Address/imp1:PostalCode"/>
              </ns9:Element-116>
              -->
              
              
               <!-- Postal code changes as per #174 - 1Feb2010 and 04Feb2010-->
              <xsl:choose>
                            <xsl:when test='contains(imp1:Location/imp1:Address/imp1:PostalCode,"-") and (imp1:Location/imp1:Address/imp1:PostalCode != "")'>
                            
                                <ns9:Element-116>
                                  <xsl:value-of select="translate(imp1:Location/imp1:Address/imp1:PostalCode,'-','')"/>
                                </ns9:Element-116>
                                
                            </xsl:when>
                         
                            <xsl:when test='contains(imp1:Location/imp1:Address/imp1:PostalCode," ") and (imp1:Location/imp1:Address/imp1:PostalCode != "")'>
                            
                                <ns9:Element-116>
                                  <xsl:value-of select="translate(imp1:Location/imp1:Address/imp1:PostalCode,' ','')"/>
                                </ns9:Element-116>
                                
                            </xsl:when>
                            
                             <xsl:when test='((imp1:Location/imp1:Address/imp1:PostalCode = "") and (imp1:Location/imp1:Address/imp1:CityName != ""))'>
                                <ns9:Element-116>
                                  <xsl:value-of select='string("00000")'/>
                                </ns9:Element-116>
                              </xsl:when>
                            
                            
                            <xsl:otherwise>
                                    <ns9:Element-116>
                                            <xsl:value-of select="imp1:Location/imp1:Address/imp1:PostalCode"/>
                                     </ns9:Element-116>
                            </xsl:otherwise>
                    
                    </xsl:choose>
              
                 <!-- End of Postal Code changes incorporated on 4Feb2010 -->
              
              
              
              
              
              
              
              <ns9:Element-26_1>
                <xsl:value-of select="imp1:Location/imp1:Address/imp1:CountryCode"/>
              </ns9:Element-26_1>
              <xsl:if test ="imp1:Location/imp1:ID !=''"> <!-- Added as on 3 Nov the "If" condition -->
              <ns9:Element-309_6>
                <xsl:value-of select="string(93.0)"/>
              </ns9:Element-309_6>
              <ns9:Element-310>
                <xsl:value-of select="imp1:Location/imp1:ID"/>
              </ns9:Element-310>
              </xsl:if>
             <!-- <xsl:if test='(imp1:Location/imp1:Address/imp1:CountryCode != "US") or (imp1:Location/imp1:Address/imp1:CountryCode !="CA")'>-->
                <!-- Changed as on 22-APR-->
                 <!-- Added choose when condition on April-24 2009 to convert contrydivision name  to  code-->
             <xsl:if test="(imp1:Location/imp1:Address/imp1:CountrySubDivisionCode !='')">
             <xsl:choose>
              <xsl:when test="(string-length(imp1:Location/imp1:Address/imp1:CountrySubDivisionCode) &lt;= 3)">
              <ns9:Element-1715>
              <!--Changed on April-22-->
               <xsl:value-of select='orcl:lookup-dvm("Country Subdivisions","Target",imp1:Location/imp1:Address/imp1:CountrySubDivisionCode,"EDICode",imp1:Location/imp1:Address/imp1:CountrySubDivisionCode)'/>
              <!--  <xsl:value-of select="imp1:Location/imp1:Address/imp1:CountrySubDivisionCode"/> -->
              </ns9:Element-1715>
              </xsl:when>
              <xsl:when test="(string-length(imp1:Location/imp1:Address/imp1:CountrySubDivisionCode) &gt; 3)">
              <ns9:Element-1715>
               <xsl:value-of select='orcl:lookup-dvm("Country Subdivisions","Target",imp1:Location/imp1:Address/imp1:CountrySubDivisionCode,"EDICode","ZZZ")'/> 
             
              </ns9:Element-1715>
          </xsl:when>
          </xsl:choose>
          </xsl:if>
              <!--</xsl:if>-->
            </ns9:Segment-N4>
            </xsl:if>
          </ns9:Loop-N1>
        </xsl:if>
      </xsl:for-each>
      
     <!-- BILLTO --> 
      <xsl:for-each select="imp1:PurchaseOrderHeader/imp1:BillToParty">
        <ns9:Loop-N1>
        <xsl:if test="imp1:Name[1] != ''">
          <ns9:Segment-N1>
            <ns9:Element-98_3>
              <xsl:value-of select='string("BT")'/>
            </ns9:Element-98_3>
            <ns9:Element-93_1>
              <xsl:value-of select="substring(imp1:Name[1],1.0,60.0)"/>
            </ns9:Element-93_1>
          </ns9:Segment-N1>
        </xsl:if>
        <!--  Updated as per new mapping (Robin's email dated 21st Oct 2009) to set multiple "Name" fields from input --> 
          <!--<xsl:variable name="LENGTH_BT">  
                 <xsl:value-of select="string-length(imp1:Name)"/>
            </xsl:variable> 
            <xsl:if test="$LENGTH_BT > 60.0">-->   <!-- ADDED AS ON 8 OCT-->
         <xsl:if test="imp1:Name[2] != '' or imp1:Name[3] != ''">
          <ns9:Segment-N2>
            <xsl:if test="imp1:Name[2] != ''">
                <ns9:Element-93_1>
                  <xsl:value-of select="substring(imp1:Name[2],1.0,60.0)"/>
                </ns9:Element-93_1>
            </xsl:if>
            <xsl:if test="imp1:Name[3] != ''">          
                <ns9:Element-93>
                  <xsl:value-of select="substring(imp1:Name[3],1.0,60.0)"/>
                </ns9:Element-93>
          </xsl:if>
          </ns9:Segment-N2>          
          </xsl:if>
          <xsl:if test="imp1:Name[4] != '' or imp1:Name[5] != ''">
          <ns9:Segment-N2>
            <xsl:if test="imp1:Name[4] != ''">
                <ns9:Element-93_1>
                  <xsl:value-of select="substring(imp1:Name[4],1.0,60.0)"/>
                </ns9:Element-93_1>
            </xsl:if>
            <xsl:if test="imp1:Name[5] != ''">
                <ns9:Element-93>
                  <xsl:value-of select="substring(imp1:Name[5],1.0,60.0)"/>
                </ns9:Element-93>
            </xsl:if>
          </ns9:Segment-N2>
          </xsl:if>          
          <!--  Updated as per new mapping (Robin's email dated 21st Oct 2009) to set multiple "Name" fields from input -->             
           <!--Changed  AS ON 22-APR -->  
          <!--changed as on 19-Mar-->
        <xsl:if test='(imp1:Location/imp1:Address/imp1:LineOne!="") or (imp1:Location/imp1:Address/imp1:LineTwo != "")'>
            <ns9:Segment-N3>
            <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineOne) &lt;= 55)'>
            <ns9:Element-166>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:LineOne"/> 
            </ns9:Element-166>
            </xsl:if>
              <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineOne) &gt; 55)'>
            <ns9:Element-166>
              <xsl:value-of select="concat(substring(imp1:Location/imp1:Address/imp1:LineOne,1,54),'+')"/>
              <!--<xsl:value-of select="imp1:Location/imp1:Address/imp1:LineOne"/> -->
            </ns9:Element-166>
            </xsl:if>
             <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineTwo) &lt;= 55)'>
            <ns9:Element-166_1>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:LineTwo"/>
            </ns9:Element-166_1>
               </xsl:if>
                <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineTwo)  &gt; 55)'>
            <ns9:Element-166_1>
              <xsl:value-of select="concat(substring(imp1:Location/imp1:Address/imp1:LineTwo,1,54),'+')"/>
            </ns9:Element-166_1>
               </xsl:if>
          </ns9:Segment-N3> 
       
          </xsl:if>
           <!--Changed  AS ON 22-APR -->  
 <!--Changed  AS ON 19 MAR  -->  
 <xsl:if test='(imp1:Location/imp1:Address/imp1:LineThree!="") or (imp1:Location/imp1:Address/imp1:LineFour != "")'>
            <ns9:Segment-N3>
              <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineThree) &lt;= 55)'>
            <ns9:Element-166>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:LineThree"/>
            </ns9:Element-166>
            </xsl:if>
             <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineThree) &gt; 55)'>
            <ns9:Element-166>
              <xsl:value-of select="concat(substring(imp1:Location/imp1:Address/imp1:LineThree,1,54),'+')"/>
             </ns9:Element-166>
            </xsl:if>
            <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineFour) &lt;= 55)'>
            <ns9:Element-166_1>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:LineFour"/>
            </ns9:Element-166_1>
            </xsl:if>
             <xsl:if test='(string-length(imp1:Location/imp1:Address/imp1:LineFour) &gt; 55)'>
            <ns9:Element-166>
              <xsl:value-of select="concat(substring(imp1:Location/imp1:Address/imp1:LineFour,1,54),'+')"/>
             </ns9:Element-166>
            </xsl:if>
          </ns9:Segment-N3> 
          </xsl:if>
          <xsl:if test='(imp1:Location/imp1:Address/imp1:CityName != "") or (imp1:Location/imp1:Address/imp1:PostalCode != "") or (imp1:Location/imp1:Address/imp1:CountryCode != "") or (imp1:Location/imp1:Address/imp1:CountrySubDivisionCode != "")'>
          <ns9:Segment-N4>
            <ns9:Element-19>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:CityName"/>
            </ns9:Element-19>
           <!-- <xsl:if test='((imp1:Location/imp1:Address/imp1:CountryCode = "US") or (imp1:Location/imp1:Address/imp1:CountryCode ="CA"))'>
              <ns9:Element-156>
                <xsl:value-of select="imp1:Location/imp1:Address/imp1:CountrySubDivisionCode"/>
              </ns9:Element-156>
            </xsl:if>--><!-- Removed on 18 MAR-->
            
            
            <!-- Commented on 1Feb2010
            <ns9:Element-116>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:PostalCode"/>
            </ns9:Element-116>
            -->
            
            <!-- Postal code changes as per #174 - 1Feb2010 and 4Feb2010-->
            
            
                <xsl:choose>
                            <xsl:when test='contains(imp1:Location/imp1:Address/imp1:PostalCode,"-") and (imp1:Location/imp1:Address/imp1:PostalCode != "")'>
                            
                                <ns9:Element-116>
                                  <xsl:value-of select="translate(imp1:Location/imp1:Address/imp1:PostalCode,'-','')"/>
                                </ns9:Element-116>
                                
                            </xsl:when>
                         
                            <xsl:when test='contains(imp1:Location/imp1:Address/imp1:PostalCode," ") and (imp1:Location/imp1:Address/imp1:PostalCode != "")'>
                            
                                <ns9:Element-116>
                                  <xsl:value-of select="translate(imp1:Location/imp1:Address/imp1:PostalCode,' ','')"/>
                                </ns9:Element-116>
                                
                            </xsl:when>
                            
                             <xsl:when test='((imp1:Location/imp1:Address/imp1:PostalCode = "") and (imp1:Location/imp1:Address/imp1:CityName != ""))'>
                                <ns9:Element-116>
                                  <xsl:value-of select='string("00000")'/>
                                </ns9:Element-116>
                              </xsl:when>
                            
                            
                            <xsl:otherwise>
                                    <ns9:Element-116>
                                            <xsl:value-of select="imp1:Location/imp1:Address/imp1:PostalCode"/>
                                     </ns9:Element-116>
                            </xsl:otherwise>
                    
                    </xsl:choose>
                    
                    
                       <!-- End of Postal Code changes incorporated on 4Feb2010 -->
                    
                    
                    
            <ns9:Element-26_1>
              <xsl:value-of select="imp1:Location/imp1:Address/imp1:CountryCode"/>
            </ns9:Element-26_1>
            <xsl:if test ="imp1:Location/imp1:ID !=''"> <!-- Added as on 3 Nov the "If" condition -->
            <ns9:Element-309_6>
              <xsl:value-of select='string("93")'/>
            </ns9:Element-309_6>
            <ns9:Element-310>
              <xsl:value-of select="imp1:Location/imp1:ID"/>
            </ns9:Element-310>
            </xsl:if>
            <!--<xsl:if test='((imp1:Location/imp1:Address/imp1:CountryCode != "US") and (imp1:Location/imp1:Address/imp1:CountryCode !="CA"))'>-->
               <!-- Changed as on 22-APR-->
              <!-- Added choose when condition on April-24 2009 to convert contrydivision name  to  code-->
               <xsl:if test="(imp1:Location/imp1:Address/imp1:CountrySubDivisionCode !='')">
             <xsl:choose>
              <xsl:when test="(string-length(imp1:Location/imp1:Address/imp1:CountrySubDivisionCode) &lt;= 3)">
              <ns9:Element-1715>
              <!--Changed on April-22-->
               <xsl:value-of select='orcl:lookup-dvm("Country Subdivisions","Target",imp1:Location/imp1:Address/imp1:CountrySubDivisionCode,"EDICode",imp1:Location/imp1:Address/imp1:CountrySubDivisionCode)'/>
              <!--  <xsl:value-of select="imp1:Location/imp1:Address/imp1:CountrySubDivisionCode"/> -->
              </ns9:Element-1715>
              </xsl:when>
              <xsl:when test="(string-length(imp1:Location/imp1:Address/imp1:CountrySubDivisionCode) &gt; 3)">
              <ns9:Element-1715>
               <xsl:value-of select='orcl:lookup-dvm("Country Subdivisions","Target",imp1:Location/imp1:Address/imp1:CountrySubDivisionCode,"EDICode","ZZZ")'/> 
             
              </ns9:Element-1715>
          </xsl:when>
          </xsl:choose>
            </xsl:if>
          </ns9:Segment-N4> 
          </xsl:if>
          <xsl:if test='((imp1:BuyerContact/imp1:Name !="") or (imp1:BuyerContact/imp1:Communication[3]/imp1:DialNumber != "") or (imp1:BuyerContact/imp1:Communication[2]/imp1:DialNumber != "") or (imp1:BuyerContact/imp1:Communication[1]/imp1:URI != ""))'><!-- ADDED AS ON 4 DEC "NAME CONDITION" -->
           <ns9:Segment-PER_1><!-- ADDED AS ON 25 SEP -->
              
                <ns9:Element-366_1>
                  <xsl:value-of select='string("BD")'/>
                </ns9:Element-366_1>
                <xsl:if test='imp1:BuyerContact/imp1:Name !=""'>
              <ns9:Element-93>
                <xsl:value-of select="imp1:BuyerContact/imp1:Name"/>
              </ns9:Element-93>
              </xsl:if>  
              
             <xsl:if test='imp1:BuyerContact/imp1:Communication[3]/imp1:DialNumber != ""'>
                <ns9:Element-365_3>
                  <xsl:value-of select='string("TE")'/>
                </ns9:Element-365_3>
              <ns9:Element-364>
                <xsl:value-of select="imp1:BuyerContact/imp1:Communication[3]/imp1:DialNumber"/>
              </ns9:Element-364>
               </xsl:if>   
               
               <xsl:if test='imp1:BuyerContact/imp1:Communication[2]/imp1:DialNumber != ""'>
                <ns9:Element-365_4>
                  <xsl:value-of select='string("FX")'/>
                </ns9:Element-365_4>
              <ns9:Element-364_1>
                <xsl:value-of select="imp1:BuyerContact/imp1:Communication[2]/imp1:DialNumber"/>
              </ns9:Element-364_1>
               </xsl:if>    
               
             <xsl:if test='imp1:BuyerContact/imp1:Communication[1]/imp1:URI != ""'>
                <ns9:Element-365_5>
                  <xsl:value-of select='string("EM")'/>
                </ns9:Element-365_5>
                <ns9:Element-364_2>
                  <xsl:value-of select="imp1:BuyerContact/imp1:Communication[1]/imp1:URI"/>
                </ns9:Element-364_2>
             </xsl:if> <!-- ADDED AS ON 25 SEP -->
             
           </ns9:Segment-PER_1>
           </xsl:if>
        </ns9:Loop-N1>
      </xsl:for-each>
      
      <!--CARRIERPARTY-->
      <xsl:if test='imp1:PurchaseOrderHeader/imp1:CarrierParty/imp1:Name != ""'>
      <xsl:for-each select="imp1:PurchaseOrderHeader/imp1:CarrierParty">
        <ns9:Loop-N1>
        <xsl:if test="imp1:Name[1] != ''">
          <ns9:Segment-N1>
            <ns9:Element-98_3>
              <xsl:value-of select='string("CA")'/>
            </ns9:Element-98_3>
            <ns9:Element-93_1>
              <xsl:value-of select="substring(imp1:Name[1],1.0,60.0)"/>
            </ns9:Element-93_1>
          </ns9:Segment-N1>
          </xsl:if>
          <!--  Updated as per new mapping (Robin's email dated 21st Oct 2009) to set multiple "Name" fields from input --> 
          <!--<xsl:variable name="LENGTH_CA">  
                 <xsl:value-of select="string-length(imp1:Name)"/>
            </xsl:variable> 
            <xsl:if test="$LENGTH_CA > 60.0">-->   <!-- ADDED AS ON 8 OCT-->
         <xsl:if test="imp1:Name[2] != '' or imp1:Name[3] != ''">
          <ns9:Segment-N2>
            <xsl:if test="imp1:Name[2] != ''">
                <ns9:Element-93_1>
                  <xsl:value-of select="substring(imp1:Name[2],1.0,60.0)"/>
                </ns9:Element-93_1>
            </xsl:if>
            <xsl:if test="imp1:Name[3] != ''">          
                <ns9:Element-93>
                  <xsl:value-of select="substring(imp1:Name[3],1.0,60.0)"/>
                </ns9:Element-93>
          </xsl:if>
          </ns9:Segment-N2>          
          </xsl:if>
          <xsl:if test="imp1:Name[4] != '' or imp1:Name[5] != ''">
          <ns9:Segment-N2>
            <xsl:if test="imp1:Name[4] != ''">
                <ns9:Element-93_1>
                  <xsl:value-of select="substring(imp1:Name[4],1.0,60.0)"/>
                </ns9:Element-93_1>
            </xsl:if>
            <xsl:if test="imp1:Name[5] != ''">
                <ns9:Element-93>
                  <xsl:value-of select="substring(imp1:Name[5],1.0,60.0)"/>
                </ns9:Element-93>
            </xsl:if>
          </ns9:Segment-N2>
          </xsl:if>          
          <!--  Updated as per new mapping (Robin's email dated 21st Oct 2009) to set multiple "Name" fields from input --> 
        </ns9:Loop-N1>
      </xsl:for-each>
      </xsl:if>
      
      <ns9:Loop-PO1>
        <xsl:for-each select="/inp1:CustomProcessPO/ProcessPO/DataArea/imp1:PurchaseOrder/imp1:PurchaseOrderLine">
          <ns9:Segment-PO1>
            <ns9:Element-350_1>
              <xsl:value-of select="imp1:LineNumber"/>
            </ns9:Element-350_1>
            <ns9:Element-380_2>
              <xsl:value-of select="imp1:Quantity"/>
            </ns9:Element-380_2>
            <xsl:if test="imp1:Quantity/@unitCode !=''">
            <ns9:Element-355>
              <!--<xsl:value-of select="imp1:Quantity/@unitCode"/>-->
              <xsl:value-of select='orcl:lookup-dvm("UnitOfMeasure","Target",imp1:Quantity/@unitCode,"EDI",imp1:Quantity/@unitCode)'/>
            </ns9:Element-355>
            </xsl:if>
            <xsl:if test="imp1:Quantity/@unitCode =''">
            <ns9:Element-355>
              <xsl:value-of select="imp1:Quantity/@unitCode"/>
            </ns9:Element-355>
            </xsl:if>
            <!-- <ns9:Element-355_1>
              <xsl:value-of select="imp1:Item/imp1:Packaging/imp1:ID"/>
            </ns9:Element-355_1> -->
            <!-- removed as per robin's mail on 23 Sep -->
            <!--<ns9:Element-212>
              <xsl:value-of select="imp1:UnitPrice/imp1:Amount"/>
            </ns9:Element-212>-->
             <xsl:variable name="amount">  
                <xsl:value-of select="string(number(imp1:UnitPrice/imp1:Amount))"/>
            </xsl:variable> 
            <xsl:choose>
              <xsl:when test="(imp1:UnitPrice/imp1:Amount = '') or ceiling(imp1:UnitPrice/imp1:Amount) = 0">
                  <ns9:Element-212_1>
                     <xsl:value-of select="string('0')"/>
                  </ns9:Element-212_1>
              </xsl:when>
              <xsl:when test="starts-with($amount,'0')">
                  <ns9:Element-212_1>
                     <xsl:value-of select="substring-after($amount,'0')"/>
                  </ns9:Element-212_1>
              </xsl:when>
              <xsl:otherwise>
                   <ns9:Element-212_1>
                     <xsl:value-of select="$amount"/>
                   </ns9:Element-212_1>
              </xsl:otherwise>
            </xsl:choose>
            
            <!-- Added on 09 Sep 2009 - SC_Phase3 -->
            <ns9:Element-639_1>
                 <xsl:value-of select='orcl:lookup-dvm("Price_UnitOfMeasure","UOM",imp1:UnitPrice/imp1:PerQuantity/@unitCode,"EDI_Out",string("UM"))'/>
            </ns9:Element-639_1>
            <!-- Added on 09 Sep 2009 - SC_Phase3 -->
            
            <xsl:if test="imp1:Item/imp1:ItemID/imp1:ID !=''"><!--ADDED AS ON 09 FEB 2009 -->
            <ns9:Element-235_15>
              <xsl:value-of select='string("SW")'/>
            </ns9:Element-235_15>
            <ns9:Element-234_1>
              <xsl:value-of select="imp1:Item/imp1:ItemID/imp1:ID"/>
            </ns9:Element-234_1>
            </xsl:if>
            <xsl:if test='imp1:Item/imp1:SupplierItemID/imp1:ID != ""'> <!--ADDED AS ON 25 SEP -->
            <ns9:Element-235_16>
              <xsl:value-of select='string("VX")'/>
            </ns9:Element-235_16>
            <ns9:Element-234_2>
              <xsl:value-of select="imp1:Item/imp1:SupplierItemID/imp1:ID"/>
            </ns9:Element-234_2>
            </xsl:if>
            <xsl:if test='imp1:Item/imp1:ItemID/imp1:RevisionID != ""'>  <!--ADDED AS ON 25 SEP -->
            <ns9:Element-235_17>
              <xsl:value-of select='string("BE")'/>
            </ns9:Element-235_17>
            <ns9:Element-234_3>
              <xsl:value-of select="imp1:Item/imp1:ItemID/imp1:RevisionID"/>
            </ns9:Element-234_3>
            </xsl:if>
          </ns9:Segment-PO1>   
          
        <xsl:variable name="Desc_Len_Var">  
                <xsl:value-of select="string-length(imp1:Item/imp1:Description)"/>
              </xsl:variable>
               <xsl:variable name="Desc_Var">  
                <xsl:value-of select="imp1:Item/imp1:Description"/>
              </xsl:variable>
              <xsl:variable name="No_of_loops">  
                <xsl:value-of select="ceiling($Desc_Len_Var div '80')"/>
              </xsl:variable>
              
              <!-- 02 Oct 2009 SC_Phase3 - Updated to have "for" loop for Segment-PID (and not Loop-PID). 
                                Also moved MEA segment within Loop-PID -->
              <ns9:Loop-PID>
                    <xsl:for-each select="(//node())[position() &lt;= $No_of_loops]">
                      <xsl:variable name="Position">  
                        <xsl:value-of select="position()"/>
                      </xsl:variable>
                       <xsl:variable name="Var3">
                        <xsl:value-of select="substring($Desc_Var,(($Position * 80) - 79),80)"/>
                      </xsl:variable>
                        <ns9:Segment-PID_1>
                          <ns9:Element-349_2>
                            <xsl:value-of select='string("F")'/>
                          </ns9:Element-349_2>
                          <ns9:Element-352_3>
                            <!--<xsl:value-of select="imp1:Item/imp1:Description"/>-->
                            <xsl:value-of select="$Var3"/>
                          </ns9:Element-352_3>
                        </ns9:Segment-PID_1>
                    </xsl:for-each>
                    <xsl:if test="imp1:Item/imp1:Specification/imp1:Property/imp1:NameValue != ''">
                        <ns9:Segment-MEA_1>
                          <ns9:Element-737_1>
                            <xsl:value-of select='string("WT")'/>
                          </ns9:Element-737_1>
                          <ns9:Element-738_1>
                            <xsl:value-of select='string("U")'/>
                          </ns9:Element-738_1>
                          <ns9:Element-739_1>
                            <xsl:value-of select="imp1:Item/imp1:Specification/imp1:Property/imp1:NameValue"/>
                          </ns9:Element-739_1>
                          <ns9:Composite-C001_1>
                            <ns9:Element-355>
                              <xsl:value-of select="imp1:Item/imp1:Specification/imp1:Property/imp1:NameValue/@unitCode"/>
                            </ns9:Element-355>
                          </ns9:Composite-C001_1>
                        </ns9:Segment-MEA_1> 
                    </xsl:if>
                  </ns9:Loop-PID>   
                  <!-- 02 Oct 2009 SC_Phase3 -->
        
        <xsl:if test='(imp1:Item/imp1:Classification/imp1:Codes/imp1:Code[1] != "") and (imp1:Item/imp1:Classification/imp1:Codes/imp1:Code[1]/@name = "HTS Code")'>
        <ns9:Segment-TC2_1>    
            <ns9:Element-23_2>
              <xsl:value-of select='string("A")'/>
            </ns9:Element-23_2>
            <ns9:Element-22>
              <xsl:value-of select='imp1:Item/imp1:Classification/imp1:Codes/imp1:Code[1]'/>
            </ns9:Element-22>
         </ns9:Segment-TC2_1>
         </xsl:if>
         
        <xsl:if test='(imp1:Item/imp1:Classification/imp1:Codes/imp1:Code[2] != "") and (imp1:Item/imp1:Classification/imp1:Codes/imp1:Code[2]/@name = "Emerson Commodity Code")'>
        <ns9:Segment-TC2_1>    
            <ns9:Element-23_2>
              <xsl:value-of select='string("Z")'/>
            </ns9:Element-23_2>
            <ns9:Element-22>
              <xsl:value-of select='imp1:Item/imp1:Classification/imp1:Codes/imp1:Code[2]'/>
            </ns9:Element-22>
        </ns9:Segment-TC2_1>
        </xsl:if> 
        
        
        <xsl:if test='imp1:Item/imp1:HazardousMaterial/imp1:ID != ""'>
        <ns9:Segment-TD4_1>
            <ns9:Element-152_1>
              <xsl:value-of select='string("HAZ")'/>
            </ns9:Element-152_1>
            <ns9:Element-352_3>
              <xsl:value-of select="imp1:Item/imp1:HazardousMaterial/imp1:ID"/>
            </ns9:Element-352_3>
           </ns9:Segment-TD4_1>
            </xsl:if>
 
         <!-- ADDED If as on April-24- 2009-->
        <xsl:if test='imp1:Note != ""'> 
        <!--<ns9:Loop-LDT>--> <!-- Removed Loop-LDT and updated Segment-MTX to use value within Loop-PO1 18-Sep SC_Phase3 -->                
                     <ns9:Segment-MTX_2>
                        <ns9:Element-363_2>
                            <xsl:value-of select='string("ORI")'/>
                        </ns9:Element-363_2>
                        <xsl:if test='imp1:Note[1] != ""'>
                        <ns9:Element-1551_2>
                             <xsl:value-of select='imp1:Note[1]'/>
                        </ns9:Element-1551_2>
                        </xsl:if>
                        <xsl:if test='imp1:Note[2] != ""'>
                        <ns9:Element-1551>
                            <xsl:value-of select='imp1:Note[2]'/>
                        </ns9:Element-1551>
                        </xsl:if>
                    </ns9:Segment-MTX_2>
        <!--</ns9:Loop-LDT>--> <!-- Removed Loop-LDT and updated Segment-MTX to use value within Loop-PO1 18-Sep SC_Phase3 -->
        </xsl:if>
         <!-- Added on 09 Sep 2009 - SC_Phase3 -->
        <ns9:Segment-TXI_1>
          <ns9:Element-963_1>
            <xsl:value-of select='string("ZZ")'/>
          </ns9:Element-963_1>
              <xsl:choose>                
                <xsl:when test="imp1:UserArea/imp1:Note = 'Y'">
                  <ns9:Element-441_1>
                    <xsl:value-of select='string("2")'/>
                  </ns9:Element-441_1>
                </xsl:when>
                <xsl:otherwise>
                  <ns9:Element-441_1>
                    <xsl:value-of select='string("1")'/>
                  </ns9:Element-441_1>
                </xsl:otherwise>
            </xsl:choose>
        </ns9:Segment-TXI_1>
        <!-- Added on 09 Sep 2009 - SC_Phase3 -->
         
         <!--SHIPTO--><!-- ADDED AS ON 16 OCT -->
        <xsl:for-each select="imp1:PurchaseOrderSchedule">
       <ns9:Loop-N1_2>
       <xsl:if test="imp1:UserArea/imp1:ShipToParty/imp1:Name[1] != ''">
        <ns9:Segment-N1_2>
          <ns9:Element-98_4>
              <xsl:value-of select='string("ST")'/>
            </ns9:Element-98_4>
            <ns9:Element-93_1>
              <xsl:value-of select="substring(imp1:UserArea/imp1:ShipToParty/imp1:Name[1],1.0,60.0)"/>
            </ns9:Element-93_1>
            <ns9:Element-66_2>
              <xsl:value-of select='string("93")'/>
            </ns9:Element-66_2>
            <ns9:Element-67_1>
              <xsl:value-of select="imp1:UserArea/imp1:ShipToParty/imp1:PartyIDs/imp1:ID"/>
            </ns9:Element-67_1>
          </ns9:Segment-N1_2>
         </xsl:if>
         <!--  Updated as per new mapping (Robin's email dated 21st Oct 2009) to set multiple "Name" fields from input --> 
          <!--<xsl:variable name="LENGTH_ST">  
                 <xsl:value-of select="string-length(imp1:UserArea/imp1:ShipToParty/imp1:Name)"/>
          </xsl:variable> 
            <xsl:if test="$LENGTH_ST > 60.0">-->   <!-- ADDED AS ON 8 OCT-->
         <xsl:if test="imp1:UserArea/imp1:ShipToParty/imp1:Name[2] != '' or imp1:UserArea/imp1:ShipToParty/imp1:Name[3] != ''">
          <ns9:Segment-N2>
            <xsl:if test="imp1:UserArea/imp1:ShipToParty/imp1:Name[2] != ''">
                <ns9:Element-93_1>
                  <xsl:value-of select="substring(imp1:UserArea/imp1:ShipToParty/imp1:Name[2],1.0,60.0)"/>
                </ns9:Element-93_1>
            </xsl:if>
            <xsl:if test="imp1:UserArea/imp1:ShipToParty/imp1:Name[3] != ''">          
                <ns9:Element-93>
                  <xsl:value-of select="substring(imp1:UserArea/imp1:ShipToParty/imp1:Name[3],1.0,60.0)"/>
                </ns9:Element-93>
          </xsl:if>
          </ns9:Segment-N2>          
          </xsl:if>
          <xsl:if test="imp1:UserArea/imp1:ShipToParty/imp1:Name[4] != '' or imp1:UserArea/imp1:ShipToParty/imp1:Name[5] != ''">
          <ns9:Segment-N2>
            <xsl:if test="imp1:UserArea/imp1:ShipToParty/imp1:Name[4] != ''">
                <ns9:Element-93_1>
                  <xsl:value-of select="substring(imp1:UserArea/imp1:ShipToParty/imp1:Name[4],1.0,60.0)"/>
                </ns9:Element-93_1>
            </xsl:if>
            <xsl:if test="imp1:UserArea/imp1:ShipToParty/imp1:Name[5] != ''">
                <ns9:Element-93>
                  <xsl:value-of select="substring(imp1:UserArea/imp1:ShipToParty/imp1:Name[5],1.0,60.0)"/>
                </ns9:Element-93>
            </xsl:if>
          </ns9:Segment-N2>
          </xsl:if>          
          <!--  Updated as per new mapping (Robin's email dated 21st Oct 2009) to set multiple "Name" fields from input --> 
             <!--Changed  AS ON 19 MAR  -->  
             <xsl:if test='(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineOne!="") or (imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineTwo != "")'>
            <ns9:Segment-N3>
             <xsl:if test='(string-length(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineOne) &lt;= 55)'>
            <ns9:Element-166>
              <xsl:value-of select="imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineOne"/>
            </ns9:Element-166>
            </xsl:if>
            <xsl:if test='(string-length(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineOne) &gt; 55)'>
            <ns9:Element-166>
               <xsl:value-of select="concat(substring(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineOne,1,54),'+')"/>
            </ns9:Element-166>
            </xsl:if>
            <xsl:if test='(string-length(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineTwo) &lt;= 55)'>
            <ns9:Element-166_1>
              <xsl:value-of select="imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineTwo"/>
            </ns9:Element-166_1>
            </xsl:if>
             <xsl:if test='(string-length(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineTwo) &gt; 55)'>
            <ns9:Element-166_1>
              <xsl:value-of select="concat(substring(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineTwo,1,54),'+')"/>
            </ns9:Element-166_1>
            </xsl:if>
          </ns9:Segment-N3> 
          </xsl:if>
          <!--Changed  AS ON 22-APR -->  
          <!--ADDED AS ON 16 OCT -->
                   <!--Changed  AS ON 19 MAR  -->  
            <xsl:if test='(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineThree!="") or (imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineFour != "")'>
              <ns9:Segment-N3>
              <xsl:if test='(string-length(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineThree) &lt;= 55)'>
                <ns9:Element-166>
                  <xsl:value-of select="imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineThree"/>
                </ns9:Element-166>
                </xsl:if>
                <xsl:if test='(string-length(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineThree) &gt; 55)'>
                <ns9:Element-166>
                 <xsl:value-of select="concat(substring(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineThree,1,54),'+')"/>
                </ns9:Element-166>
                </xsl:if>
                 <xsl:if test='(string-length(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineFour) &lt;= 55)'>
                <ns9:Element-166_1>
                  <xsl:value-of select="imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineFour"/>
                </ns9:Element-166_1>
                </xsl:if>
                <xsl:if test='(string-length(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineFour) &gt; 55)'>
                <ns9:Element-166_1>
                  <xsl:value-of select="concat(substring(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:LineFour,1,54),'+')"/>
                </ns9:Element-166_1>
                </xsl:if>
              </ns9:Segment-N3>
            </xsl:if>
           <!--Changed  AS ON 22-APR -->  
           <xsl:if test='(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CityName != "") or (imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:PostalCode != "") or (imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CountryCode != "") or (imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CountrySubDivisionCode != "")'>
           <ns9:Segment-N4><!-- ADDED AS ON 23 OCT -->
            <ns9:Element-19>
              <xsl:value-of select="imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CityName"/>
            </ns9:Element-19>
           <!-- <xsl:if test='((imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CountryCode = "US") or (imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CountryCode ="CA"))'>
              <ns9:Element-156>
                <xsl:value-of select="imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CountrySubDivisionCode"/>
              </ns9:Element-156>
            </xsl:if>--><!-- Removed on 18 MAR-->
           
           
           <!-- Commented on 1Feb2010
            <ns9:Element-116>
              <xsl:value-of select="imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:PostalCode"/>
            </ns9:Element-116>
            
            -->
            
            <!-- Postal code changes as per #174 - 1Feb2010 and 4Feb2010-->
            
               <xsl:choose>
                            <xsl:when test='contains(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:PostalCode,"-") and (imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:PostalCode != "")'>
                            
                                <ns9:Element-116>
                                  <xsl:value-of select="translate(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:PostalCode,'-','')"/>
                                </ns9:Element-116>
                                
                            </xsl:when>
                         
                            <xsl:when test='contains(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:PostalCode," ") and (imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:PostalCode != "")'>
                            
                                <ns9:Element-116>
                                  <xsl:value-of select="translate(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:PostalCode,' ','')"/>
                                </ns9:Element-116>
                                
                            </xsl:when>
                            
                             <xsl:when test='((imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:PostalCode = "") and (imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CityName != ""))'>
                                <ns9:Element-116>
                                  <xsl:value-of select='string("00000")'/>
                                </ns9:Element-116>
                              </xsl:when>
                            
                            
                            <xsl:otherwise>
                                    <ns9:Element-116>
                                            <xsl:value-of select="imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:PostalCode"/>
                                     </ns9:Element-116>
                            </xsl:otherwise>
                    
                    </xsl:choose>
                    
                <!-- End of Postal Code changes incorporated on 4Feb2010 -->
             
            <ns9:Element-26_1>
              <xsl:value-of select="imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CountryCode"/>
            </ns9:Element-26_1>
            <xsl:if test ="imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:ID !=''"> <!-- Added as on 3 Nov the "If" condition -->
            <ns9:Element-309_6>
              <xsl:value-of select="string(93.0)"/>
            </ns9:Element-309_6>
            <ns9:Element-310>
              <xsl:value-of select="imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:ID"/>
            </ns9:Element-310>
            </xsl:if>
           <!-- <xsl:if test='((imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CountryCode != "US") and (imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CountryCode !="CA"))'>-->
              <!-- Changed as on 22-APR-->
                          
               <!-- Added choose when condition on April-24 2009 to convert contrydivision name  to  code-->
                <xsl:if test="(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CountrySubDivisionCode !='')">
             <xsl:choose>
              <xsl:when test="(string-length(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CountrySubDivisionCode) &lt;= 3)">
              <ns9:Element-1715>
              <!--Changed on April-22-->
               <xsl:value-of select='orcl:lookup-dvm("Country Subdivisions","Target",imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CountrySubDivisionCode,"EDICode",imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CountrySubDivisionCode)'/>
              <!--  <xsl:value-of select="imp1:Location/imp1:Address/imp1:CountrySubDivisionCode"/> -->
              </ns9:Element-1715>
              </xsl:when>
              <xsl:when test="(string-length(imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CountrySubDivisionCode) &gt; 3)">
              <ns9:Element-1715>
              <xsl:value-of select='orcl:lookup-dvm("Country Subdivisions","Target",imp1:UserArea/imp1:ShipToParty/imp1:Location/imp1:Address/imp1:CountrySubDivisionCode,"EDICode","ZZZ")'/> 
              
              </ns9:Element-1715>
          </xsl:when>
          </xsl:choose>
            </xsl:if>
          </ns9:Segment-N4> 
          </xsl:if>
          <!--Added as on 2 DEC-->
          <xsl:if test='((imp1:Note[1] !="") and (imp1:Note[1]/@author = "Emerson Location Identifier"))'>
          <ns9:Segment-REF_2>
            <ns9:Element-128_5>
              <xsl:value-of select='string("4C")'/>
            </ns9:Element-128_5>
            <ns9:Element-127_1>
              <xsl:value-of select="imp1:Note[1]"/>
            </ns9:Element-127_1>
          </ns9:Segment-REF_2>
        </xsl:if>
        <xsl:if test='((imp1:Note[2] !="") and (imp1:Note[2]/@author = "Kanban Card Number"))'>
          <ns9:Segment-REF_2>
            <ns9:Element-128_5>
              <xsl:value-of select='string("KE")'/>
            </ns9:Element-128_5>
            <ns9:Element-127_1>
              <xsl:value-of select="imp1:Note[2]"/>
            </ns9:Element-127_1>
          </ns9:Segment-REF_2>
    </xsl:if>   
    
   <!-- <xsl:for-each select="imp1:UserArea/imp1:ShipToParty/imp1:Contact">-->
        <xsl:if test='((imp1:UserArea/imp1:ShipToParty/imp1:Contact[1]/imp1:Name !="") or (imp1:UserArea/imp1:ShipToParty/imp1:Contact[1]/imp1:Communication[3]/imp1:DialNumber != "") or (imp1:UserArea/imp1:ShipToParty/imp1:Contact[1]/imp1:Communication[2]/imp1:DialNumber !="") or (imp1:UserArea/imp1:ShipToParty/imp1:Contact[1]/imp1:Communication[1]/imp1:URI != ""))'> 
        <ns9:Segment-PER_2>
            <ns9:Element-366_2>
              <xsl:value-of select='string("BD")'/>
            </ns9:Element-366_2>
            <xsl:if test='imp1:UserArea/imp1:ShipToParty/imp1:Contact[1]/imp1:Name !=""'>
            <ns9:Element-93>
              <xsl:value-of select="imp1:UserArea/imp1:ShipToParty/imp1:Contact[1]/imp1:Name"/>
            </ns9:Element-93>
            </xsl:if>
            
            <xsl:if test="imp1:UserArea/imp1:ShipToParty/imp1:Contact[1]/imp1:Communication[3]/imp1:DialNumber != ''"> 
            <ns9:Element-365_3>
              <xsl:value-of select='string("TE")'/>
            </ns9:Element-365_3>
            <ns9:Element-364>
              <xsl:value-of select="imp1:UserArea/imp1:ShipToParty/imp1:Contact[1]/imp1:Communication[3]/imp1:DialNumber"/>
            </ns9:Element-364>
           </xsl:if> 
           
            <xsl:if test="imp1:UserArea/imp1:ShipToParty/imp1:Contact[1]/imp1:Communication[2]/imp1:DialNumber !='' ">
            <ns9:Element-365_4>
              <xsl:value-of select='string("FX")'/>
            </ns9:Element-365_4>
            <ns9:Element-364_1>
              <xsl:value-of select="imp1:UserArea/imp1:ShipToParty/imp1:Contact[1]/imp1:Communication[2]/imp1:DialNumber"/> 
            </ns9:Element-364_1>
           </xsl:if>
           
            <xsl:if test='imp1:UserArea/imp1:ShipToParty/imp1:Contact[1]/imp1:Communication[1]/imp1:URI != ""'>
            <ns9:Element-365_5>
              <xsl:value-of select='string("EM")'/>
            </ns9:Element-365_5>
            <ns9:Element-364_2>
              <xsl:value-of select="imp1:UserArea/imp1:ShipToParty/imp1:Contact[1]/imp1:Communication[1]/imp1:URI"/>
            </ns9:Element-364_2>
            </xsl:if>
          </ns9:Segment-PER_2>
        </xsl:if>
         
           <xsl:if test='imp1:UserArea/imp1:BuyerContact/imp1:Name !=""'>
            <ns9:Segment-PER_2>
             <ns9:Element-366_2>
              <xsl:value-of select='string("RQ")'/>
            </ns9:Element-366_2>
            <ns9:Element-93>
              <xsl:value-of select="imp1:UserArea/imp1:BuyerContact/imp1:Name"/>
            </ns9:Element-93>
            </ns9:Segment-PER_2>
           </xsl:if> 

        <!--<ns9:Loop-SCH>--> <!-- Removed Loop-SCH and updated Segment-SCH to use value within Loop-N1_2 18-Sep SC_Phase3 -->
          <ns9:Segment-SCH_1>
            <ns9:Element-380_2>
              <xsl:value-of select="imp1:Quantity"/>
            </ns9:Element-380_2>
            <xsl:if test="imp1:Quantity/@unitCode !=''">
            <ns9:Element-355>
            
             <!-- <xsl:value-of select="imp1:Quantity/@unitCode"/>-->
             <xsl:value-of select='orcl:lookup-dvm("UnitOfMeasure","Target",imp1:Quantity/@unitCode,"EDI",imp1:Quantity/@unitCode)'/>
            </ns9:Element-355>
            </xsl:if>
            <xsl:if test="imp1:Quantity/@unitCode =''">
            <ns9:Element-355>
               <xsl:value-of select="imp1:Quantity/@unitCode"/>
            </ns9:Element-355>
            </xsl:if>
            
            
            <!--<xsl:if test="imp1:RequiredDeliveryDateTime !=''">
            <ns9:Element-374_5>
              <xsl:value-of select="string('112')"/>
            </ns9:Element-374_5>
            <ns9:Element-373>
             <xsl:value-of select="concat(substring(imp1:RequiredDeliveryDateTime,1.0,4.0),substring(imp1:RequiredDeliveryDateTime,6.0,2.0),substring(imp1:RequiredDeliveryDateTime,9.0,2.0))"/> 
            </ns9:Element-373>
            </xsl:if>
            <xsl:if test="imp1:UserArea/imp1:RequestedShipDateTime !=''">
            <ns9:Element-374>
              <xsl:value-of select="string('010')"/>
            </ns9:Element-374>
            <ns9:Element-373_1>
             <xsl:value-of select="concat(substring(imp1:UserArea/imp1:RequestedShipDateTime,1.0,4.0),substring(imp1:UserArea/imp1:RequestedShipDateTime,6.0,2.0),substring(imp1:UserArea/imp1:RequestedShipDateTime,9.0,2.0))"/> 
            </ns9:Element-373_1>
            </xsl:if>-->
            
           <xsl:choose>
            <xsl:when test="imp1:RequiredDeliveryDateTime !=''">
            <ns9:Element-374_7>
              <xsl:value-of select="string('112')"/>
            </ns9:Element-374_7>
            <ns9:Element-373>
             <xsl:value-of select="concat(substring(imp1:RequiredDeliveryDateTime,1.0,4.0),substring(imp1:RequiredDeliveryDateTime,6.0,2.0),substring(imp1:RequiredDeliveryDateTime,9.0,2.0))"/> <!-- ADDED AS ON 29SEP -->
            </ns9:Element-373>
            </xsl:when>
            
            <xsl:when test="((imp1:RequiredDeliveryDateTime ='') and (imp1:UserArea/imp1:RequestedShipDateTime !=''))">
            <ns9:Element-374_7>
              <xsl:value-of select="string('112')"/>
            </ns9:Element-374_7>
            <ns9:Element-373>
             <xsl:value-of select="concat(substring(imp1:UserArea/imp1:RequestedShipDateTime,1.0,4.0),substring(imp1:UserArea/imp1:RequestedShipDateTime,6.0,2.0),substring(imp1:UserArea/imp1:RequestedShipDateTime,9.0,2.0))"/> <!-- ADDED AS ON 22 OCT -->
            </ns9:Element-373>
            </xsl:when>
            
            <xsl:when test="((imp1:RequiredDeliveryDateTime ='') and (imp1:UserArea/imp1:RequestedShipDateTime =''))">
            <ns9:Element-374_7>
              <xsl:value-of select="string('112')"/>
            </ns9:Element-374_7>
            <ns9:Element-373>
             <xsl:value-of select="concat(substring($Current_date,1.0,4.0),substring($Current_date,6.0,2.0),substring($Current_date,9.0,2.0))"/><!-- ADDED AS ON 22 OCT -->
            </ns9:Element-373>
            </xsl:when>
            <xsl:otherwise>
            <ns9:Element-374_7>
              <xsl:value-of select="string('112')"/>
            </ns9:Element-374_7>
            <ns9:Element-373>
             <xsl:value-of select="concat(substring($Current_date,1.0,4.0),substring($Current_date,6.0,2.0),substring($Current_date,9.0,2.0))"/><!-- ADDED AS ON 22 OCT -->
            </ns9:Element-373>
            </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="imp1:UserArea/imp1:RequestedShipDateTime !=''">
            <ns9:Element-374_8>
              <xsl:value-of select="string('010')"/>
            </ns9:Element-374_8>
            <ns9:Element-373_1>
             <xsl:value-of select="concat(substring(imp1:UserArea/imp1:RequestedShipDateTime,1.0,4.0),substring(imp1:UserArea/imp1:RequestedShipDateTime,6.0,2.0),substring(imp1:UserArea/imp1:RequestedShipDateTime,9.0,2.0))"/> <!-- ADDED AS ON 22 OCT -->
            </ns9:Element-373_1>
            </xsl:if>
            
            <ns9:Element-350_1>
              <xsl:value-of select="imp1:LineNumber"/>
            </ns9:Element-350_1>
          </ns9:Segment-SCH_1>
        <!--</ns9:Loop-SCH>-->  <!-- Removed Loop-SCH and updated Segment-SCH to use value within Loop-N1_2 18-Sep SC_Phase3 -->
            </ns9:Loop-N1_2> 
          </xsl:for-each> <!-- ADDED AS ON 16 OCT -->     
         </xsl:for-each>
      </ns9:Loop-PO1> 
        <ns9:Loop-CTT> 
          <ns9:Segment-CTT>
            <ns9:Element-354>
              <xsl:value-of select="count(/inp1:CustomProcessPO/ProcessPO/DataArea/imp1:PurchaseOrder/imp1:PurchaseOrderLine)"/>
            </ns9:Element-354>
          </ns9:Segment-CTT>
        </ns9:Loop-CTT>      
        <ns9:Segment-SE>
            <ns9:Element-96>
                <xsl:value-of select='string("#SegmentCount#")'/>
            </ns9:Element-96>
            <!--<ns9:Element-329>
                <xsl:value-of select="orcl:lookup-table('SC_MASTER_TRANSACTION','FLOW_ID_1',$flowID,'ST_CONTROL','jdbc:polite4:system/any@142.176.225.81:1531:OraESB')"/>
            </ns9:Element-329> -->
            <ns9:Element-329>
              <!--<xsl:value-of select="string('#ControlNumber#')"/>-->
              <xsl:value-of select="$SC_SeqNo"/>
            </ns9:Element-329>
        </ns9:Segment-SE>
      </xsl:for-each>  
       <!--<ns9:Segment-GE>
        <ns9:Element-97>
          <xsl:value-of select="count(/inp1:CustomProcessPO/ProcessPO/DataArea/imp1:PurchaseOrder)"/>
        </ns9:Element-97>
      </ns9:Segment-GE>-->
    </ns9:Transaction-850>
      <Message_id>
        <xsl:value-of select="/inp1:CustomProcessPO/Message_id"/>
      </Message_id>
      <Message_direction>
        <xsl:value-of select="/inp1:CustomProcessPO/Message_direction"/>
      </Message_direction>
      <Sender_Document_number>
        <xsl:value-of select="/inp1:CustomProcessPO/Sender_Document_number"/>
      </Sender_Document_number>
      <Sender_Message_type>
        <xsl:value-of select="/inp1:CustomProcessPO/Sender_Message_type"/>
      </Sender_Message_type>
      <Sender_Message_standard>
        <xsl:value-of select="/inp1:CustomProcessPO/Sender_Message_standard"/>
      </Sender_Message_standard>
      <Sender_Transaction_type>
        <xsl:value-of select="/inp1:CustomProcessPO/Sender_Transaction_type"/>
      </Sender_Transaction_type>
      <Sender_Transaction_subtype>
        <xsl:value-of select="/inp1:CustomProcessPO/Sender_Transaction_subtype"/>
      </Sender_Transaction_subtype>
      <Sender_System_type>
        <xsl:value-of select="/inp1:CustomProcessPO/Sender_System_type"/>
      </Sender_System_type>
      <Sender_Id>
        <xsl:value-of select="/inp1:CustomProcessPO/Sender_Id"/>
      </Sender_Id>
      <Sender_Site_Id>
        <xsl:value-of select="/inp1:CustomProcessPO/Sender_Site_Id"/>
      </Sender_Site_Id>
      <Sender_Name>
        <xsl:value-of select="/inp1:CustomProcessPO/Sender_Name"/>
      </Sender_Name>
      <Sender_Type>
        <xsl:value-of select="/inp1:CustomProcessPO/Sender_Type"/>
      </Sender_Type>
      <Receiver_System_type>
        <xsl:value-of select="/inp1:CustomProcessPO/Receiver_System_type"/>
      </Receiver_System_type>
      <Receiver_Id>
        <xsl:value-of select="/inp1:CustomProcessPO/Receiver_Id"/>
      </Receiver_Id>
      <Receiver_Site_id>
        <xsl:value-of select="/inp1:CustomProcessPO/Receiver_Site_id"/>
      </Receiver_Site_id>
      <Receiver_Name>
        <xsl:value-of select="/inp1:CustomProcessPO/Receiver_Name"/>
      </Receiver_Name>
      <Receiver_type>
        <xsl:value-of select="/inp1:CustomProcessPO/Receiver_type"/>
      </Receiver_type>
      <File_name>
        <xsl:value-of select="/inp1:CustomProcessPO/File_name"/>
      </File_name>
      <Record_total>
        <xsl:value-of select="/inp1:CustomProcessPO/Record_total"/>
      </Record_total>
      <Record_number>
        <xsl:value-of select="/inp1:CustomProcessPO/Record_number"/>
      </Record_number>
      <Flow_id_1>
        <xsl:value-of select="/inp1:CustomProcessPO/Flow_id_1"/>
      </Flow_id_1>
      <Flow_id_2>
        <xsl:value-of select="/inp1:CustomProcessPO/Flow_id_2"/>
      </Flow_id_2>
      <Flow_id_3>
        <xsl:value-of select="/inp1:CustomProcessPO/Flow_id_3"/>
      </Flow_id_3>
      <Send_on_fail>
        <xsl:value-of select="/inp1:CustomProcessPO/Send_on_fail"/>
      </Send_on_fail>
      <Division_name>
        <xsl:value-of select="/inp1:CustomProcessPO/Division_name"/>
      </Division_name>
      <Division_format>
        <xsl:value-of select="/inp1:CustomProcessPO/Division_format"/>
      </Division_format>
      <Trading_partner_1_name>
        <xsl:value-of select="/inp1:CustomProcessPO/Trading_partner_1_name"/>
      </Trading_partner_1_name>
      <Trading_partner_1_format>
        <xsl:value-of select="/inp1:CustomProcessPO/Trading_partner_1_format"/>
      </Trading_partner_1_format>
      <Trading_partner_1_date_from>
        <xsl:value-of select="/inp1:CustomProcessPO/Trading_partner_1_date_from"/>
      </Trading_partner_1_date_from>
      <Trading_partner_1_date_to>
        <xsl:value-of select="/inp1:CustomProcessPO/Trading_partner_1_date_to"/>
      </Trading_partner_1_date_to>
      <Trading_partner_2_name>
        <xsl:value-of select="/inp1:CustomProcessPO/Trading_partner_2_name"/>
      </Trading_partner_2_name>
      <Trading_partner_2_format>
        <xsl:value-of select="/inp1:CustomProcessPO/Trading_partner_2_format"/>
      </Trading_partner_2_format>
      <Trading_partner_2_date_from>
        <xsl:value-of select="/inp1:CustomProcessPO/Trading_partner_2_date_from"/>
      </Trading_partner_2_date_from>
      <Trading_partner_2_date_to>
        <xsl:value-of select="/inp1:CustomProcessPO/Trading_partner_2_date_to"/>
      </Trading_partner_2_date_to>
      <Trading_partner_3_name>
        <xsl:value-of select="/inp1:CustomProcessPO/Trading_partner_3_name"/>
      </Trading_partner_3_name>
      <Trading_partner_3_format>
        <xsl:value-of select="/inp1:CustomProcessPO/Trading_partner_3_format"/>
      </Trading_partner_3_format>
      <Trading_partner_3_date_from>
        <xsl:value-of select="/inp1:CustomProcessPO/Trading_partner_3_date_from"/>
      </Trading_partner_3_date_from>
      <Trading_partner_3_date_to>
        <xsl:value-of select="/inp1:CustomProcessPO/Trading_partner_3_date_to"/>
      </Trading_partner_3_date_to>
      <Logistics_1_name>
        <xsl:value-of select="/inp1:CustomProcessPO/Logistics_1_name"/>
      </Logistics_1_name>
      <Logistics_1_format>
        <xsl:value-of select="/inp1:CustomProcessPO/Logistics_1_format"/>
      </Logistics_1_format>
      <Logistics_1_date_from>
        <xsl:value-of select="/inp1:CustomProcessPO/Logistics_1_date_from"/>
      </Logistics_1_date_from>
      <Logistics_1_date_to>
        <xsl:value-of select="/inp1:CustomProcessPO/Logistics_1_date_to"/>
      </Logistics_1_date_to>
      <Logistics_2_name>
        <xsl:value-of select="/inp1:CustomProcessPO/Logistics_2_name"/>
      </Logistics_2_name>
      <Logistics_2_format>
        <xsl:value-of select="/inp1:CustomProcessPO/Logistics_2_format"/>
      </Logistics_2_format>
      <Logistics_2_date_from>
        <xsl:value-of select="/inp1:CustomProcessPO/Logistics_2_date_from"/>
      </Logistics_2_date_from>
      <Logistics_2_date_to>
        <xsl:value-of select="/inp1:CustomProcessPO/Logistics_2_date_to"/>
      </Logistics_2_date_to>
      <Logistics_3_name>
        <xsl:value-of select="/inp1:CustomProcessPO/Logistics_3_name"/>
      </Logistics_3_name>
      <Logistics_3_format>
        <xsl:value-of select="/inp1:CustomProcessPO/Logistics_3_format"/>
      </Logistics_3_format>
      <Logistics_3_date_from>
        <xsl:value-of select="/inp1:CustomProcessPO/Logistics_3_date_from"/>
      </Logistics_3_date_from>
      <Logistics_3_date_to>
        <xsl:value-of select="/inp1:CustomProcessPO/Logistics_3_date_to"/>
      </Logistics_3_date_to>
      <Compliance_result>
        <xsl:value-of select="/inp1:CustomProcessPO/Compliance_result"/>
      </Compliance_result>
      <Attribute1>
        <xsl:value-of select="/inp1:CustomProcessPO/Attribute1"/>
      </Attribute1>
      <Attribute2>
        <xsl:value-of select="/inp1:CustomProcessPO/Attribute2"/> 
         
      </Attribute2>
      <Attribute3>
        <xsl:value-of select="/inp1:CustomProcessPO/Attribute3"/>
      </Attribute3>
      <Attribute4>
        <xsl:value-of select="/inp1:CustomProcessPO/Attribute4"/>
      </Attribute4>
      <Attribute5>
        <xsl:value-of select="/inp1:CustomProcessPO/Attribute5"/>
      </Attribute5>
      <Attribute6>
      <xsl:value-of select="$SC_SeqNo"/>
        <!--<xsl:value-of select="/inp1:CustomProcessPO/Attribute6"/>-->
      </Attribute6>
      <Attribute7>
        <xsl:value-of select="concat($destination, '_850_', xp20:format-dateTime(xp20:current-dateTime(),'[Y04][M01][D01]_[H01][m01][s01]'),$SC_SeqNo,'.dat')"/>
      </Attribute7>
      <Attribute8>
        <xsl:value-of select="/inp1:CustomProcessPO/Attribute8"/>
      </Attribute8>
      <Attribute9>
        <xsl:value-of select="/inp1:CustomProcessPO/Attribute9"/>
      </Attribute9>
      <Attribute10>
        <xsl:value-of select="/inp1:CustomProcessPO/Attribute10"/>
      </Attribute10>
    </ns3:CustomEDI850>
  </xsl:template>
</xsl:stylesheet>

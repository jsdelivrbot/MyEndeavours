<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Fri May 22 19:13:55 GMT+05:30 2009
  Author:  agupta1
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="FtpUtilProcess"
         targetNamespace="http://xmlns.oracle.com/FtpUtilProcess"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:client="http://xmlns.oracle.com/FtpUtilProcess"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ns1="http://services.emerson.com"
         xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc">
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="client" partnerLinkType="client:FtpUtilProcess"
                     myRole="FtpUtilProcessProvider"
                     partnerRole="FtpUtilProcessRequester"/>
        <partnerLink name="FtpDirGetterProcess"
                     partnerRole="FtpDirGetterProcess_Provider"
                     partnerLinkType="ns1:FtpDirGetterProcess"/>
    </partnerLinks>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="inputVariable"
                  messageType="client:FtpUtilProcessRequestMessage"/>
        <variable name="outputVariable"
                  messageType="client:FtpUtilProcessResponseMessage"/>
        <variable name="GetDirListing_InputVariable"
                  messageType="ns1:FtpDirGetterProcessRequestMessage"/>
        <variable name="GetDirListing_OutputVariable"
                  messageType="ns1:FtpDirGetterProcessResponseMessage"/>
    </variables>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in FtpUtilProcess.wsdl) -->
        <receive name="receiveInput" partnerLink="client"
                 portType="client:FtpUtilProcess" operation="initiate"
                 variable="inputVariable" createInstance="yes"/>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <switch name="Switch_1">
            <case condition="bpws:getVariableData('inputVariable','payload','/client:FtpUtilProcessProcessRequest/client:ftp_operation') = 'LS'">
                <sequence name="Sequence_1">
                    <assign name="Assign_Inputs">
                        <copy>
                            <from variable="inputVariable" part="payload"
                                  query="/client:FtpUtilProcessProcessRequest/client:ftp_jndi"/>
                            <to variable="GetDirListing_InputVariable"
                                part="jndi"/>
                        </copy>
                        <copy>
                            <from expression="'SIMPLE'"/>
                            <to variable="GetDirListing_InputVariable"
                                part="mode"/>
                        </copy>
                        <copy>
                            <from variable="inputVariable" part="payload"
                                  query="/client:FtpUtilProcessProcessRequest/client:ftp_dir"/>
                            <to variable="GetDirListing_InputVariable"
                                part="dir"/>
                        </copy>
                        <copy>
                            <from variable="inputVariable" part="payload"
                                  query="/client:FtpUtilProcessProcessRequest/client:ftp_host"/>
                            <to variable="GetDirListing_InputVariable"
                                part="host"/>
                        </copy>
                        <copy>
                            <from variable="inputVariable" part="payload"
                                  query="/client:FtpUtilProcessProcessRequest/client:ftp_uid"/>
                            <to variable="GetDirListing_InputVariable"
                                part="uid"/>
                        </copy>
                        <copy>
                            <from variable="inputVariable" part="payload"
                                  query="/client:FtpUtilProcessProcessRequest/client:ftp_pwd"/>
                            <to variable="GetDirListing_InputVariable"
                                part="pwd"/>
                        </copy>
                    </assign>
                    <invoke name="GetDirListing"
                            partnerLink="FtpDirGetterProcess"
                            portType="ns1:FtpDirGetterProcess"
                            operation="getDirectoryListing"
                            inputVariable="GetDirListing_InputVariable"
                            outputVariable="GetDirListing_OutputVariable"/>
                    <assign name="copyDirList">
                        <copy>
                            <from variable="GetDirListing_OutputVariable"
                                  part="dirListing"/>
                            <to variable="outputVariable" part="payload"
                                query="/client:FtpUtilProcessProcessResponse/client:result"/>
                        </copy>
                    </assign>
                </sequence>
            </case>
            <otherwise>
                <assign name="ReturnDefaultMessage">
                    <copy>
                        <from expression="'Need to specify Operation - Eg LS'"/>
                        <to variable="outputVariable" part="payload"
                            query="/client:FtpUtilProcessProcessResponse/client:result"/>
                    </copy>
                </assign>
            </otherwise>
        </switch>
        <invoke name="callbackClient" partnerLink="client"
                portType="client:FtpUtilProcessCallback" operation="onResult"
                inputVariable="outputVariable"/>
    </sequence>
</process>
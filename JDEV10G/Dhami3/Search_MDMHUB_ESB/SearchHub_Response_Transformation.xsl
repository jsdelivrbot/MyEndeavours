<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="../MDMSchemas/ServiceSchemas/MDMService.xsd"/>
      <rootElement name="ServiceReply" namespace="http://www.gssamerica.com/mdm/services"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="../MDMSchemas/ServiceSchemas/ESBResponse.xsd"/>
      <rootElement name="ESBResponse" namespace="http://www.gssamerica.com/mdm/createesbresponse"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [WED JUN 18 11:43:23 IST 2008]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:sample="http://www.oracle.com/XSL/Transform/java/esbext.func.ESBExtensionFunctions"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ns5="http://www.openapplications.org/oagis/9/unqualifieddatatypes/1.1"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                xmlns:ns7="http://www.openapplications.org/oagis/9/currencycode/54217:2001"
                xmlns:ns4="http://www.openapplications.org/oagis/9/qualifieddatatypes/1.1"
                xmlns:ns0="http://www.gssamerica.com/mdm/createesbresponse"
                xmlns:ns1="http://www.openapplications.org/oagis/9/IANAMIMEMediaTypes:2003"
                xmlns:xs="http://www.w3.org/2001/XMLSchema"
                xmlns:ns2="http://www.openapplications.org/oagis/9/codelists"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:tns="http://www.gssamerica.com/mdm/services"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:ns3="http://www.openapplications.org/oagis/9"
                xmlns:ns6="http://www.openapplications.org/oagis/9/unitcode/66411:2001"
                xmlns:ns8="http://www.openapplications.org/oagis/9/languagecode/5639:1988"
                xmlns:nsext="http://www.gssamerica.com/mdm/oagisextensions"
                xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"
                exclude-result-prefixes="xsl xs tns ns5 ns7 ns4 ns0 ns1 ns2 ns3 ns6 ns8 sample bpws ehdr hwf xp20 xref ora ids orcl">
  
  
  <xsl:variable name="permanentAddress">permanentaddress</xsl:variable>
  <xsl:variable name="communicationAddress">communicationaddress</xsl:variable>
  <xsl:variable name="lineOne">Line1</xsl:variable>
  <xsl:variable name="lineTwo">Line2</xsl:variable>
  <xsl:variable name="lineThree">Line3</xsl:variable>
  <xsl:variable name="city">City</xsl:variable>
  <xsl:variable name="country">Country</xsl:variable>
  <xsl:variable name="postalCode">Zipcode</xsl:variable>
  <xsl:variable name="citySubDivision">citySubDivision</xsl:variable>
  <xsl:variable name="title">title</xsl:variable>
  <xsl:variable name="firstName">firstName</xsl:variable>
  <xsl:variable name="middleName">middleName</xsl:variable>
  <xsl:variable name="lastName">lastName</xsl:variable>
  <xsl:variable name="nickName">nickName</xsl:variable>
  <xsl:variable name="gender">gender</xsl:variable>
  <xsl:variable name="DOB">DOB</xsl:variable>
  <xsl:variable name="SSN">SSN</xsl:variable>
  <xsl:variable name="PAN">PAN</xsl:variable>
  <xsl:variable name="primaryEmail">primaryemail</xsl:variable>
  <xsl:variable name="secondaryEmail">secondaryemail</xsl:variable>
  <xsl:variable name="companyEmail">companyemail</xsl:variable>
  <xsl:variable name="attentionOfName">attentionOfName</xsl:variable>
  <xsl:variable name="careOfName">careOfName</xsl:variable>
  <xsl:variable name="state">State</xsl:variable>
                  
   
  <xsl:template match="/">
    <ns0:ESBResponse>
      <xsl:for-each select="/env:Envelope/env:Body/tns:ServiceReply/tns:executionStatus">
        <ns0:Response>
          <ns0:Status>
            <xsl:value-of select="tns:status"/>
          </ns0:Status>
          <ns0:Description>
            <xsl:value-of select="tns:description"/>
          </ns0:Description>
	  <ns0:RecordId>
            <xsl:value-of select="tns:dataObjectId/tns:recordId"/>
	  </ns0:RecordId>
          <ns0:Record>
            <ns0:CustomerRecord>
             
              <xsl:for-each select="tns:dataObjectId/tns:unifiedFields">
                <xsl:choose>
                  <xsl:when test='tns:field/tns:unifiedField/tns:fieldName/tns:name = $title or tns:field/tns:unifiedField/tns:fieldName/tns:name = $firstName or tns:field/tns:unifiedField/tns:fieldName/tns:name = $middleName or tns:field/tns:unifiedField/tns:fieldName/tns:name = $lastName or tns:field/tns:unifiedField/tns:fieldName/tns:name = $nickName'>
                      <xsl:if test="tns:simpleValue/tns:unifiedValue/tns:value/tns:value">
                      <ns3:Name>
                        <xsl:attribute name="sequenceName">
                          <xsl:value-of select="tns:field/tns:unifiedField/tns:fieldName/tns:name"/>
                        </xsl:attribute>
                        <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>                        
                      </ns3:Name>
                    </xsl:if>
                  </xsl:when>           
                   
                </xsl:choose>
                 
              </xsl:for-each>
              
               <xsl:variable name="locationVar" select="tns:dataObjectId/tns:unifiedFields/tns:lookupValue/tns:record/tns:dataElement/tns:field/tns:unifiedField/tns:fieldName/tns:name"/>
                <xsl:if test="$locationVar = $permanentAddress or $locationVar = $communicationAddress">
                 <ns3:Location>
                   <xsl:for-each select="tns:dataObjectId/tns:unifiedFields/tns:lookupValue/tns:record/tns:dataElement">
                      <xsl:choose>
                      <xsl:when test='tns:field/tns:unifiedField/tns:fieldName/tns:name = $permanentAddress or tns:field/tns:unifiedField/tns:fieldName/tns:name = $communicationAddress'>
                       
                        <ns3:Address>
                          <xsl:attribute name="type">
                            <xsl:value-of select="tns:field/tns:unifiedField/tns:fieldName/tns:name"/>
                        </xsl:attribute>                          
                        <xsl:for-each select="tns:lookupValue/tns:record/tns:dataElement">
                         <xsl:if test="tns:field/tns:unifiedField/tns:fieldName/tns:name = $lineOne">
                             <ns3:LineOne>
                                  <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>                                 
                              </ns3:LineOne>    
                         </xsl:if>
                          <xsl:if test="tns:field/tns:unifiedField/tns:fieldName/tns:name = $lineTwo">
                             <ns3:LineTwo>
                                  <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                              </ns3:LineTwo>    
                         </xsl:if>
                         <xsl:if test="tns:field/tns:unifiedField/tns:fieldName/tns:name = $lineThree">
                             <ns3:LineThree>
                                  <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                              </ns3:LineThree>    
                         </xsl:if>
                         <xsl:if test="tns:field/tns:unifiedField/tns:fieldName/tns:name = $city">
                             <ns3:CityName>
                                  <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                              </ns3:CityName>    
                         </xsl:if>
                         <xsl:if test="tns:field/tns:unifiedField/tns:fieldName/tns:name = $country">
                             <ns3:CountryCode>
                                  <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                              </ns3:CountryCode>    
                         </xsl:if>
                          <xsl:if test="tns:field/tns:unifiedField/tns:fieldName/tns:name = $postalCode">
                             <ns3:PostalCode>
                                  <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                              </ns3:PostalCode>    
                         </xsl:if>
                         <xsl:if test="tns:field/tns:unifiedField/tns:fieldName/tns:name = $citySubDivision">
                             <ns3:CitySubDivision>
                                  <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                              </ns3:CitySubDivision>    
                         </xsl:if>                       
                     </xsl:for-each>
                     <xsl:variable name="addressExtVar" select="tns:lookupValue/tns:record/tns:dataElement/tns:field/tns:unifiedField/tns:fieldName/tns:name"/>
                     <xsl:if test="$addressExtVar = $attentionOfName or $addressExtVar = $careOfName or $addressExtVar = $state">
                       <ns3:UserArea>
                        <nsext:CustomerPartyExtensions>
                            <nsext:AddressExtensions>
                                <xsl:for-each select="tns:lookupValue/tns:record/tns:dataElement">
                                  <xsl:choose>
                                    <xsl:when test="tns:field/tns:unifiedField/tns:fieldName/tns:name = $attentionOfName">
                                       <nsext:AttentionOfName>
                                          <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                                        </nsext:AttentionOfName>
                                     </xsl:when>
                                      <xsl:when test="tns:field/tns:unifiedField/tns:fieldName/tns:name = $careOfName">
                                       <nsext:CareOfName>
                                          <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                                        </nsext:CareOfName>
                                     </xsl:when>
                                      <xsl:when test="tns:field/tns:unifiedField/tns:fieldName/tns:name = $state">
                                       <nsext:State>
                                          <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                                        </nsext:State>
                                     </xsl:when>
                                  </xsl:choose>
                                </xsl:for-each>
                                </nsext:AddressExtensions>
                            </nsext:CustomerPartyExtensions>
                        </ns3:UserArea>
                    </xsl:if>
                        </ns3:Address>
                      
                  </xsl:when>
                       </xsl:choose>
                   </xsl:for-each>
                 </ns3:Location>
                </xsl:if>
              <xsl:for-each select="tns:dataObjectId/tns:unifiedFields/tns:lookupValue/tns:record/tns:dataElement">
                <xsl:choose>
                 <xsl:when test='tns:field/tns:unifiedField/tns:fieldName/tns:name = $title or tns:field/tns:unifiedField/tns:fieldName/tns:name = $firstName or tns:field/tns:unifiedField/tns:fieldName/tns:name = $middleName or tns:field/tns:unifiedField/tns:fieldName/tns:name = $lastName or tns:field/tns:unifiedField/tns:fieldName/tns:name = $nickName'>               <xsl:if test="tns:simpleValue/tns:unifiedValue/tns:value/tns:value">
                      <ns3:Name>
                        <xsl:attribute name="sequenceName">
                          <xsl:value-of select="tns:field/tns:unifiedField/tns:fieldName/tns:name"/>
                        </xsl:attribute>
                        <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
              
                      </ns3:Name>
                    </xsl:if>
                  </xsl:when>                  
                
                     
                </xsl:choose>
              </xsl:for-each>
             <xsl:variable name="personExtVar" select="'tns:dataObjectId/tns:unifiedFields/tns:field/tns:unifiedField/tns:fieldName/tns:name'"/>
                <xsl:variable name="personEmailExtVar" select="'tns:dataObjectId/tns:unifiedFields/tns:field/tns:unifiedField/tns:fieldName/tns:name'"/>
          
                <xsl:if test="$personExtVar=$gender or $personExtVar=$DOB or $personExtVar=$SSN or $personExtVar=$PAN or $personEmailExtVar">
                <ns3:UserArea>
                   <ns3:UserArea>
                   <nsext:CustomerPartyExtensions>
                     <nsext:PersonExtentions>
                      <xsl:for-each select="tns:dataObjectId/tns:unifiedFields">
                       <xsl:choose>
                      <xsl:when test='tns:field/tns:unifiedField/tns:fieldName/tns:name = $gender'>
                        <nsext:Gender>
                          <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                        </nsext:Gender>
                      </xsl:when>
                       <xsl:when test='tns:field/tns:unifiedField/tns:fieldName/tns:name = $DOB'>
                        <nsext:DOB>
                          <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                        </nsext:DOB>
                      </xsl:when>
                       <xsl:when test='tns:field/tns:unifiedField/tns:fieldName/tns:name = $SSN'>
                        <nsext:SSN>
                          <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                        </nsext:SSN>
                      </xsl:when>
                       <xsl:when test='tns:field/tns:unifiedField/tns:fieldName/tns:name = $PAN'>
                        <nsext:PAN>
                          <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                        </nsext:PAN>
                      </xsl:when>
                      <xsl:when test='tns:lookupValue/tns:record/tns:dataElement/tns:field/tns:unifiedField/tns:fieldName/tns:name'>
                         <xsl:variable name="emailfield" select='tns:lookupValue/tns:record/tns:dataElement/tns:field/tns:unifiedField/tns:fieldName/tns:name'/>
  
                         <xsl:if test="$emailfield=$primaryEmail or $emailfield=$secondaryEmail or  $emailfield=$companyEmail"> 
                         <nsext:Email> 
                         <xsl:for-each select="tns:lookupValue/tns:record/tns:dataElement">
                           <xsl:choose>
                              <xsl:when test="tns:field/tns:unifiedField/tns:fieldName/tns:name=$primaryEmail">
                                <nsext:PrimaryEmail>
                                 <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                                </nsext:PrimaryEmail>
                              </xsl:when>
                              <xsl:when test="tns:field/tns:unifiedField/tns:fieldName/tns:name=$secondaryEmail">
                                <nsext:SecondaryEmail>
                                 <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                                </nsext:SecondaryEmail>
                              </xsl:when>
                              <xsl:when test="tns:field/tns:unifiedField/tns:fieldName/tns:name=$companyEmail">
                                <nsext:CompanyEmail>
                                 <xsl:value-of select="tns:simpleValue/tns:unifiedValue/tns:value/tns:value"/>
                                </nsext:CompanyEmail>
                                
                              </xsl:when>
                           </xsl:choose>
                         </xsl:for-each>
                        </nsext:Email>
                        </xsl:if>
                      </xsl:when>
                      </xsl:choose>
                    </xsl:for-each>
                 </nsext:PersonExtentions>
               </nsext:CustomerPartyExtensions>
             </ns3:UserArea>
             </ns3:UserArea>
            </xsl:if>
            </ns0:CustomerRecord>
          </ns0:Record>
        </ns0:Response>
      </xsl:for-each>
    </ns0:ESBResponse>
  </xsl:template>
</xsl:stylesheet>
